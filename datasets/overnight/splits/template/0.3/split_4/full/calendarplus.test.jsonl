{"paraphrased": "what is the average length of the meetings that ended at or after 10am", "source": "average length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_450", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that started at or before 10am", "source": "total length of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_310", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended at or after 10am", "source": "total length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_195", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings which start before 3pm", "source": "average length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_90", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "show me the length of meetings who ended later than 3pm", "source": "total length of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_418", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings which started before 10am", "source": "total length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_73", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings which ended on or after 10 am", "source": "average length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_351", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total time for my meetings after 3pm", "source": "total length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_20", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long is the average meeting that starts after 10am", "source": "average length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_49", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "whats the average length of my meetings at 10am or 3pm", "source": "average length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_456", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "which weekly standup or annual review ended at or after 10am", "source": "weekly standup or annual review whose end time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_142", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the date of the annual review that starts at 10 am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_37", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me weekly standups that ends before 10 am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_160", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standups or annual reviews start after 10 am", "source": "weekly standup or annual review whose start time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_219", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review which ends before 10am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_505", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "when is the weekly standup or annual review meeting which ends at 10 am", "source": "weekly standup or annual review whose end time is at most 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_423", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review with start time at least 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_382", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all the weekly standup and annual review that ended after 10am", "source": "weekly standup or annual review whose end time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_76", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standup or annual review started at or after 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_538", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting on jan 2 started at or after 10am", "source": "meeting whose date is jan 2 whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_396", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show meeting for january 2 at 1000 am", "source": "meeting whose date is jan 2 whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_488", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "a meeting on january 2nd and ends at 10am", "source": "meeting whose date is jan 2 whose end time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which meeting is jan 2 before 10 am", "source": "meeting whose date is jan 2 whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what jan 2 meeting started after 10am", "source": "meeting whose date is jan 2 whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_114", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me any meetings that are on january 2nd with an end time thats after 10am", "source": "meeting whose date is jan 2 whose end time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_61", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting on jan 2 started before 10am", "source": "meeting whose date is jan 2 whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_474", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the meeting that starts at 10am on january 2nd", "source": "meeting whose date is jan 2 whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_537", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "list all meetings on january 2nd which start at 10am or earlier", "source": "meeting whose date is jan 2 whose start time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_354", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meetings are held on january 2nd starting after 10am", "source": "meeting whose date is jan 2 whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_470", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what is the length of the meeting that is on january 2nd and is three hours long", "source": "length of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_182", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting on jan 2 end", "source": "end time of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_test_10", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me the meeting that lasts 3 hours that took place on jan 2", "source": "attendee of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_412", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what meeting date is january 2 and lest than 3 hours long", "source": "date of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_test_138", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that started at or after 10am end", "source": "end time of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_457", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me all meetings that start at 10am and end at 3 pm", "source": "start time of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_82", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me all meetings with a start time of at least 10am or 3pm", "source": "date of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_203", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "where is a meeting that ends between 10am  3pm", "source": "location of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string location)))", "qid": "calendarplus_train_422", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that ended before 3pm start", "source": "start time of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_53", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "on what dates were there meetings which ended before 10am", "source": "date of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_test_130", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who is the attendee of the meeting which starts at 10 am or 3 pm", "source": "attendee of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_train_190", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that started before 3pm start", "source": "start time of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_404", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that started before 3pm", "source": "length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_88", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the end time of meetings starting after 10am", "source": "end time of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_test_114", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the three hour meeting no later than jan 2", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_296", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "name a three hour meeting after jan 2", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_134", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "three hours long meeting not before jan 2", "source": "meeting whose length is three hours whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_380", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings after jan 2 that are three hours", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings before jan 2 shorter than three hours", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_314", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings after january 2nd that are three hours long", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings that are three hours long and are no later than january 2nd", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_236", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time did the three hour meeting that alice went to start", "source": "start time of meeting whose length is three hours and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_train_19", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what time does my three hour meeting start with alice", "source": "start time of meeting whose length is three hours and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_train_425", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of meeting not before jan 2", "source": "number of meeting whose date is at least jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2)))))", "qid": "calendarplus_train_350", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2)))))"}
{"paraphrased": "three hours or longer", "source": "three hours or one hour whose length is larger than three hours", "target": "(call listValue (call filter (call concat (number 3 en.hour) (number 1 en.hour)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_94", "anonymized_target": "(call listValue (call filter (call concat (ANON_NUMBER) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings with a date of january 2nd or before", "source": "meeting whose date is jan 2 whose date is smaller than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the average length of the important meetings that end at 10am", "source": "average length of meeting that is important and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_202", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "number of meeting which ends at 10am with alice as attendee", "source": "number of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice)))", "qid": "calendarplus_test_101", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me the length of meetings with people whove been to less than two meetings", "source": "meeting whose length is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_372", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "show me all of the meetings that are located in the same place as at least one other meeting", "source": "meeting whose location is location that is location of at least two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >=) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_239", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "show me all meetings that arent at the same place", "source": "meeting whose length is location that is location of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_205", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meeting has an attendee present who attended fewer than two meetings", "source": "meeting whose attendee is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_test_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "meeting with attendee who has attended less than two meetings", "source": "meeting whose attendee is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_test_46", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meeting was in two places", "source": "meeting whose location is location that is location of two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_533", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meeting was in the place where two or fewer meetings were held", "source": "meeting whose location is location that is location of at most two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string <=) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_333", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "when is the meeting that shares an attendee conducted", "source": "meeting whose date is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_test_77", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meetings do i have that have multiple sessions", "source": "meeting whose location is location that is location of more than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_84", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "where is the meeting that shares an attendee conducted", "source": "meeting whose location is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_368", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "how many people attended the meeting on jan 2", "source": "number of person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))))", "qid": "calendarplus_train_75", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))))"}
{"paraphrased": "location number of meeting on jan 2", "source": "number of location that is location of meeting whose date is jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))))", "qid": "calendarplus_train_224", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))))"}
{"paraphrased": "how many meeting places do i have on jan 2", "source": "number of location that is location of meeting whose date is jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))))", "qid": "calendarplus_train_504", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))))"}
{"paraphrased": "what time did the three or more hour weekly standup start", "source": "start time of weekly standup whose length is at least three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_523", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "end time of weekly standup not more than three hours long", "source": "end time of weekly standup whose length is at most three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_482", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "start time of weekly standup that is smaller than three hours", "source": "start time of weekly standup whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_63", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "length of weekly standup is not more than three hours", "source": "length of weekly standup whose length is at most three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_39", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what is the end time of the weekly standup that lasts as least three hours long", "source": "end time of weekly standup whose length is at least three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_282", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what weekly standup events are shorter then three hours", "source": "start time of weekly standup whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_154", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what time did the three hour or longer weekly standup end", "source": "end time of weekly standup whose length is at least three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_398", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what is the end time of the weekly standup which lasted three hours or less", "source": "end time of weekly standup whose length is at most three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_167", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meetings end at 10am at the latest", "source": "start time of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string start_time)))", "qid": "calendarplus_train_272", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "where was the meeting that ended at or before 10am", "source": "location of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string location)))", "qid": "calendarplus_test_48", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meeting that begins at 10am at the latest", "source": "length of meeting whose start time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length)))", "qid": "calendarplus_train_223", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "show me the meeting whose end time is at most 10am", "source": "length of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length)))", "qid": "calendarplus_train_430", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "end time of meeting that starts not after 10am", "source": "end time of meeting whose start time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string end_time)))", "qid": "calendarplus_train_543", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "list the attendees of meetings which ended at 10am or before", "source": "attendee of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string attendee)))", "qid": "calendarplus_train_481", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "the meetings starts at the most by 10am", "source": "length of meeting whose start time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length)))", "qid": "calendarplus_test_78", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that ended at or before 10am", "source": "attendee of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string attendee)))", "qid": "calendarplus_train_438", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "where are the meetings held whose end times are no later than 10am", "source": "location of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string location)))", "qid": "calendarplus_train_217", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what is the location of the meeting that ends at the latest at 10am", "source": "location of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string location)))", "qid": "calendarplus_train_105", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what is the total length of important meetings alice has attended", "source": "total length of meeting that is important and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_268", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long is the important meeting at greenberg cafe", "source": "total length of meeting that is important and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_180", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many people are attending the meeting that ends at 10 am", "source": "number of person that is attendee of meeting whose end time is 10am", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))))", "qid": "calendarplus_train_128", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "how many places have there been meetings that start at 10am", "source": "number of location that is location of meeting whose start time is 10am", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)))))", "qid": "calendarplus_train_21", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "how many location of meeting ends at 10am", "source": "number of location that is location of meeting whose end time is 10am", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))))", "qid": "calendarplus_train_1", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "how many locations were 10am meetings held at", "source": "number of location that is location of meeting whose start time is 10am", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)))))", "qid": "calendarplus_train_57", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "show me important meeting that is less than three hours", "source": "meeting that is important whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_402", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what important meeting is three or more hours long", "source": "meeting that is important whose length is at least three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_226", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list the meetings which are designated as important and which last at least three hours", "source": "meeting that is important whose length is at least three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_126", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "important meeting that is less than three hours long", "source": "meeting that is important whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_498", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what time do the weekly standup meetings on january 2 and after start", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_248", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time did the jan 2 weekly standup end", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_462", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not before jan 2", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_17", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not after jan 2", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_102", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the length of the weekly standup that takes place on january 2nd", "source": "length of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_164", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me the end time of weekly standup on january 2nd or later", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_151", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me what time the weekly meeting on january 2nd ended", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_79", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time was weekly standup on jan 2", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_508", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "how many locations are there for either the weekly standup or annual review", "source": "number of location that is location of weekly standup or annual review", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_test_19", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "how many attendees are there at the weekly standup or annual review meetings", "source": "number of person that is attendee of weekly standup or annual review", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_train_86", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "what was the average length of all meetings prior to jan 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings held on or after january 2", "source": "average length of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_513", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings after jan 2", "source": "average length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_501", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings before january 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_492", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "show me the meeting at the greenberg cafe that takes place on january 2nd", "source": "meeting whose location is greenberg cafe whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_13", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "average length of meeting on jan 2 at greenberg cafe", "source": "average length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_188", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting at the greenberg cafe on jan 2", "source": "average length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_test_3", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me all meetings on january 2nd where alice is attending", "source": "total length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_test_64", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "total length of meeting on jan 2 with alice as attendee", "source": "total length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_test_82", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting on january 2nd at the greenberg cafe", "source": "total length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_265", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the average length of a meeting on january 2 that alice attended", "source": "average length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_256", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the length of the important meeting which ends at 10am", "source": "length of meeting that is important and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_133", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "who went to the important meeting that started at 10am", "source": "attendee of meeting that is important and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string start_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_179", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show me number of meetings at greenberg cafe that started at 10 am", "source": "number of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0))))", "qid": "calendarplus_test_81", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what is the duration of the weekly standup meeting that ends at 10 am", "source": "length of weekly standup whose end time is at most 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_22", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me date of weekly round up that ended at 10 am", "source": "date of weekly standup whose end time is at most 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string date)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_493", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "when did the weekly standup that started before 10am end", "source": "end time of weekly standup whose start time is smaller than 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_26", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what is the end time of weekly standup which is before 10am", "source": "end time of weekly standup whose end time is smaller than 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_111", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly stand up start time and end time is 10 am", "source": "start time of weekly standup whose end time is at most 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_448", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what time did weekly standup end when it ended at or after 10am", "source": "end time of weekly standup whose end time is at least 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_207", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what time did the weekly standup that ran past 10am end", "source": "end time of weekly standup whose end time is larger than 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_427", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "how long was weekly standup when it ended at or before 10am", "source": "length of weekly standup whose end time is at most 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_83", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what is the end time of the weekly standup that ends at least at 10am", "source": "end time of weekly standup whose end time is at least 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_171", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what are the end times of weekly standup that start no later than 10am", "source": "end time of weekly standup whose start time is at most 10am", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_201", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meetings do i have on jan 2 that are shorter then three hours", "source": "meeting whose date is jan 2 whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me the number of meetings on january 2nd with a length of three hours", "source": "number of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour))))", "qid": "calendarplus_train_547", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "how many meetings end at 10 am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_444", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings do i have at 10am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_536", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what three hour meeting started after 10am", "source": "meeting whose length is three hours whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_266", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting that started at 10am was three hours long", "source": "meeting whose length is three hours whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_499", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me meetings longer than 3 hours that started after 10 am", "source": "meeting whose length is three hours whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_168", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "three hours long meeting that is not after 10am", "source": "meeting whose length is three hours whose start time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_365", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "three hours long meeting that ends after 10am", "source": "meeting whose length is three hours whose end time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_458", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "three hours long meeting whose start time is larger than 10am", "source": "meeting whose length is three hours whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_184", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me meetings that last three hours and starts at 10 am", "source": "meeting whose length is three hours whose start time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_279", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "where was the important meeting on jan 2", "source": "location of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string location)))", "qid": "calendarplus_train_358", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when did the important meeting on jan 2 start", "source": "start time of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_373", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "where is the important meeting on jan 2", "source": "location of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string location)))", "qid": "calendarplus_train_472", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "on jan 2nd what was the start time of the meeting marked important", "source": "start time of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_319", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what is important is the end time and date jan 2 of the meeting", "source": "end time of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_train_467", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when do my important three hour meetings end", "source": "end time of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_440", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show priority three hour meeting", "source": "length of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_8", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "meeting attendees are important and length not more than three hours", "source": "attendee of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_546", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me meeting locations that are 3 hours", "source": "location of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string location)))", "qid": "calendarplus_train_25", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the attendee of the meeting that is important that lasts three hours", "source": "attendee of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_18", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the average length of the greenberg cafe meetings on jan 2", "source": "average length of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_test_34", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "show me the length of any meetings with alice that are on january 2nd", "source": "total length of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_311", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings held at the greenberg cafe on january 2", "source": "average length of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_185", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that start at 10am", "source": "jan 2 or jan 3 whose end time is at most 10am", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_112", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "does the weekly standup or annual review ends at 10 am", "source": "weekly standup or annual review whose end time is 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_432", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "how many meetings were held on january 2", "source": "number of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2))))", "qid": "calendarplus_train_464", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what attendee is at a meeting lasting three hours or more", "source": "attendee of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string attendee)))", "qid": "calendarplus_train_225", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "show me all meetings that are 3 hours long", "source": "length of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string length)))", "qid": "calendarplus_train_230", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that was three or more hours long", "source": "attendee of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string attendee)))", "qid": "calendarplus_train_214", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "end time of meeting that lasts at least three hours", "source": "end time of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string end_time)))", "qid": "calendarplus_train_194", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that was fewer than three hours", "source": "length of meeting whose length is smaller than three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))) (string length)))", "qid": "calendarplus_train_253", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
