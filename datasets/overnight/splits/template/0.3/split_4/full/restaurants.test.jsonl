{"paraphrased": "restaurants that has a common meal", "source": "meal that two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_50", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is meal served in at least two restaurants", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_258", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meals do 2 restaurants serve", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1191", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisines are offered by more than one restaurant", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_739", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "cuisine in at least 2 restaurants", "source": "cuisine that is cuisine of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_253", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the two cuisine restaurant", "source": "cuisine that is cuisine of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_249", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood that is neighborhood of at least two restaurant", "source": "neighborhood that is neighborhood of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1290", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal that 2 or less restaurants serve", "source": "meal that at most two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_311", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has fewer than two restaurants", "source": "neighborhood that is neighborhood of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_237", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what kind of cuisine has at least two restaurants", "source": "cuisine that is cuisine of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_995", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant whose cuisine is thai and whose cuisine is thai", "source": "restaurant whose cuisine is thai and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_926", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west that serve thai food", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_10", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west serving lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_101", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants in the midtown west neighborhood", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_337", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a thai restaurant that serves lunch", "source": "restaurant whose cuisine is thai and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1324", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has thai cuisine", "source": "restaurant whose cuisine is thai and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1023", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants in midtown west have thai cuisine", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_128", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that serves lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_427", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a thai restaurant in the midtown neighborhood", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_625", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant in mid town west", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_443", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants are not in midtown west", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_train_1010", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name a restaurant that does not offer  thai food", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_189", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that not serves lunch", "source": "restaurant that not serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "qid": "restaurants_train_831", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants located in midtown west", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_380", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant that is open for lunch", "source": "restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_183", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant that does not serve thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_728", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants that is not thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_test_322", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants are not located in midtown west", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_test_187", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant is located in midtown west", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1040", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some restaurants that doesnt serve thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_744", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that are group friendly", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_1211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "delivery is avaiable", "source": "restaurant that has delivery", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)))", "qid": "restaurants_train_435", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which resturants take reservations", "source": "restaurant that takes reservations", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)))", "qid": "restaurants_train_114", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find a restaurant that takes credit cards", "source": "restaurant that takes credit cards", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)))", "qid": "restaurants_train_583", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants offer waiter service", "source": "restaurant that has waiter service", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)))", "qid": "restaurants_train_53", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "groupfriendly restaurants", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_628", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant which has waiters", "source": "restaurant that has waiter service", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)))", "qid": "restaurants_train_45", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants have takeout", "source": "restaurant that has take-out", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)))", "qid": "restaurants_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which resturants are good for groups", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_1069", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which restaurants deliver", "source": "restaurant that has delivery", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)))", "qid": "restaurants_test_261", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "list all restaurants that have at least 3 star or 5 star ratings", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_704", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "hotel which has a price rating of 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_369", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants in the 2 or 3 dollar sign price range", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants with star ratings of 3 or 5", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_1296", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that have a price rating of 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_1227", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant with a 2 or 3 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_894", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant with 5 stars or 3 stars rating", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_test_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose star rating is 3 stars or 5 stars", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "which restaurants are rated 3 or 5 stars", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_1021", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 2 or 3 price rating", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_874", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "what neighborhood has a thai cafe or pizzeria juno", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1077", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "cuisine that is like thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_20", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what neighborhood is thai cafe or pizzeria juno in", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1059", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of restaurants are thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_test_192", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "cuisine like thai cafe pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_422", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what is the neighborhood of thai cafe or pizzeria juno", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1301", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "thai cafe thats erves pizzeria", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1008", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind fo meals do thai cafe and pizzeria juno serve", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurants in the same neighborhood as thai cafe", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_264", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what meal can you get at either the thai cafe or at pizzeria juno", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_531", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "list all restaurants that have ratings lower than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_test_230", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what restaurant has 2 or greater dollar signs as its price rating", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_472", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "a restaurant that has a 4 star or higher rating", "source": "restaurant whose star rating is larger than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_150", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what resturant has a price rating smaller than two dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_1188", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose price rating is at most 2 dollar signs", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_793", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants at least with a 2 dollar price rating", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_691", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "hotel that has a price rating or more than 2 dollars", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_947", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants price rated 2 dollar signs or less", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_105", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose star rating is smaller than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_520", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what are some restaurants rated 2 dollar signs or more", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants that have between 30 and 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_976", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 2 or 3 dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_171", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "2 dollar signs or 3 dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_78", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with between 30 and 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_1124", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 35 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_test_314", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "find 3 star or 5 star restaurant", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_411", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "has a 2 or 3 dollar sign rating", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_train_674", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated with 3 to 5 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_449", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with at least 30 or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_509", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "what is better a 3 or a 5 star rating", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_165", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "find a 3 star restaurant", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_675", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with a 2 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_826", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "list all restaurants that have ratings above 2 ", "source": "restaurant whose price rating is not 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string !=) (number 2 en.dollar_sign)))", "qid": "restaurants_train_474", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with a 2 dollar sign price rating", "source": "restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_82", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which resturants arent a 3 star rating", "source": "restaurant whose star rating is not 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string !=) (number 3 en.star)))", "qid": "restaurants_test_284", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant does not have a 3 star rating", "source": "restaurant whose star rating is not 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string !=) (number 3 en.star)))", "qid": "restaurants_train_1273", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurants have at least a 3 star rating", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1234", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "list all 2 dollar signs restaurants", "source": "restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_590", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "a 3 star restaurant", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 3 stars", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_207", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which resturants serve lunch and have delivery", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant is good with groups and serves lunch", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_123", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has waiter service and serves lunch", "source": "restaurant that has waiter service and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_862", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has takeout and whose cuisine is thai", "source": "restaurant that has take-out and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_910", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has delivery and that serves lunch", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_936", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thia resturants have waiter service", "source": "restaurant that has waiter service and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_92", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which resturant in midtown west has waiter service", "source": "restaurant that has waiter service and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1019", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "groupfriendly restaurants in midtown west", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_480", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has delivery and whose cuisine is thai", "source": "restaurant that has delivery and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_120", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant can you eat lunch outside at", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_397", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants that are similar to thai cafe", "source": "cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal served by the thai cafe", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_228", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a neighborhood similar to thai cafes", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_657", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals dont the thai cafe serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_1239", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of meal does thai cafe not serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_406", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what places serve food that is not thai", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_614", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what cuisine does the thai cafe not have", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_342", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meal can you get at the thai cafe", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood that is neighborhood of thai cafe", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which meal does a thai cafe not serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_22", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
