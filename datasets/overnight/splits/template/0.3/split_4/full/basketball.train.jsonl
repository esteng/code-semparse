{"paraphrased": "player who has maximum two team", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_63", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have played two or fewer positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_65", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played less than two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_87", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players play no more than two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_125", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have at most 2 positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_166", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have been on less than two teams", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_390", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that plat one or two different positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_495", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has one team", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_510", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played for either one or two nba teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_586", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players plays in two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_745", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_746", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that plays in two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_748", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for only one team", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_811", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players hold two or less positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_972", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played at most two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1078", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for no more than two teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1139", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player plays fewer than two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1158", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played with at most two teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1167", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the most twos by position", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1235", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players with a single position", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1240", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "a player that has played for no more than two teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1317", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has less then two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1369", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played for fewer than two teams", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1394", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players are associated with one or no team", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1473", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have been on two or less teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1554", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played only one position", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_147", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that plays less than two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_259", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player have played for fewer than two teams", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_325", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played for two or less teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_373", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player from los angeles lakers or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_217", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players play for the lakers or cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_283", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players play point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_356", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player plays the position of point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_380", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players are point guards or forwards", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_409", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player is at point guard or forward position", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_447", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_699", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players are point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_729", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who plays for the los angeles lakers or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_827", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays either point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_868", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player belongs to the los angeles lakers team or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_869", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players have been on the lakers or cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_1112", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who plays for either la lakers or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_1218", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player is on either the los angeles lakers or the cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_1478", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who is a point guard or a forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_test_111", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who played for the cleveland cavaliers or los angeles lakers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_test_175", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played for the lakers of the cavs", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_test_199", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose position is point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_test_331", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had the same number of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_24", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same number of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_52", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the same amount of turnovers as kobe bryant over a season", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_55", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players are on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_58", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of turnovers over a season is same as that of player kobe bryant over a season", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_90", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what other players play the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_97", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of rebounds as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_124", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had as many rebounds as kobe bryant in a season", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_133", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player gives up te same number of turnovers as kobe bryant each season", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_136", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the same number of rebounds in any one season as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_193", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_221", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player from player kobe bryants team", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made the same number of fouls as kobe bryant in a season", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_236", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player belongs to kobe bryant  steam", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_271", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the same number of turnovers in a season as kobe byrant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_324", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played during the same seasons as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_334", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_398", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has as many fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_410", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has same rebounds over a season as that of player kobe bryant over a season", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_424", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has as much steals as kob bryant made over a season", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_462", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who plays the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_477", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the same number of games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_488", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_518", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with number of blocks over a season as that of player kobe bryantis", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_536", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "for the season who played the same number of games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_541", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the same assist per game average as kobe bryant over a season", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_577", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of assists over a season is same as that of player kobe bryant over a season", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_580", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had the same number of steals as kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_626", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had as many blocks as kobe bryant over as season", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_643", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made number of rebounds same as  kobe bryant over a season", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_672", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the same per season blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_674", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who are the players with foul totals equivalent in any one season to that of kobe bryant in any one season", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_725", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of fouls over a season is same as that of player kobe bryant over a season", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_742", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had the same number of fouls in a season that kobe bryant had", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_790", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "is there a player with the same per season point average as kobe bryant", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_807", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played in the same season as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_809", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made as much points as kob bryant made over a season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_828", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players scored as many points as kobe bryant over all seasons", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_856", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who were kobe bryants team mates", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_889", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the same number of fouls as kobe each season theyve played", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1005", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same number of points in the season as kobe bryant", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1014", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the same number of played games as kobe bryant over all seasons", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1019", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of points over a season is same as that of player kobe bryantcover a season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1075", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with the same number of blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1076", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in the same season as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1093", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same number of fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1105", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had the same games played than kobe bryant over all seasons", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1114", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1116", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what was the position of kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1157", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1162", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same amount of assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1193", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who has played as many games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1222", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the same number of all season assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1230", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the other players in kobe bryants team", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1265", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who else plays the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1275", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the same number of rebounds as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1341", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played same number of games over a season as by player kobe bryantover a season", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1401", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a similar per season rebound average as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1411", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant play in", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1435", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players who have a gamesparticipated in tally equalling that of kobe bryant in any one specific season", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1442", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has as many blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1449", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "is there a player with the same number of turnovers in a specific season as kobe bryant has in a specific season as well", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1472", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who plays on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1488", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that play the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1489", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players responsible for the same amount of assists in any one specific season as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1490", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same number of turnovers as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1515", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has at least as many assists as kobe bryant over a season", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1539", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player matches the season average steal rate of kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1546", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1550", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of blocks this season as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_31", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the same number of steals as kobe bryant over all seasons", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_43", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which team is kobe bryan on", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_test_46", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have committed the same number of steals in a given season as kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_121", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players amount of allseason rebounds equals kobe bryants", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_test_130", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored the points of kobe bryant", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_137", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of steals over a season is same as that of player kobe bryant over a season", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_156", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players with blocks per season scores for any one season equivelant to blocks per season score for any one season performed by kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_192", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who plays on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_test_194", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have been played the same number of games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_test_232", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that tied kobe inn total scoring for the season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_237", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played with kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_test_262", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have scored tallies equivelant to those of kobe bryant in any one specific season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_263", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same amount of assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_269", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played at the same time as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_test_272", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same number of steals as kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_284", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with the same assists per season as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_297", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players tied with kobe bryant for blocks in a season", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_319", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_356", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored the same amount of teams as kobe bryant this season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_360", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had as many turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_364", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "either 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "basketball_train_232", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "either 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "basketball_train_274", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "which year 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "basketball_train_425", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "how many blocks did kobe bryant make during seasons where he made 3 assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_3", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant average over a reason", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_5", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what year did kobe bryant have three rebounds", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_train_15", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of seasons where kobe bryant had three fouls", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_train_17", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which position has kobe made more than 3 steals from", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_18", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of rebounds for kobe bryant in season where he only had 3 steals", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_train_19", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "season of player kobe bryant who has 3 turnovers over a season", "source": "season of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "qid": "basketball_train_21", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play 3 games for", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_30", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of rebounds of kobe bryant in season where he only had three blocks", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_train_33", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play with three blocks", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_35", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant made more than 3 assists", "source": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "qid": "basketball_train_39", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant who has played 3 games over a season", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_train_40", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made in the season he made 3 rebounds", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_train_46", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have in three games of the season", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_48", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have when he had 3 blocks", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_train_50", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he had 3 blocks in a season", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_56", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant have only three blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_train_57", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals per season does kobe bryant average when hes also got 3 rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_train_61", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games has kobe bryant made 3 blocks", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_68", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "who did kobe bryant play for when he had 3 all season rebounds", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_70", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team was kobe bryant on when he had 3 blocks in a season", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_73", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls kobe bryant  who has 3 assists", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_train_75", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant make three blocks for", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_77", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make in seasons where he made 3 fouls", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_train_80", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have after 3 games", "source": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "qid": "basketball_train_91", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls has kobe bryant had", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_93", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he had 3 turnovers what team was kobe bryant on", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_96", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "turnovers of kob bryant over a season in which he made 3 assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_98", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how long has kobe bryant played with more than 3 assists per season", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_train_99", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant had with three steals", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_train_101", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant get 3 steals as", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_106", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant achieved in seasons with at least 3 games played", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_107", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant had", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_111", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of rebounds over a season of player kobe bryant with 3 blocks over a season", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_train_114", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name the position of kobe bryant when he made three rebounds", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_115", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant have three assists in over a season", "source": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "qid": "basketball_train_118", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant score 3 points", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_121", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe get after playing 3 fouls", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_train_122", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during which seasons did kobe bryant make 3 blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_train_129", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play where he had more than 3 fouls", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_130", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what player had more blocks than kobe bryant whose number of blocks is 3", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_train_142", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of season where kobe bryant had just three rebounds", "source": "number of rebounds (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_rebounds)))", "qid": "basketball_train_144", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant lost in seasons with at least 3 points", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_145", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_146", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have over the season he also had three rebounds", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_train_147", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant after having 3 rebounds", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_train_148", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have with three points", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_train_151", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did player kobe bryant have over this season to get 3 turnovers", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_158", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant only have 3 fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_164", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe have during his three point total game", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_train_168", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he had 3 points", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_train_174", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe get in seasons where hes got more than 3 steals", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_train_179", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant make after getting 3 steals", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_train_181", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play where he made three assists", "source": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "qid": "basketball_train_182", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many all season rebounds did kobe bryant have when his turnovers equaled 3", "source": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "qid": "basketball_train_185", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant who has 3 rebounds over a season", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_186", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what position did kobe bryant get 3 turnovers", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_202", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "this is considered the season of player kobe bryant with 3 blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_train_205", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant with 3 points over a season", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_206", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant have 3 steals on", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_train_209", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he had three blocks", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_train_211", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant make when hes got 3 assists in the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_212", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant get 3 rebounds", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_train_214", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_216", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many allseason assists did kobe bryant have along with 3 allseason blocks", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_220", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe play for during his three steam season", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_train_227", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant who has 3 fouls over a season", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_train_231", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists does kobe bryant have over all seasons", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_train_238", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season was it that kobe bryant participated in 3 games total", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_train_239", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant get 3 rebounds in", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_240", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season kobe has scored  3 points", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_245", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant with 3 turnovers over a season", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_train_247", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant with 3 points over a season", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_train_253", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many career turnovers has kobe bryant has", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_255", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryants number of games played the season he had 3 rebounds", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_train_265", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what teams has kobe played for in his career", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_266", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many all season steals did kobe bryant have in 3 games", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_269", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which year did kobe bryant have three steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_272", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant have in seasons with over 3 steals", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_train_275", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team is kobe bryant on", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_282", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers kob bryant made in the season he made 3 fouls", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_289", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of blocks for kobe bryant in seasons where he had just three fouls", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_train_291", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the season he had 3 blocks kobe bryant was playing for what team", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_292", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have when he made three fouls", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_train_294", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for which team kob bryant made 3 assists over a season", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_295", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of points over a season of player kobe bryant who has 3 assists over a season", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_296", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for which team did kobe bryant play three games", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_298", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by kobe bryant in 3 games", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_299", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have in a game where he had three turnovers", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_train_307", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the season in which he made 3 steals how many games was kobe bryant in", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_309", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant ahve when he had 3 fouls", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_310", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe have three steals in over the season", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_315", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which kobe bryants total number of assists was 3 what team was he on", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_317", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant had", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_319", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant have 3 turnovers", "source": "season of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "qid": "basketball_train_320", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the season in which kobe bryant played 3 games how many turnovers did he have", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_train_321", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe have in games where he scored three points", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_train_322", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he scored 3 points name the number of rebounds he was responsible for kobe bryant", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_train_323", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games did kobe bryant get 3 steals", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_329", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find the season in which kobe bryant had a total number of 3 steals", "source": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "qid": "basketball_train_332", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks does kobe bryant make in seasons with only 3 fouls against him", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_train_335", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls will kobe bryant have in seasons when hes got 3 assists", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_train_336", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in 3 games", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_train_341", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant have on average by game 3 in a season", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_train_343", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds kob bryant made over a season in which he made 3 fouls", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_train_344", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "season of player kobe bryant whose has 3 points over a season", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_348", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant get after playing 3 fouls", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_train_349", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have during the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "qid": "basketball_train_350", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobebryant play making 3 fouls", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_357", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have with three turnovers", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_train_362", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score after 3 games", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_train_364", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant whoplayed 3 games over a season", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_train_366", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he was responsible for 3 steals what was the name of the team kobe bryant was on", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_train_367", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant participate in 3 games", "source": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "qid": "basketball_train_371", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant get 3 assists", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_train_374", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find the season in which kobe bryant committed 3 fouls and note the number of turnovers in the same period", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_378", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant have three turnovers over the season", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_train_384", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant have 3 assists as", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_385", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have when he had 3 blocks", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_388", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did player kobe bryant have with 3 assists over this season", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_389", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant got 3 steals", "source": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "qid": "basketball_train_392", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the same season that he acquired 3 points how many turnovers did kobe bryant have", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_396", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant have 3 steals for", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_train_397", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have when he had 3 assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_403", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when did kobe bryant have 3 all season assists", "source": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "qid": "basketball_train_412", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position is kobe bryant", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_415", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant gotten in a season", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_417", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant score 3 points for", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_train_419", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant have 3 turnovers", "source": "season of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "qid": "basketball_train_420", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of games played by kobe bryant in season where he had only three rebounds", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_train_421", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have when he scored three points", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_train_423", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for the season in which he was responsible for 3 blocks how many fouls did kobe bryant commit", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_430", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant make in a season with steals over 3", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_train_431", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant made in seasons with exactly 3 assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_432", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant commit 3 fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_433", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play for only three games during the season", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_train_438", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant who has 3 fouls over a season", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_train_439", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of rebounds over a season of player kobe bryant with 3 turnovers over a season", "source": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "qid": "basketball_train_444", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant who had three rebounds have during the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_446", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for while making 3 assists per season", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_449", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant have 3 turnovers on", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_451", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnoves has kobe bryant given up in seasons with more than 3 on duty games", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_train_452", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant ended up with how many assists last season", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_453", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_459", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant who has 3 points over a season", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_train_463", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe byrant have during a season", "source": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "qid": "basketball_train_465", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have when he had three assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_466", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe bryant get in a season when hes got 3 points", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_train_470", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant get in 3 games", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_471", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant average 3 blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_train_480", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant after getting 3 assists", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_train_482", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what position was kobe able to get 3 assists", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_483", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe when playing with three fouls over the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_492", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant get after getting 3 steals", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_train_494", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "season of player kobe bryant who has 3 rebounds over a season", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_train_502", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have when he had 3 steals", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_train_503", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have who played in three games", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_504", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what year did kobe bryant play three games", "source": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "qid": "basketball_train_505", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he had 3 turnovers", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_train_509", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant have three steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_511", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the number of turnovers by kobe bryant who made 3 points over the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_515", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games did kobe bryant make 3 fouls", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_516", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant made in a season when he made 3 plus rebounds", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_517", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe have during the season he averaged three assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_519", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have when he had 3 blocks", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_train_520", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant had", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_521", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "has kobe bryant averaged 3 fouls and 3 blocks per game over a season", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_train_522", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for while having only 3 fouls in a season", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_train_526", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have when he had 3 points", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_train_527", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the number of games played by kobe bryant who made 3 rebounds over the season", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_train_529", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe given up exactly 3 turnovers", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_train_531", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks does kobe bryant usually make if hes already got 3", "source": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "qid": "basketball_train_532", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which is the team of kobe bryant who has played 3 games", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_538", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant had3 turnovers", "source": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "qid": "basketball_train_544", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "mention the points scored by player kobe bryant who has had 3 rebounds over this season", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_551", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_552", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe get after 3 turnovers", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_train_553", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant had", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_train_554", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant make during a season", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_555", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which season did kobe bryant have 3 turnovers", "source": "season of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "qid": "basketball_train_556", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score when he had three rebounds", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_557", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant get in seasons with 3 assists", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_562", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position kob bryant played in the season he made 3 rebounds", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_569", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position is kobe bryant", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_575", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant play for when he had only three rebounds in a season", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_581", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant who has 3 assists over a season", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_583", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he played in 3 games total what position was kobe bryant playing", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_train_584", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score during a season", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_train_585", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have when he had 3 fouls", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_train_589", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the complete number of steals in season where kobe bryant had only three points", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_train_593", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers  did kobe bryant get after he made 3 blocks", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_train_598", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant with 3 blocks over a season", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_599", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant who has 3 turnovers over a season", "source": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "qid": "basketball_train_600", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "player kobe bryant has given 3 fouls over this season", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_train_604", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name the total points of kobe bryant over the season and note the comparisonn to the player whose total number of blocks throughout the season was 3", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_train_605", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "steals by kobe bryant over all seasons with 3 or more points", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_train_609", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play during a season", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_611", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which year did kobe bryant play in three games", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_train_614", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant with 3 blocks over a season", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_train_615", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant have 3 steals in", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_618", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant commit during the same season in which his total number of assists was 3", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_train_620", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant who has played 3 games over a season", "source": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "qid": "basketball_train_622", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant make when he had three points", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_train_624", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have when he had 3 fouls", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_train_629", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of assist for kobe bryant over a season where he had three rebounds", "source": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "qid": "basketball_train_630", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant who has 3 played games over a season", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_634", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play when hes got exactly 3 assists in a season", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_636", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for which team kob bryant made 3 blocks over a season", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_637", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in three played games", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_train_638", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant get in the seasons he scored 3 points", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_train_640", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play where he made three blocks", "source": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "qid": "basketball_train_641", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "this is the season of player kobe bryant who has played 3 games", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_train_645", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for when he had 3 blocks", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_646", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe get after scoring 3 points ", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_649", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when making 3 allseason steals", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_659", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name the season in which kobe bryant performed 3 blocks", "source": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "qid": "basketball_train_663", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position was kobe player when he had three assists", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_665", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant had more than 3 turnovers in all seasons", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_train_668", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the number of turnovers for player kobe bryant when he had just three steals in a season", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_train_676", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points were scored by kobe bryant when he made 3 blocks", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_train_677", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of fouls in a season for kobe bryant when he had only three blocks", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_680", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have when he had 3 steals", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_train_686", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe average in his three point total games over the season", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_train_687", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant who has played 3 games over a season", "source": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "qid": "basketball_train_691", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the number of blocks by kobe bryant who made 3 rebounds over the season", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_train_694", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant with 3 turnovers over a season", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_train_695", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what number is kobe bryant and how many assists does he have", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_697", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant have in seasons when he makes a total of 3 steals", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_train_698", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he had three blocks", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_704", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant only have three steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_707", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team is kobe bryant on", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_709", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he got 3 rebounds", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_711", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play on when he had 3 assists", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_716", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in season where he had only three rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_train_719", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which his point tally was 3 how many games was kobe bryant in", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_732", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many allseason points did kobe bryant score when rebounds equaled 3", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_737", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points kob bryant made over a season in which he made 3 assists", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_738", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "to which team does kobe bryant belong who scored 3 points", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_train_739", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe get after getting 3 assists", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_train_740", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant scored more than 3 points", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_741", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the same season that he participated in 3 games name the number of fouls committed by kobe bryant", "source": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "qid": "basketball_train_744", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make over the season", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_747", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_750", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play during the season his total number of blocks equaled 3", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_751", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he had 3 steals", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_train_754", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant wit 3 steals over a season", "source": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "qid": "basketball_train_755", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games in a season did kobe bryant have 3 steals", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_758", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls kob bryant made in the season in which he made 3 rebounds", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_train_763", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he made three turnovers", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_train_767", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how man fouls did kobe bryant have in all seasons where he had three rebounds", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_train_768", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he played in three games", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_train_769", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe been in since he went pro", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_774", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls of kobe bryant who has 3 blocks", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_777", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many threepoint turnovers did kobe bryant have", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_778", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position was kobe playing when he blocked three shots", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_785", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have after 3 games", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_788", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make in seasons where he made 3 rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_train_793", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in the game in which he had three blocks", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_train_794", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds can kobe bryant make in one season", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_train_802", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant have 3 allseason assists", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_train_810", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds made by kob bryant over a season in which he played 3 games", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_813", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have when he had 3 points", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_814", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in a single season where he had exactly three assists", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_815", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant average in games with more than 3 rebounds for him", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_817", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games during a single season did kobe bryant have more than three blocks", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_823", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kboe bryant have when he had 3 points", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_train_825", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team does kobe bryant play for which has less than 3 turnovers", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_826", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant make during the season", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_831", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play in his best scoring seasons", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_train_834", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant had 3 allseason assists how many rebounds did he have", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_train_835", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what player had more blocks than kobe bryant whose number of assists is 3", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_836", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in three played games", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_840", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists kob bryant made in the season in which he made 3 blocks", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_842", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score when he averaged 3 assists per game over the season", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_843", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_844", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played in the last 3 seasons", "source": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "qid": "basketball_train_845", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe get after he made 3 blocks", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_train_846", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_train_847", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made in the season in which he played 3 games", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_851", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in the year he had three fouls", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_852", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant has given up 3 turnovers in a season how many fouls has he typically given", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_train_853", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls in a single season did kobe bryant have that is greater than three turnovers", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_train_854", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant score 3 points", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_855", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant get called for the season he had 3 assists", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_train_857", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have after 3 games", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_863", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the team of kobe  bryant who played 3 fouls", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_train_866", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how any blocks did kobe make after getting 3 rebounds", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_train_873", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points kob bryant made in the season he made 3 turnovers", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_train_874", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what season did kobe bryant score a total of 3 assists", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_train_875", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games did kobebryant get3 turnovers", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_train_877", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name the season during which kobe bryant committed 3 fouls", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_train_878", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant have 3 fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_879", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which position did kobe score 3 points", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_train_880", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant had 3 assists in a season what was his position", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_883", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "points of kob bryant over a season in which he made 3 blocks", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_train_884", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant made 3 blocks", "source": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "qid": "basketball_train_890", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant score during the season", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_train_893", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in the season that he had three steals", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_train_894", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant had", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_train_897", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have over the season in which he played 3 games ", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_902", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which season did kobe bryant average over 3 steals a game", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_903", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what position was kobe able  to make 3 blocks", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_910", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobebryant get  after getting 3 steals", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_train_911", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the number of assists by kobe bryant who made 3 assists over the season", "source": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "qid": "basketball_train_912", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for the season in which he had 3 blocks to his credit how many steals were attributable to kobe bryant", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_train_922", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant after getting 3 steals", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_train_925", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made in the season he made 3 assists", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_train_926", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have when he had 3 turnovers", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_train_932", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the position of kobe bryant when he played 3 fouls", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_933", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe played more than 3 games and whats his career rebound total", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_934", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in seasons with more than 3 steals how many blocks did kobe bryant have", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_train_936", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team will kobe bryant be on this year", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_939", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant have 3 turnovers as", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_941", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant who had three blocks have", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_train_942", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds does kobe bryant make by the time hes got 3 points in a season", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_train_948", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant with 3 fouls over a season", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_train_949", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant get after 3 turnovers", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_950", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe play when her had three turnover this season", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_954", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he had 3 points", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_959", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant who has 3 steals over a season", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_train_964", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant average in seasons with 3 fouls", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_train_969", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe play for during the season he average three blocks", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_973", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of assist in a season for kobe bryant when he had 3 steals", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_train_974", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryans assists for the season he had 3 assists", "source": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "qid": "basketball_train_975", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which kobe bryant managed 3 assists how many games did he play in", "source": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "qid": "basketball_train_977", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he had 3 assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_980", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "has kobe bryant averaged 3 rebounds a season while playing for any team", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_984", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant has had 2 blocks in a season how many turnovers had he made", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_train_985", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of points over a season of player kobe bryant who has 3 blocks over a season", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_train_989", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play 3 games as", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_train_991", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant play for with three assists", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_train_993", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the position of kob bryant in the season he played 3 games", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_train_995", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which is the season kob bryant made 3 fouls", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_train_996", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have who had three rebounds", "source": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "qid": "basketball_train_998", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which seson did kobe get 3 steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_999", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made over a season in which he made 3 fouls", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_train_1003", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers kob bryant made in the season he made 3 points", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_1012", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points had kobe bryant scored after 3 rebounds", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_1013", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds does kobe bryant have a season with 3 turnovers", "source": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "qid": "basketball_train_1015", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls in a single season did kobe bryant have that is greater than three assists", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_train_1016", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make", "source": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "qid": "basketball_train_1018", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the position of kob bryant in the season he made 3 turnovers", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_1020", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_1024", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team was kobe bryant on when he played less than three games in a season", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_1027", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which kobe bryant had game time in 3 games how many assists was he responsible for", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_train_1029", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what year did kobe bryants points total three", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_1032", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant when he scored 3 points", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_train_1034", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant who has 3 turnovers over a season", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_1037", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what player had more blocks than kobe bryant whose number of points is 3", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_train_1038", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant with 3 points over a season", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_train_1039", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryants team when he had 3 rebounds for the season", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_1040", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many three point assists does kobe bryant have in a season", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_1041", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he made three assists", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_1045", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which seasons kob bryant made 3 assists", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_train_1046", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant gotten this season", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_train_1048", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when his all season points equaled 3", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_train_1049", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "the number of turnovers of player kobe bryant over this season is 3", "source": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "qid": "basketball_train_1053", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games kob bryant played over a season in which he made 3 points", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_1059", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant get after 3 turnovers", "source": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "qid": "basketball_train_1061", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make over the season when made only 3 turnovers", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_train_1063", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant made in 3 games", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_train_1068", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant have in a season he has 3 rebounds", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_1070", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have allseason when had also had 3 points", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_1071", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have during the season when averaging three assists", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_train_1073", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which seasons kob bryant made 3 blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_train_1074", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of assists in seasons where kobe bryant had just three points", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_1082", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many asists kob bryant made over a season in which he made 3 turnovers", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_1084", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have after 3 games", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_train_1085", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when his allseason turnovers equaled 3", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_1088", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant played three games", "source": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "qid": "basketball_train_1094", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have when he made three turnovers", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_1099", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play who had turnovers", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_train_1101", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which season did kobe bryant play 3 games", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_train_1102", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what year did kobe bryant have exactly 3 steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_1103", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant had", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_train_1108", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position was kobe bryant in when he made 3 fouls in a season", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_1111", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he had 3 rebounds", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_train_1117", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have in a season he had 3 assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_1119", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many season did kobe bryant have no more than three assists", "source": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "qid": "basketball_train_1122", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have with three blocks", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_1123", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made over a season in which he made 3 assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_1124", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of steals in seasons where kobe bryant had only played three games", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_1128", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant have over all seasons", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_1136", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score over the season in which he played 3 games", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_train_1142", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of blocks in a season for kobe bryant when he had three assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_train_1145", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant had", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_train_1146", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "whats the number of assists kobe bryant gets in a season when hes got 3 or more blocks", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_1155", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which season kob bryant made 3 rebounds", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_train_1156", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games did kobe score 3 points", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_1160", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant have allseason when he also has 3 blocks", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_train_1164", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in a season where his number of blocks were over 3", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_1171", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in the season", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_1172", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name the season in which kobe bryants total point score was 3", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_train_1173", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant get 3 points as", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_train_1175", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant make in the season in which he scored three points", "source": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "qid": "basketball_train_1177", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant average over a season", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_1178", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name kobe bryants position when he had three turnovers", "source": "position of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "qid": "basketball_train_1182", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant who has played 3 games over a season", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_1186", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position was kobe bryant playing when he had the season in which he had 3 steals", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_1187", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season he scored he 3 points what was the number of fouls kobe bryant was responsible for", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_train_1189", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant average in seasons limited to 3 rebounds", "source": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "qid": "basketball_train_1191", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which is the team of kobebryant who had 3 turnovers", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_1192", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant had 3 allseason turnovers how many allseason points did he have", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_train_1194", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of points over a season of player kobe bryant who has 3 turnovers over a season", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_train_1196", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in the game that he had three steals last season", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_train_1201", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kboe bryant have when he had 3 steals", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_train_1202", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the position of player kobe bryant with 3 rebounds over this season", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_1206", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find the number of blocks in the season in which kobe bryant  also acquired 3 steals", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_train_1210", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds and assists does kobe bryant have over a season", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_train_1211", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many allseason blocks did kobe bryant have in 3 allseason games", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_1212", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant who had three turnovers have", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_train_1213", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have in a season he had 3 points", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_train_1220", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls has kobe bryant had", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_train_1224", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant score 3 points", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_train_1225", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what season did kobe only give up 3 fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_1227", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have during a season", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_train_1236", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant play for when he had 3 fouls in a season", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_train_1237", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant with 3 assists over a season", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_train_1241", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks with steal over 3 did kobe bryant play in one season", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_train_1243", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he had 3 turnovers name the number of games in which kobe bryant participated in", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_train_1244", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant with three assists had how many rebounds", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_train_1248", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant average when hes played at least 3 games in a season", "source": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "qid": "basketball_train_1250", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds does kobe bryant make per season", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_train_1254", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_1258", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks does kobe bryant average in a season with 3 points", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_train_1259", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position is kobe bryant", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_1266", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant get per season", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_train_1267", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists were made by kob bryant over a season in which he made 3 fouls", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_train_1269", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "does kobe bryant have more fouls or rebounds per season", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_train_1270", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant had 3 rebounds", "source": "number of rebounds (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_rebounds)))", "qid": "basketball_train_1271", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the season in which he had 3 turnovers find the number of  point for which kobe bryant was responsible", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_train_1274", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which kobe bryant had 3 turnovers how many blocks was responsible for", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_train_1281", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant make in an allseason total of 3 games", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_train_1282", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant who has 3 steals over a season", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_1287", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he scored 3 assists what position was kobe bryant playing", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_1291", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant over all seasons", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_train_1292", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play who had three fouls in the season", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_1295", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when his all season steals equaled 3", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_train_1299", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games in a season did kobe bryant play where he had 3 fouls", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_1302", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe bryant get in a season", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_train_1312", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many games has kobe bryant made 3 blocks", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_1314", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "fouls by kobe bryant over all seasons with 3 games played", "source": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "qid": "basketball_train_1315", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which was the season kob bryant made 3 steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_1316", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant have 3 fouls for", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_train_1319", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant get 3 fouls in", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_train_1324", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists does kobe bryant usually make in a season after hes made at least 3", "source": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "qid": "basketball_train_1325", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he had 3 fouls", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_1330", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant who has assists over a season", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_1331", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he had 3 blocks", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_train_1332", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find the number of points acquired by kobe bryant over the entire season in which his number of fouls was 3", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_train_1340", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games kob bryant played in the season in which he made 3 assists", "source": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "qid": "basketball_train_1342", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant who had three steals have", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_train_1345", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant have 3 steals", "source": "season of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "qid": "basketball_train_1346", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant with 3 rebounds over a season", "source": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "qid": "basketball_train_1347", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points kob bryant made over a season in which he made 3 rebounds", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_train_1351", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he made three assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_1354", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant get in 3 games", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_train_1359", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe get after scoring 3 points", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_train_1360", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the same season in which kobe bryant had 3 rebounds what was the number of turnovers that he had", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_1366", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have all season when he had 3 turnovers", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_train_1368", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant make over the season where he made 3 steals", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_train_1372", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant with 3 fouls over a season", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_train_1377", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant broken 3 turnovers", "source": "season of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "qid": "basketball_train_1379", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how blocks did  did kobe bryant make after playing 3 fouls", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_train_1380", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for which team did kobe bryant make three rebounds", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_1381", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks does kobe bryant have in a season with at least 3 turnovers", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_train_1383", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season kobe bryant committed 3 steals how many fouls did he have", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_train_1392", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists can kobe bryant make in seasons with only 3 games played", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_train_1393", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant who has 3 rebounds over a season", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_1397", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which position did kobe bryant get 3 steals", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_1399", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make when his total blocks over a season was 3", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_train_1400", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant with 3 turnovers over a season", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_train_1404", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant make allseason playing 3 games", "source": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "qid": "basketball_train_1405", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score during the season", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_train_1406", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant after 3 turnovers", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_train_1408", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals has kobe bryant had", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_train_1412", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score allseason when his steals equaled 3", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_train_1413", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play 3 games for allseason", "source": "team of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "qid": "basketball_train_1415", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of points over a season of player kobe bryant who has 3 fouls over a season", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_train_1416", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points in a season did kobe bryant have when he had only three assists", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_train_1419", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he had 3 blocks", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_1425", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have in the games where he had three fouls", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_train_1428", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which kobe bryant had 3 turnovers how many assists were attributable to him", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_1430", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe get after making 3 blocks", "source": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "qid": "basketball_train_1431", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position is kobe bryant", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_1432", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have after 3 games", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_1445", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "mention the number of turnovers of player kobe bryant in 3 games played over this season", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_train_1455", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant who has 3 steals over a season", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_train_1456", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play when he made 3 rebounds over the season", "source": "team of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "qid": "basketball_train_1457", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists does kobe bryant manage in seasons limited to 3 fouls", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_train_1460", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant get after the 3 rebounds", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_1467", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds  kob bryant made in the season he made 3 turnovers", "source": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "qid": "basketball_train_1476", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which season did kobe bryant have only 3 rebounds in", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_train_1479", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_train_1482", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant play 3 fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_1483", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for when he had three blocks during a single season", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_1491", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "whats the position of kobe bryant", "source": "position of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "qid": "basketball_train_1492", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant who has three steals play", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_1495", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant who has 3 points over a season", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_train_1498", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many seasons has kobe bryant given up exactly 3 turnovers", "source": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "qid": "basketball_train_1502", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games will kobe bryant play this coming season", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_1507", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "whats  kobe bryants average steals per season", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_train_1512", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position was kobe bryant playing when he has 3 rebounds over a full season", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_1522", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant make in a season of 3 turnovers", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_train_1527", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what year did kobe bryant have three fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_train_1528", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant who had three fouls have", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_train_1531", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have in a game where he had three fouls", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_train_1532", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were committed by kob bryant over a season in which he made 3 steals", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_train_1533", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team does kobe bryant play for", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_train_1534", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant played", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_train_1536", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of turnovers of kobe bryant who has 3 rebounds", "source": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "qid": "basketball_train_1540", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many 3point games did kobe bryant play allseason", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_1543", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant with 3 steals over a season", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_train_1544", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant get 3 points in", "source": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "qid": "basketball_train_1548", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_train_1549", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant take in an average season", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_train_1551", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he had 3 steals how many rebounds was kobe bryant responsible for", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_train_1555", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of rebounds over a season of player kobe bryant who has played 3 games over a season", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_train_1559", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when did kobe bryant have 3 all season rebounds", "source": "number of rebounds (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_rebounds)))", "qid": "basketball_test_5", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points kob bryant made in the season in which he made 3 fouls", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_test_7", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "this is considered to be the season of player kobe bryant with 3 rebounds", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_test_14", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the season in which he was responsible for 3 steals how many assists are attributable to kobe bryant", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_test_16", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he was responsible for 3 fouls how many steals were attributable to kobe bryant", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_test_26", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant who had three blocks have", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_test_27", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the same season in which he had 3 rebounds name the number of blocks performed by kobe bryant", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_test_34", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played with three steals", "source": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "qid": "basketball_test_35", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points were attributable to kobe bryant during the season he had a total of 3 rebounds", "source": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "qid": "basketball_test_38", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which position did kobe bryant get 3 rebounds", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_test_39", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what year did kobe bryant have three blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_test_40", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant averaged each season hes had 3 rebounds", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_test_41", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games over a season did kobe bryant play where his assists was three", "source": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "qid": "basketball_test_44", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have when he had three rebounds", "source": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "qid": "basketball_test_45", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games kob bryant played in the season in which he made 3 turnovers", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_test_51", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls of kobe bryant whose rebounds are three", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_test_53", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant have when he had 3 blocks", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_test_55", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what player had more steals than kobe bryant whose number of rebounds is 3", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_test_57", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe bryant get in seasons when hes played 3 games", "source": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "qid": "basketball_test_58", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he had three rebounds", "source": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "qid": "basketball_test_62", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant start playing in", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_test_63", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play when he had 3 all season rebounds", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_70", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many three game fouls did kobe bryant have over a season", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_test_75", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for when he had 3 allseason assists", "source": "team of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "qid": "basketball_test_79", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in the season in which he had three fouls", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_test_83", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in how many seasons kob bryant made 3 fouls", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_test_85", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in a season", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_test_87", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by kobe bryant after getting 3 assists", "source": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "qid": "basketball_test_88", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers kob bryant made over a season in which he played 3 games", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_test_91", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant have 3 blocks as", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_test_92", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant have 3 blocks", "source": "season of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "qid": "basketball_test_93", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the same season in which kobe bryant was responsible for 3 assists how many rebounds was he also responsible for", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_test_94", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant make in seasons with 3 turnovers", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_test_97", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls kob bryant made over a season in which he made 3 points", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_test_99", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant get 3 assists", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_test_102", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in a season he had 3 fouls", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_test_103", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have when his all season points equaled 3", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_test_104", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant with 3 blocks over a season", "source": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "qid": "basketball_test_110", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which is the team of kobe bryant who got 3 steals", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_test_113", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds does kobe bryant get every season", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_test_120", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season he was responsible for 3 fouls what was the number of assists performed by kobe bryant", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_test_123", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have when he had 3 assists", "source": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "qid": "basketball_test_124", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "who was kobe bryant playing for when he made three fouls", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_test_127", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play with 3 steals over the season", "source": "position of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "qid": "basketball_test_128", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have who had three steals", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_test_131", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant had 3 allseason blocks how many steals did he have", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_test_132", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what position was kobebryant playing  in the 3 games", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_test_136", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assitss did kobe bryant have while committing three fouls", "source": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "qid": "basketball_test_139", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which season kob bryant made 3 turnovers", "source": "season of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "qid": "basketball_test_142", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season kobe bryant participated in 3 games how many rebounds did he have", "source": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "qid": "basketball_test_146", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have over a seaon and turnovers", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_test_150", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which kobe bryant participated in 3 games how many points was he responsible for", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_test_151", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe have when scorin three points", "source": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "qid": "basketball_test_154", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have during a single season that is over 3 steals", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_test_155", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he had over three points in a season", "source": "position of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "qid": "basketball_test_157", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "if kobe bryant has 3 assists in a season whats his average steal total", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_test_162", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant get after 3 steals", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_test_163", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "who did kobe bryant play for when he had 3 points in a season", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_test_166", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have in the season when he had three steals", "source": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "qid": "basketball_test_168", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant have 3 turnovers in", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_test_169", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made over a season in which he made 3 rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_test_173", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which positions did kobe bryant make 3 fouls in a season", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_test_176", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists does kobe bryant average", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_test_177", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the number of blocks played by kobe bryant over the season", "source": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "qid": "basketball_test_181", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have when he had 3 assists", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_test_184", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points were made by kob bryant over a season in which he made 3 steals", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_test_186", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in what year did kobe bryant have three assists", "source": "season of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "qid": "basketball_test_188", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many threepoint rebounds did kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "qid": "basketball_test_191", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "games played by kobe bryant over all seasons with 3 fouls", "source": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "qid": "basketball_test_200", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have after 3 games", "source": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "qid": "basketball_test_201", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season in which he had 3 turnovers name the number of steals attributable to kobe bryant", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_test_202", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls kob bryant made over the season in which he made 3 turnovers", "source": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "qid": "basketball_test_203", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant play 3 games in", "source": "season of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "qid": "basketball_test_204", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant have more than 3 fouls", "source": "season of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "qid": "basketball_test_211", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe get after 3 rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_test_217", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have in a season he played 3 games", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_test_220", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have the seasons he had 3 fouls", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_test_223", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds  kob bryant made in the season he made 3 assists", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_test_224", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant whose number of rebounds over a season", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_225", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant played", "source": "season of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "qid": "basketball_test_229", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make in seasons where he made 3 steals", "source": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "qid": "basketball_test_235", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant make per season when hes got at least 3 blocks", "source": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "qid": "basketball_test_236", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists does kobe bryant have in seasons with exactly 3 turnovers", "source": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "qid": "basketball_test_238", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have in games in which he had three assists", "source": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "qid": "basketball_test_239", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant have in a typical season", "source": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "qid": "basketball_test_241", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant gotten in a season", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_test_243", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe score after 3 fouls", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_test_245", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in which he made three rebounds", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_246", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in the season in which he had three assists", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_test_247", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe braynt have when he had 3 fouls", "source": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "qid": "basketball_test_248", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have during the same season in which his number of total fouls was 3", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_test_249", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team was kobe bryant on when he scored 3 points over the season", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_test_256", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant have in seasons with 3 blocks", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_test_258", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made in the season in which he made 3 turnovers", "source": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "qid": "basketball_test_266", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the number of turnovers by kobe bryant who made 3 fouls over the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_test_267", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position was kobe bryant playing in the season in which he committed 3 fouls", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_test_271", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "during the season he scored 3 points what was kobe bryants steal tally", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_test_273", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points and turn overs does kobe bryant have over a season", "source": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "qid": "basketball_test_275", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "season of kobe bryant with 3 points", "source": "season of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "qid": "basketball_test_276", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have when he had three fouls", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_test_279", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant has 3 steals in a season how many points does he usually have", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_test_281", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant gotten in a season", "source": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "qid": "basketball_test_282", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team was he on during the season that kobe bryant had 3 fouls", "source": "team of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "qid": "basketball_test_283", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "has kobe bryant had a season with exactly 3 rebounds", "source": "number of rebounds (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_rebounds)))", "qid": "basketball_test_292", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant who had three steals have during the season", "source": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "qid": "basketball_test_293", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when kobe bryant has at least 3 fouls in a season how many rebounds did he have", "source": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "qid": "basketball_test_294", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant made at least 3 rebounds in this season", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_295", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have when he had 3 assists", "source": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "qid": "basketball_test_296", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "steals by kobe bryant over all season with 3 blocks", "source": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "qid": "basketball_test_299", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "for the season in which he performed 3 blocks name the number of rebounds attributable to kobe bryant", "source": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "qid": "basketball_test_302", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "on what team did kobe bryant only have 3 turnovers in a season", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_test_303", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe get after playing 3 fouls", "source": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "qid": "basketball_test_308", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score after getting 3 steals", "source": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "qid": "basketball_test_311", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe bryant get in his usual season", "source": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "qid": "basketball_test_313", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant commit the seasons he had 3 blocks", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_test_315", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe get after 3 rebounds", "source": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "qid": "basketball_test_316", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of turnovers for kobe bryant over all season with 3 or more blocks", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_test_318", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many allseason fouls did kobe bryant have when his allseason points were 3", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_test_320", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what are the number of steals of player kobe bryant over this season with 3 rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_test_324", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many all season steals did kobe bryant have when his points equaled 3", "source": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "qid": "basketball_test_327", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe have in seasons when he had 3 steals in a season", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_test_328", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant get 3 rebounds in", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_332", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made over a season in which he made 3 turnovers", "source": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "qid": "basketball_test_336", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant with 3 points over a season", "source": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "qid": "basketball_test_338", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many points total did kobe score during the season that he average three points per game", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_test_340", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "qid": "basketball_test_341", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant scored 3 points", "source": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "qid": "basketball_test_344", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in the three games", "source": "position of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "qid": "basketball_test_350", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have over the season in which he had 3 steals", "source": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "qid": "basketball_test_353", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have during a single season that he had exactly three fouls", "source": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "qid": "basketball_test_354", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "blocks made by kob bryant over a season in which he made 3 points", "source": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "qid": "basketball_test_359", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what teams has kobe bryant played on", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_test_363", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which is the team of kobe bryant who made 3 blocks", "source": "team of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "qid": "basketball_test_371", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists in three games did kobe bryant make", "source": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "qid": "basketball_test_380", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of points made by kob bryant over a season in which he played 3 games", "source": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "qid": "basketball_test_381", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have when he made three rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_test_386", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "does kobe bryant have more turnovers than his 3 blocks", "source": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "qid": "basketball_test_388", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position diddoes kobe bryant play for the la lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_train_8", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals in a season did kobe bryant have for the lakers", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_train_116", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many blocks as point guard kobe bryant made", "source": "number of blocks (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "qid": "basketball_train_150", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which year did kobe bryant play for the la lakers", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_train_162", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "who many rebounds in the season did point guard kobe bryant make", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_train_165", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe score while playing for the lakers", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_171", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did la laker player kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_173", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points kob bryant made in the season in which he played for los angeles lakers", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_196", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers kob bryant made in the season he played for los angeles lakers", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_226", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by kobe bryant who belonged to the los angeles lakers team", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_train_230", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant who is at point guard", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_244", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many all season fouls did kobe bryant have as an la laker", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_train_249", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play for the lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_train_260", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does kobe bryant give up as point guard", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_train_297", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have as point guard", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_301", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant play as point guard", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_train_304", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points does  kobe bryant have for the lakers", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_311", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which team does kobe bryant play point guard for", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_train_314", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during his season with the los angeles lakers how many points did kobe bryant acquire", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_328", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls in a season did the los angeles lakers kobe bryant commit", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_train_353", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists were got by kobe bryant who belonged to the los angeles team", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_train_361", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe have from point guards from any team", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_train_363", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many season games did kobe bryant play as an la laker", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_train_368", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many allseason rebounds did kobe bryant have as a los angeles laker", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_370", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant scored in each season with the los angeles lakers", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_377", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of rebounds over a season of player kobe bryant from los angeles lakers team", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_386", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant have at point guard", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_406", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during the year he played for the los angeles lakers how many fouls did kobe bryant have", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_train_428", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have in the season in which he played point guard", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_429", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "rebounds by kobe bryant over all seasons as point guard", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_train_434", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games as kobe bryant played for the la lakers", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_train_454", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have for the los angeles lakers", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_457", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "kobe bryant play point guard", "source": "position of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string position)))", "qid": "basketball_train_460", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many all season points did kobe bryant have as point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_476", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of points over a season of player kobe bryant who is at point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_496", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "for the period of time in which kobe bryant was point guard name the amount of rebounds he had in that season", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_train_499", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant made playing point guard", "source": "number of blocks (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "qid": "basketball_train_523", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what was the total number of assists over a season for kobe bryant playing point guard", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_train_530", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant whose team is los angeles lakers", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_train_537", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which year did kobe bryant play point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_train_549", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have for the los angeles lakers", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_train_587", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds kob bryant made in the season he played for los angeles lakers", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_612", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant from team los angeles lakers", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_train_619", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have over all seasons", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_647", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score as point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_648", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make during a season while playing for the los angeles lakers", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_train_653", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls has kobe bryant averaged per season as a laker", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_train_662", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have while playing point guard", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_train_667", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant have on the los angeles lakers", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_675", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "kobe bryant belongs to the los angeles lakers team", "source": "team of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "qid": "basketball_train_690", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play on the lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_train_712", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant play point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_train_717", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many allseason blocks did kobe bryant have as an la laker", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_train_736", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during his season playing point guard how many assists was bryant kobe responsible for", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_train_770", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant play point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_train_779", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in the position of point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_780", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant played for the lakers", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_train_784", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have on the los angeles lakers", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_train_791", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what was the total number of turnovers in a season for kobe bryant at point guard", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_train_801", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant who is at point guard", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_train_833", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "the total number of steals in all seasons for point guard kobe bryant", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_train_837", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls in a season has point guard kobe bryant had", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_839", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made in the season in which he played in los angeles lakers team", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_train_841", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what point guard players had more points than kobe bryant", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_862", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "season of player kobe bryant who is at point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_train_871", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during his season as point guard how many blocks did kobe bryant perform", "source": "number of blocks (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "qid": "basketball_train_895", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant get as point guard", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_train_913", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant who is at point guard", "source": "number of played games (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "qid": "basketball_train_914", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant whose team is los angeles lakers", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_train_917", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "as a laker how many steals has kobe bryant averaged per season", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_train_919", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant make over a season when played as point guard", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_train_924", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "season of player kobe bryant from los angeles lakers team", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_train_929", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play for the los angeles lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_train_930", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of steals over a season of player kobe bryant from team los angeles lakers", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_train_946", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant play for the la lakers", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_train_955", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is the position of kobe bryant in los angeles lakers team", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_train_956", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what team does kobe bryant play for", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_train_967", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "points of kob bryant over a season in which he played in point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_982", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "whats the per season average for points scored while kobe bryant was at point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_1002", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant get when he was in the position of point guard", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_train_1008", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play for the los angeles lakers", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_train_1028", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did point guard kobe bryant have over the season", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_train_1035", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games kob bryant played in point guard position over a season", "source": "number of played games (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "qid": "basketball_train_1058", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during his los angeles lakers season how many rebounds did kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_1072", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have over the season for the la lakers", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_1077", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant from team los angeles lakers", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_1081", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have as point guard", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_train_1087", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have on the los angeles lakers", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_1118", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is the number of games played by kobe bryant whose team is los angeles lakers over the season", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_train_1131", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games was kobe bryant in during the season that he played with the los angeles lakers", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_train_1140", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant when he was at point guard", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_1141", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant of the lakers have", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_train_1147", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many all season rebounds did kobe bryant have as point guard", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_train_1169", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers does point guard kobe bryant have in a season", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_train_1209", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what was the total number of assists in all seasons for player kobe bryant when he was with the lose angeles lakers", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_train_1228", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant played for the los angeles lakers", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_train_1247", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds does kobe bryant have each season as a laker", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_1262", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many seasons has kobe bryant been starting point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_train_1290", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play as point guart during a season", "source": "number of played games (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "qid": "basketball_train_1318", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers in the season did kobe bryant have for the lakers", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_1329", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what teams did kobe bryant play on as point guard", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_train_1343", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant play in point guard position", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_train_1352", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of blocks over a season of player kobe bryant who is at point guard", "source": "number of blocks (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "qid": "basketball_train_1410", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls in a season did kobe bryant have", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_1438", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what team has kobe bryant played point guard for", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_train_1443", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant had as an la laker", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_train_1444", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "while he was point guard find the number of games played by kobe bryant in the same season", "source": "number of played games (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "qid": "basketball_train_1447", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe have in the season he played point gaurd", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_1450", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "los angeles lakers roster", "source": "team of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "qid": "basketball_train_1480", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during kobe bryants time with the lakers how many assists has he averaged per season", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_train_1485", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have as point guard", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_train_1497", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers were got by kobe bryant who belonged to the los angeles lakers team", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_1501", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of fouls over a season of player kobe bryant from los angeles lakers team", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_train_1503", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have over a season", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_train_1508", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did la laker kobe bryant score", "source": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "qid": "basketball_train_1511", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_train_1517", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score as the point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_1537", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant from los angeles lakers team", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_train_1542", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of steals of point guard kobe bryant", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_train_1552", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what team does kobe bryant play for", "source": "team of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "qid": "basketball_train_1557", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many blocks has lakers player kobe bryant had in the season", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_test_18", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals were awarded to kobe bryant who belonged to the los angeles lakers team", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_test_23", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what was the total number of rebounds in each season where kobe bryant played point guard", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_test_30", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have as point guard", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_test_42", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant play for the los angeles lakers team", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_test_54", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play on the lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_test_56", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant who is at point guard", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_test_65", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many all season assists did kobe bryant have as an la laker", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_test_80", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant had", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_test_84", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant play for los angeles lakers", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_test_108", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant had", "source": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "qid": "basketball_test_129", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is position played by kobe bryant over the season", "source": "position of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string position)))", "qid": "basketball_test_133", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games are played by kobe bryant for the los angeles lakers team", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_test_135", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebound kob bryant made over a season in los angeles lakers team", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_test_141", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "when did kobe bryant play as point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_test_145", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play for the la lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_test_148", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant made in a season at point guard", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_test_174", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant play as point guard", "source": "season of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "qid": "basketball_test_182", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many times has  kobe bryant started as point guard", "source": "number of played games (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "qid": "basketball_test_195", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have on the los angeles lakers", "source": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "qid": "basketball_test_197", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have playing point guard in a season", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_test_205", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made in the season in which he played in point guard position", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_test_207", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did point guard kobe bryant have", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_test_209", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "for the season in which he played with the los angeles lakers name the number of blocks attributable to kobe bryant", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_test_210", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what teams has kobe bryant played with other than the la lakers", "source": "team of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "qid": "basketball_test_219", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe had a laker", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_test_221", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score during the season in which he played point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_test_233", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have as point guard", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_test_244", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have allseason as an la laker", "source": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "qid": "basketball_test_254", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant of the los angeles lakers have during the season", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_test_261", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "does kobe bryant play point guard", "source": "position of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string position)))", "qid": "basketball_test_278", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have allseason as point guard", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_test_286", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play for on the lakers", "source": "position of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "qid": "basketball_test_334", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant get when he was at point guard", "source": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "qid": "basketball_test_337", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant been a laker for", "source": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "qid": "basketball_test_346", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what team does point guard kobe bryant play for", "source": "team of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "qid": "basketball_test_348", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "blocks by kobe bryant over all seasons as point guard", "source": "number of blocks (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "qid": "basketball_test_351", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe byrant have during his laker career", "source": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "qid": "basketball_test_361", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "during his season playing with the los angeles lakers how many turnovers did kobe bryant have", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_test_367", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what team does kobe bryant play for", "source": "team of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "qid": "basketball_test_375", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant get when he was at point guard", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_test_379", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant make allseason as point guard", "source": "number of blocks (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "qid": "basketball_test_384", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "player who does not play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_9", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_14", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players are not point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_156", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players other than point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_246", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player is not in the position of point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_379", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players dont play for the la lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_613", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who is not a los angleles laker", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_693", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players who are not in los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_714", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players arent point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_734", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not belong to the los angeles lakers team", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_765", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who are not point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_29", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who is not a point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_77", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player not from los angeles lakers team", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_109", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players dont play for the los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_140", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player is not on the los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_260", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_298", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not play for the la lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_321", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who dont play for los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_366", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many teams are there", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_84", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of positions", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_105", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many positions", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_210", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many teams are in the nba", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_373", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the position", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_422", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "number of teams", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_559", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the players number for a certain team", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_628", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many different positions are there", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_710", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are there", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_756", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the team", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_858", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many positions are there", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_960", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is number of the player", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1004", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the player kobe bryant", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1083", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many teams are there", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_1091", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1127", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the player in this position", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_1272", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are there total", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1553", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the players number", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_test_0", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are there", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_test_78", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are in the team ", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_test_352", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are on the team", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_test_368", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which season was kobe bryant", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_28", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by  kobe bryant", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_29", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe have last season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_49", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks in a season did kobe bryant have", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_59", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had over all seasons", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_79", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "teams kobe bryant plays for", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_128", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played each season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_train_140", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the number of total turnovers of kobe bryant", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_149", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant have in a season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_191", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_195", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_201", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists kob bryant made over a season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_208", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant played", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_242", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant made so far this season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_243", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many all season rebounds did kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_259", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have over  the season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_286", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals has kobe bryant got in his career", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_305", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the number of rebounds by kobe bryant over the season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_316", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks does kobe bryant average in a given season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_318", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the number of assists attributable to kobe bryant during a season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_369", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds in a season did kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_387", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant aquire over the entire season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_458", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "kobe bryants rebounds for the season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_475", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have this season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_479", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how any steals did kobe bryant get", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_481", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what year did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_497", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many seasons have kobe bryant played", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_501", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have this season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_525", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turn overs kob bryant made over a season", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_650", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many all season steals did kobe bryant have", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_651", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_671", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "total points of kob bryant over a season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_684", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the number of assists by player kobe bryant over the season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_700", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobebryant", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_782", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made over a season", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_783", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score this season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_806", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_892", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobebryant get", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_938", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player kobe bryants number of rebounds over a season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_944", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant had", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_963", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is kobe bryants team", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_970", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_992", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant had", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_1023", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whats kobe bryants season turnover average", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_1030", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is kobe bryants allseason point total", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_1064", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "when did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_1109", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant got for this season so far", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_1121", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_train_1134", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points were scored by kobe bryant", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_1226", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals has kobe bryant had", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_1239", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "kobe bryant playing position", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_train_1249", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made over a season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_1280", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant scored this season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_1288", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe have this season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_1294", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what team does kobe bryant play on", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_1357", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "koby bryant position", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_train_1358", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe bryant have over all seasons", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_1375", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have allseason", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_1403", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many did kobe bryant play so far this year", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_train_1417", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have this season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_1426", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what was the total number of games played by kobe bryant in a season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_train_1516", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have this season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_1518", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have during the season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_1556", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers in the year did kobe bryant have", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_test_15", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the position of kobe bryant", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_test_19", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what team is kobe bryant on", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_test_66", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant make over a season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_test_68", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what seasons has kobe bryant played", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_test_86", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what are seasons played by kobe bryant", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_test_100", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant had in any one season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_test_107", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the position of kobe bryant", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_test_126", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_test_187", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "number of games kobe bryant has played in a season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_test_227", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant participated in during any one season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_test_255", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant get", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_test_268", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists in the season did kobe bryant have", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_test_329", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_test_382", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant gotten in a season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_test_385", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than three assists over a season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_0", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less blocks this season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_4", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has no more than three steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_10", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least three rebounds in the season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_22", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played less than 4 games per season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_27", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with more than 2 rebounds", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_34", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had 3 or more rebounds", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_38", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with less than 3 assists per season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_41", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_43", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_47", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 points over a season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_72", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the total number of assists equalling less than 3", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_82", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has made more than 3 points this season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_83", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 blocks this season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_95", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer than three steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_103", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played less than 3 games over all seasons", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_104", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find a player with 3 or more steals in any one season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_109", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 steals", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_126", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more than 3 fouls over a season", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_134", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 blocks over a season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_141", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored fewer than 3 points in a season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_153", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than 4 fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_155", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has less than 3 blocks", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_167", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with scored assists in any one season tallying at least 3", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_169", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who made less than 4 blocks over a season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_172", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played 3 or more games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_175", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has gotten more than 3 points", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_177", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with turnover amounts in a given season equalling at most 3", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_178", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has a total foul count under 3 for the season", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_184", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_192", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players responsible for less than 3 points in any given season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_207", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more than 3 turnovers over all seasons", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_213", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less assists this season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_219", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who gets 3 or more turnovers each season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_223", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer than three fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_237", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least three played games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_241", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had less than 3 games played over all seasons", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_250", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more than three points per season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_251", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no less than 3 all season assists", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_252", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have committed 3 or more fouls in a season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_254", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than three turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_257", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more than 3 rebounds in every season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_264", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 rebounds", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_267", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a maximum of 3 blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_268", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had three or more blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had 3 or more assists over all seasons", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_278", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made 3 blocks over a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_287", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has  played lesser than 3 fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_312", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with a total number of rebounds in a season no greater than three", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_326", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more than 3 blocks", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_340", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 rebounds", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_352", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "a player with at least 3 fouls", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_365", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have game time in no more than 3 games in a given season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_375", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has 3 or more steals in a season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_394", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has gotten 3 or less blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_399", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played at least 3 games in a season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_400", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more steals this season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_402", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more than 3 turnovers this season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_426", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players responsible for 3 or less fouls in any one given season", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_427", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more than 3 turnovers in each season theyve played", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_435", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with maximum 3 steals over a season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_436", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has 3 or less fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_441", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had a maximum of 3 assists", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_448", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made more than 3 block over a season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_461", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has at most 3 assists total in a season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_467", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not less than 3 points over a season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_469", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players responsible for less than 3 blocks in any one season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_478", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players all season assists totaled over 3", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_485", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players whose total number of assists in any one given season equals at most 3", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_486", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played less than 3 games this season", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_489", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players had 3 or fewer steals over a season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_491", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has got a maximum of 3 turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_508", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players made at 13 rebounds over the season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_528", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more that three steals over all seasons", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_535", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 points over a season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_539", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored less than three points", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_540", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players who accrued a total of points in any one season totalling more than 3", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_543", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played less than 4 games over a season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_558", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 3 fouls over a season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_560", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a minimum of three steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_563", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had got less than 3 turnovers", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_567", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who made more than 3 steals in a given season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_572", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player makes less than 3 rebounds per career average season", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_576", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_595", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with no more than 3 steals a season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_597", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not score more than three points in a season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_606", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than three blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_616", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have at least 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_617", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has 3 allseason rebounds maximum", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_625", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have gotten time in at least 3 games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_631", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is someone with less than 3 blocks in a season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_635", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_642", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 assists", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_644", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no more than three allseason blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_654", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with greater than three blocks in a season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_658", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has at least 3 assists over a season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_670", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played no more than three games", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_688", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less points this season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_715", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players who have point scores for any one season of no more than 3", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_722", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players have less than 3 steals on them in a season", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_723", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least three assists last season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_728", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have 3 or more assists over the season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_733", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more than three fouls per game over the season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_735", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three rebounds this season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_749", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played more than 3 games", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_760", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who played more than 3 games over a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_761", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 3 assists over a season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_762", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer than three blocks per season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_773", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had at least three fouls in the season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_775", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player made more than 3 blocks over the season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_787", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with minimum 3 steals over a season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_795", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer turnovers than three", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_800", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not less than 3 fouls over a season is at least 3", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_805", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 turnovers", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_821", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with fewer than three assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_832", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_838", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players whose number of points is less than 3 over a season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_860", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 blocks", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_861", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players had game time in at least 3 games over the season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_881", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 2 points over a season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_886", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more than three fouls in the season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_908", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made a minimum of 3 blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_915", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has been in for only 1 or 2 games in a season", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_923", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had at most 3 games allseason", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_935", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more than three rebounds in the season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_937", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more than 3 allseason blocks", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_947", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos averaged no more than 3 rebounds each season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_968", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with rebounds in any one season equalling less than 3", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_971", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with total foul tallies of less than 3 in any one particular season", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_979", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more than 3 turnovers over all seasons", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_994", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played more than 3 fouls", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1021", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more than three fouls over a season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1022", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than three assists during the season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1025", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has under 3 assists all season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1044", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 turnovers", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1047", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find a player with 3 or less blocks in any given season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1052", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played 3 or less games", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1055", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose assists over a season is at most 3", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1056", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who have less than three steals in a season", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1057", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made less than 4 points in a season", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1067", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 turnovers", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1079", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got more than 3 assists each season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1080", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has equal to or more than 3 turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1086", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 steals", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1089", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played more than 3 games in a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1092", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played 3 or more games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1095", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who have played fewer than 3 games in a season", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1096", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played fewer than three games", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1098", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or equal to 3 fouls", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1100", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with at most 3 turnovers over a season", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1104", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has got a minimum of 3 turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1120", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more assists", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1129", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with a total number of turnovers in any one specific season that is less than 3", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1144", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no less than 3 allseason rebounds", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1148", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played more than 3 games", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1151", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more than 3 assists to their credit per season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1153", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had 3 or less rebounds", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1195", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 points this season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1199", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than three fould per game over the season players with the fewers", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1207", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than 3 blocks over all seasons", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1214", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1215", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that average at least three assists per game over a season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1216", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than three fouls in a season", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1223", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 assists", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1231", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with three or more fouls in a season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1233", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 blocks allseason", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a maximum of 3 fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1252", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored 3 or less points during a season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1255", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note the players whose total number of rebounds in any one given season is more than 3", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1257", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least three points during the season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1278", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that scored three or more points per game last season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1283", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1285", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who made less than 4 steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1289", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three played games", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1296", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played less than three games", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1301", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored more than 3 points", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1303", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player as less than 3 assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1305", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1306", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have more than 3 turnovers over all seasons", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1307", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have no more than three assists over a season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1310", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players score at least 3 points per season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1313", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 turnovers", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1323", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players with assist scores over any given season that tally more than 3", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1327", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1328", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players all season blocks were no less than 3", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1335", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played minimum 3 games over a season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1338", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has less than 3 blocks over a season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1348", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no less than 3 allseason steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1350", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less steals this season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1361", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players scored at least three points over a season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1365", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who has played at most 3 games over this season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1371", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had three or fewer assists over the season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1376", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have no more than 3 fouls over all seasons", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1378", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with point totals in any one season equalling at least 3", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1384", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more than three steals over a season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1398", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more than 3 blocks over a season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1407", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least three steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1414", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played less than 3 games", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1429", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had more than three assists in a season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1433", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1434", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has less than 3 assists over a season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1436", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1437", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three turnovers in the season", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1440", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players has less than 3 allseason fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1446", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players had fewer than 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1448", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has a maximum of 3 allseason turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1461", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had 3 or more assists", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1464", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with a total number of rebounds in a season greater than three", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1465", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more 3 or more turnovers in a game", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1469", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with fewer than three points", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1487", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had less than or equal to 3 points", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1493", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with at least 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1499", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three assists during the season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1506", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have at least 3 blocks a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1514", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player having not less than 3 blocks over a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1520", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had over 3 fouls", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1523", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more than three fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1524", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player scored less than 3 points in a full season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1526", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players who have participated in more than 3 games in a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1529", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 points", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1535", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 turnovers over a season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1541", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_1", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than 3 rebounds in an average season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_9", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have played less than 3 games over all seasons", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_17", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players had more than 3 points in a season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_20", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who made more than2 steals over a season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_22", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or fewer blocks", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_32", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had got a minimum of 3 points", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_36", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whos season average is more than 3 blocks", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_50", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player averages less than 3 blocks per season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_71", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 rebounds", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_72", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had less than 3 blocks over all seasons", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_81", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 points in a season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_98", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players give up less than 4 turnorvers per season", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_101", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least three turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_122", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_144", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three blocks in the season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_152", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than 4 assists over a season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_test_161", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has made no more than 3 steals per season in their career", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_164", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players made at least 3 rebounds over the season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_165", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player with 3 or less fouls each season", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_167", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the players with turnover tallies of at least 3 in any one season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_170", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that has played at least 3 games in a season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_171", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got at least 3 blocks in a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_178", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had 3 or less turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_180", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored more than 3 points", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_189", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than 4 rebounds", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_193", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three steals during the season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_196", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with more than 3 steals over all seasons", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_198", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that did not have more than three steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_206", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less rebounds", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_212", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 assists over a season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_test_213", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players made more than 3 rebounds in a season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_215", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more than 3 fouls every season theyve played", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_222", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more than 3 games played during a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_226", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has  got less than 3 rebounds", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_228", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with total fouls in any one season equalling an amount more than 3", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has less than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_242", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with fouls to their credit equalling at least 3 in any given season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_250", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has minimum 3 points over a season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_257", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who played more than 3 games all season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_300", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or equal to 3 blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_305", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer than three rebounds", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_310", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who averages at least 3 fouls a season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_317", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who gets more than 3 steals a season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_322", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has less than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_330", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has 3 or less steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_343", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played 3 or less games this season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_345", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has gotten 3 or more steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_347", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_test_349", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have less than 3 steals during a season", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_369", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more than three points scored", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_370", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more fouls", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_376", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player with more than 3 baskets per season played", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_377", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made more than 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_383", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or less than 3 fouls", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_45", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more and less than 3 steals over all seasons", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_54", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has played more or less than 3 games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_62", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or less than 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_92", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player doesnt have 3 assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_117", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had more or less fouls than 3 over a season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_123", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not have three assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_154", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has not played 3 games over a season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_183", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who do not have three steals over the course of a season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_215", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had a point score that was not three", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_229", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not have three turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_342", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not score 3 rebounds", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_359", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or less than 3 steals", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_395", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose fouls are not 3 over a season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_440", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who never played 3 games over a season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_450", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played fewer than 3 games so far this season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_472", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players acquired less or more that 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_533", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had points more or less than 3", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_546", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player not with 3 turnovers over a season", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_573", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less and more than 3 rebounds over all seasons", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_582", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player doesnt average over 3 assists per game", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_590", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player didnt have 3 assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_591", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player not with 3 blocks over a season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_592", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had less than 3 points in a season", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_632", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not had three rebounds in a season", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_678", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not made3 blocks", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_682", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not have3 rebounds", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_776", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not have 3 steals", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_799", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player that doesnt make even 3 steals per season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_803", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not have 3 steals", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_824", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player did not score 3 points", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_850", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have participated in less or more than 3 games in a given season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_864", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have a total number of fouls over a season that is not 3", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_899", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players scored more or less than 3 points in a season", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_916", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have less than 3 turnovers this season", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_957", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with point tallies in any one season either less than or more than 3", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_1007", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player didnt play 3 games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_1066", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had a total number of rebounds in a season not equal to three", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_1090", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more and less than 3 blocks over seasons", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1132", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has players that are not the 3 had", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_1150", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with assists not equal to three in a season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1176", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than 4 assists in a season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1179", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had did not have 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_1300", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not have 3 assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1308", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not played 3 fouls", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1311", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more or less than 3 all season rebounds", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_1336", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more and less than 3 fouls over all seasons", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1353", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that never made 3 blocks in a season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1355", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played and hasnt scored a 3", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_1387", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has less than 3 fouls total in a season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1388", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who did not have three fouls in the season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1396", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not have exactly three assists in any given season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1423", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players whose total number of points in a season is not 3", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_1458", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more or less than 3 blocks", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1477", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant average over a season", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_1484", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with blocks to their credit that tally less than 3 or more than 3", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1486", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose steals are not 3 over a season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_test_2", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who did not have three blocks this season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_test_6", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players didnt commit 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_test_60", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more or less than 3 steals during a season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_test_76", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has other than 3 allseason games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_test_82", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_test_89", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who doesnt have 3 assists over a season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_test_116", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not played three games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_test_149", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not got 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_test_185", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that doesnt have 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_test_231", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 blocks in a season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_test_270", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have not even made 3 rebounds in a season", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_test_326", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who did not have three steals in the season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_test_335", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not have 3 blocks", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_test_390", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_203", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for the fewest teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_285", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who scored the least on the team", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_308", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the fewest positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_372", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player is the most versatile and plays the most number of positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_506", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player that represented most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_542", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_660", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which played has played on the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_706", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_789", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with lowest jersey number", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_872", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player was on the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_906", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_943", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the least position", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_952", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has played the least number of positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1043", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the smallest number on the team", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1097", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the greatest number of positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1130", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played the fewest positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1161", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has held the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1163", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has minimum number of teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1184", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has maximum number of teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1268", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has been apart of the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1339", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played for the least number of teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1441", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have been on the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1471", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has the least number of position", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_test_74", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players play for the least amount of teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_test_90", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who played for the most number of teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_test_179", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the least number of positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_test_374", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smallest number of assists over a season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_6", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the fewest allseason turnovers", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_7", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note the player with the highest number of rebounds to their credit in any one season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_13", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the lead for most turnovers in a season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_23", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the most blocks during the season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_37", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most rebounds in a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_53", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smallest number of fouls over a season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_76", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least fouls this season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_78", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the lowest number of assists in a season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_86", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the least amount of turnovers in a season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_102", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest rebounds in one season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_108", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least amount of blocks", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_132", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored the minimum number of points ", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_170", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the maximum number of steals", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_198", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who leads the points race so far this season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_224", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has less rebound over all seasons", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_235", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "98019705layers with the fewest turnovers per game during the season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_258", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least rebounds", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_300", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with the fewest turnovers during a season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_302", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos made the most assists from the start of the season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_303", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most points this season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_325", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player with the highest number of blocks to his credit in any one season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_331", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "over a season which player has the largest number of rebounds", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_333", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the most steals in a season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_339", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most steals per season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_345", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the most blocks in a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_351", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the most assists", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_401", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the record for steals", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_404", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the most blocks in a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_411", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that has the least fouls over all seasons", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_416", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the fewest fouls per season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_455", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in the most games this season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_456", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the minimum number of games", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_507", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made the minimum number of turnovers", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_513", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the fewest turnovers this season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_524", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played in the most games", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_534", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "the player with least blocks over a season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_561", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most fouls this season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_566", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest assists", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_568", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have had the least amount of turnovers in any one particular season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_570", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the least fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_571", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has most rebounds over a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_574", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the lowest average blocks per season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_578", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the most rebounds", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_579", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most points scored over all seasons", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_588", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who made the most turnovers over all seasons", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_602", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most fouls in a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_603", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the largest number of assists over the season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_627", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the most steals", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_639", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the least amount of games", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_685", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the most turnovers in a season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_689", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most  turnovers in any one season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_701", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the least steals", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_708", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most number of blocks over a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_724", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the least amount of rebounds in a season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_753", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the largest number of all season fouls", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_759", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the fewest rebounds ever", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_781", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the fewest allseason blocks", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_792", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the lead for fouls in a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_804", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the most career blocks per season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_829", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played in the fewest games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_867", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made least points", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_887", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least assists this season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_888", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_898", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has been in the least number of games in any one season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_905", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "the player who made most fouls over a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_907", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the most fouls", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_921", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the fewest all season fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_928", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made the maximum number of blocks", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_958", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the fewest steals all season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_978", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most turnovers over a season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_987", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most number of steals over a season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_988", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the record number of games in a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1026", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the most steals during a single season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1031", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the most turnovers", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1050", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which plater made the least amount of blocks during the season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1065", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the record for most rebounds in a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1107", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of steals", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1113", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the most games", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1149", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest rebounds", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1152", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least points", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1154", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least points this season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1159", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played the most games in a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1166", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the least number of points in this season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1185", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the most points", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1204", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the least played games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1208", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least steals this season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1217", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who has scored the most points in a season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1246", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the least turnovers so far this season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1256", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the fewest fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1264", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest blocks in a season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1276", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who played the fewest games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player responsible for the biggest number of steals in any one season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1279", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with least number of blocks over a season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1284", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the fewest points in a year", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1286", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the record for fewest steals in a season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1320", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has most allseason points", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1321", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made the least number of blocks", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1326", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least assists", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1349", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the lowest amount of rebounds in a season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1363", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played largest numbergames over a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1367", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players has the most points over all seasons", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1370", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the fewest games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1373", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the highest number of assists", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1374", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the fewest assists per season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1382", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most points over a season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1389", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played more number of games over a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1390", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player with the highest score of assists performed in any one given season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1395", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played in the most games during a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1409", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most number of fouls over a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1420", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played the fewest games", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1421", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have the least amount of fouls in a season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1453", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the least rebounds this season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1475", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the most played games over all seasons", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1494", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most turnovers", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1500", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most blocks this season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1547", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smallest number of points over a season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_3", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player who had the least number of steals over an entire season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_4", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player that has the hightest point score over any one season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_10", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most steals this season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_11", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the least amount of assists over a season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_47", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most assists this season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_64", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the fewest steals", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_95", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played least number of games over a seasono", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_test_106", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the most turnovers per season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_138", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the largest number of fouls over all seasons", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_159", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the most rebounds in a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_test_214", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has highest number rebounds", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_test_289", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the maximum number of fouls", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_304", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players responsible for the least number of assists over any given season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_312", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least blocks this season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_314", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who made the least steals over a season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_323", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the fewest points in the season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_333", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the most allseason assists", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_339", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the least turnovers", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_355", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the most blocks over a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_362", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the maximum number of turnovers", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_389", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
