{"paraphrased": "players who are forwards or point guards", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_293", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what nba teams play in cleveland or la", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_24", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either los angeles lakers or cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_train_1106", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_112", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either los angeles lakers or cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_134", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "player who plays position point guard or forward", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_771", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "name a point guard or a forward", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_284", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which team is it the la lakers or the cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_252", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which player is it kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_113", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "who is better kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_705", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "players for seasons other than 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_test_48", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players who did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_493", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not play in the 2004 season", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_986", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_test_240", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_657", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_848", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_1422", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that did no play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_393", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_965", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1337", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players who played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_test_118", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_327", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that started playing between the 2004 and 2010 seasons", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_test_190", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1001", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player did not play in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_713", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who played 2004 to 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_547", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played in the 2004 or 2010 seasons", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_25", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or less fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_885", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less blocks than kobe bryant over all seasons", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_12", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players with a total number of blocks in any one season that is more than the total number of blocks in any one season acquired by kobe bryant", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_596", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of blocks over a season is not less than that ofplayer kobe bryant over a season", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1062", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more points than kob bryant over a season", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_383", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played more games in a season than kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_338", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players with steals over a season equal to or more than the number of steals made by kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_183", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has less rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_158", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have played in the same number of games as kobe over all seasons", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_365", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had equal or more fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_204", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_test_251", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make in 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_683", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "for season 2004 note the number of total assists of kobe bryant", "source": "number of assists (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "qid": "basketball_train_1253", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in the 2004 season", "source": "number of played games (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "qid": "basketball_train_931", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in the 2004 season", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_1135", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what is the points kob bryant scored in season 2004", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_666", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in the 2004 season", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_1203", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "steals by kobe bryant in 2004", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_143", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant make in 2004", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_1333", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant from 2004 season", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_962", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
