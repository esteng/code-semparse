{"paraphrased": "show me recipes that can be used for two meals", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_846", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "the receipe is for two meal", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_159", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe can be used for two or more meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_668", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require at least two ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_296", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes require one or two ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_660", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes with fewer than two ingredients", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_180", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires three or more ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_72", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes require no more than two ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_262", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find me the recipes need more than one ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_862", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe for more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_130", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "either 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "recipes_train_173", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "show me recipes for lunch posted in 2004", "source": "recipe that is for lunch and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_285", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipe posted in 2004 needs milk for preparation", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_777", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "a lunch recipe posted in 2004", "source": "recipe that is for lunch and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_605", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipes posted in 2004 require milk", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_578", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipes need milk and is posted in 2004", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_268", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipes posting date is in 2004 and requires milk", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_test_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipe requiring milk posted in 2004", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_622", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipes posted in 2004 require milk", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_485", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show recipes posted in 2004 and has milk as one of its ingredients", "source": "recipe that requires milk and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_601", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes for lunch posted in 2004", "source": "recipe that is for lunch and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me all recipes posted in 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_test_108", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipe was posted in 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_165", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "the receipe posting date is 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_test_55", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipes posting date is 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_371", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "find recipes posted in 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_394", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me all recipes from 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_test_0", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me all the recipes posted in 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "are there any recipes which were posted twice in 2004", "source": "recipe whose posting date is 2004 and whose posting date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_231", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipe was posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_588", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted 2004 and earlier", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_590", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_362", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_752", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_184", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted no earlier than 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_286", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe which was posted no later than 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_643", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe posted later than 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_854", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show recipes whose posted date is on or before 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipes were posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_762", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what meals are recipes for lunch for", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_299", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredient is called for by a lunch recipe", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_test_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me recipes requiring the ingredient milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_292", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipes require milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_566", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me ingredients required by recipes that require milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_265", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal has a recipe requiring milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_27", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is a recipe requiring milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_109", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find meal recipes for lunch", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipe needs milk for  its preparation", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_140", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipe is for a lunchtime meal", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_178", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "recipe with posting date 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_703", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipe has its posting date as 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_31", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "recipe not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_test_196", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipe was not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes posted in 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_819", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes posted in 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_859", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipes were not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_test_94", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes that were not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_826", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_776", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipes posting date is not in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_22", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show recipes posted on dates between 2004 and 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_556", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes with posting date before 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_476", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted before 2004 or before 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_96", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004 or after 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_498", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "which recipes were posted after 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_234", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted in or after 2004 or in or after 2010", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_572", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "a recipe which posted no sooner than 2004 or 2010", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipes posting date is at most 2004 or 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_445", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes with posting dates from 2004 or later", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_417", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe was posted during or before 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_test_162", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe needs least ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_424", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe can make the most meals", "source": "recipe that is for the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_726", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is designed for the most number of meals", "source": "recipe that is for the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_14", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe is used for the most meals", "source": "recipe that is for the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_278", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipe that needs the maximum number of food items", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_393", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me the recipe that has the most number of requirements", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_429", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe has the shortest ingredient list", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_713", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipes for all kinds of meals", "source": "recipe that is for the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_824", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes have the most ingredients", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_33", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe makes the fewest meals", "source": "recipe that is for the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_756", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
