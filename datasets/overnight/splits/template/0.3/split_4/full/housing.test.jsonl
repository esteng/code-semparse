{"paraphrased": "housing unit with a post date earlier than january 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_550", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing unit with a posting date at the latest january 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_442", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which housing unit was posted before jan 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which housing unit is posted on or before jan 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_368", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing posted before january 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_675", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing that was posted january 2 or later", "source": "housing unit whose posting date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_229", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "find housing units posted before january 2nd", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_62", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what housing was posted no earlier than jan 2", "source": "housing unit whose posting date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_729", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing units posted after january 2", "source": "housing unit whose posting date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_89", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose posting date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_527", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "apartment between 800 and 1000 square feet", "source": "housing unit whose size is at most 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string <=) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_436", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "apartments with rent between 1500 to 2000 dollars", "source": "housing unit whose monthly rent is larger than 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string >) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_120", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which housing unit is available for a rent of 1500 2000 dollars", "source": "housing unit whose monthly rent is at least 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string >=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_test_3", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which housing unit is available for a rent of 1500 pr 2000 dollars per month", "source": "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_test_139", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing at least 800 to 1000 square feet", "source": "housing unit whose size is larger than 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_735", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing with rent less than 1500 or less than 2000", "source": "housing unit whose monthly rent is smaller than 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_test_105", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which housing unit is bigger  in area by 800 square feet or 1000 square feet", "source": "housing unit whose size is larger than 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_312", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "apartments between 800 and 1000 square feet", "source": "housing unit whose size is at least 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >=) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_test_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing that is 1500month or less or 2000month or less", "source": "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_514", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what housing is priced at 1500 or 2000 dollars", "source": "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what kind of housing is 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_365", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing in the neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street and 900 mission avenue", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_624", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is 900 mission ave and 123 sesame street", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_681", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit resembles 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_398", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhoods in 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing unit that is the same as the ones on 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing types like 123 sesame street or 900 mission avenue", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_130", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_90", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartments posted after january 2", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_test_169", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "which housing unit was not posted on jan 2", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_618", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "find housings unit posted on other dates except for january 2nd", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_63", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "which housing posted on a date other than january 2nd", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_136", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "which housing unit posted jan 2nd", "source": "housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_427", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing not posted on january 2", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_525", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing in midtown west that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_87", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find apartments posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_251", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units with a posting date of january 2nd that are located in midtown west", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit in west midtown posted on january 2", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an apartment that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_318", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit posted on jan 2 is in midtown west", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_167", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in midtown west that posted on january 2", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_124", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment housing that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_502", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_187", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what neighborhood housing units allows dogs", "source": "neighborhood that is neighborhood of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_test_128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "unit with private bath", "source": "housing type that is housing type of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_699", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which housing unit in this neighbourhood has the facility of a private bath", "source": "neighborhood that is neighborhood of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_558", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with housing that has a private bath", "source": "neighborhood that is neighborhood of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_320", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what kinds of housing allow cats", "source": "housing type that is housing type of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_463", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which neighborhoods have housing where dogs are allowed", "source": "neighborhood that is neighborhood of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "find housing that allows cats", "source": "neighborhood that is neighborhood of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what kinds of housing allow dogs", "source": "housing type that is housing type of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_test_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with housing units with private rooms", "source": "neighborhood that is neighborhood of housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room))))", "qid": "housing_train_359", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with dogfriendly apartments", "source": "neighborhood that is neighborhood of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_train_700", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the neighborhood of housing unit of the apartments", "source": "neighborhood that is neighborhood of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_train_344", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find housing units of the type apartment", "source": "housing type that is housing type of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_train_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "housing types in the midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_143", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "apartment similar to the apartment in midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_513", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "where is midtown west", "source": "neighborhood that is neighborhood of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_677", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what are housing types found in the neighborhoods of midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_435", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what are the housing units in the area around midtown west", "source": "neighborhood that is neighborhood of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_510", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is in midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_457", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kinds of housing is there in midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_test_54", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which housing unit has an apartment kind of house", "source": "housing type that is housing type of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_train_481", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me housing that is the same type as 123 sesame street", "source": "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_1", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the housing type of 123 sesame street", "source": "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_341", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "want a housing type like 123 sesame street", "source": "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_413", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood of 123 sesame street", "source": "neighborhood that is neighborhood of 123 sesame street and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_591", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the neighborhood of 123 sesame street called as", "source": "neighborhood that is neighborhood of 123 sesame street and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_655", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the monthly rent of housing units posted on january 2nd", "source": "housing unit whose monthly rent is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_642", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "a housing unit that was posted on january 2", "source": "housing unit whose housing type is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_189", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "housing with any monthly rent posted on january 2", "source": "housing unit whose monthly rent is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_638", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "a housing unit posted on january 2 in any neighborhood", "source": "housing unit whose neighborhood is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_387", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what housing unit was posted on jan 2", "source": "housing unit whose posting date is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_191", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what neighborhood is the housing unit in that was posted january 2", "source": "housing unit whose neighborhood is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_230", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "all housing units posted on january 2", "source": "housing unit whose posting date is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_572", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose size is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_476", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what type of housing unit posted jan 2nd", "source": "housing unit whose housing type is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_test_106", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "housing unit for rent posted on january 2", "source": "housing unit whose monthly rent is housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))", "qid": "housing_train_266", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what kind of housing has the least number of units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_8", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "where are the most number of housing units found", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_355", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what are the rare housing types", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_329", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the fewest amount of housing units", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_4", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "rarest housing type", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_241", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what housing units have a small amount of housing units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_58", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "apartments with the least amount of units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_158", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing types of the most units", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_225", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the most housing units", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_38", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "apartment complexes with the most units available", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_77", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what housing unit posted was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that is posting date of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string posting_date)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in 123 sesame street neighborhood that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_499", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units who have a posting date of january 2nd and on 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is size of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string size)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_627", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing that was posted on january 2 has the same rent as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string rent)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_test_83", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing posted on january 2 around 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_549", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a housing unit on 123 sesame street that posted on january 2", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_92", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing like 123 sesame street that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that is size of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string size)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_205", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing typical of 123 sesame street housing posted on january 2", "source": "housing unit whose posting date is jan 2 and that is size of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string size)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_195", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that was posted on january 2 of 123 sesame street kind", "source": "housing unit whose posting date is jan 2 and that is posting date of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string posting_date)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_430", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that is the same type as 123 sesame street that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_169", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in midtown west that costs 1500month", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_75", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit has apartment kind of houses with an area of 800 square feet", "source": "housing unit whose housing type is apartment and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_492", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing apartments that costs 1500 dollars", "source": "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units in the neighborhoods of midtown west with 1500 dollars as monthly rent", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_356", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit in midtown area has a monthly rent of 1500 dollars", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_66", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what apartment costs 1500 dollars", "source": "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_48", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing unit which is an apartment with a monthly rent of 1500 dollars", "source": "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_182", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot apartments in midtown west", "source": "housing unit whose neighborhood is midtown west and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_524", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartments at 800 square feet", "source": "housing unit whose housing type is apartment and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_704", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartments in midtown west with a rent of 1500 a month", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_545", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit has 1500 dollars as monthly rent", "source": "housing unit whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_625", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units with rent as 1500 dollars per month", "source": "housing unit whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_163", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit has less than 800 square feet", "source": "housing unit whose size is not 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string !=) (number 800 en.square_feet)))", "qid": "housing_test_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing unit whose monthly rent is not 1500 dollars", "source": "housing unit whose monthly rent is not 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string !=) (number 1500 en.dollar)))", "qid": "housing_test_170", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units with monthly not equal to 1500 dollars", "source": "housing unit whose monthly rent is not 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string !=) (number 1500 en.dollar)))", "qid": "housing_train_456", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is more than 800 square feet", "source": "housing unit whose size is not 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string !=) (number 800 en.square_feet)))", "qid": "housing_train_396", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartment for rent at 1500", "source": "housing unit whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_146", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is not 1500month", "source": "housing unit whose monthly rent is not 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string !=) (number 1500 en.dollar)))", "qid": "housing_train_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet sized housing units", "source": "housing unit whose size is 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_347", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me housing with 800 square feet of space", "source": "housing unit whose size is 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_548", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "list all housing that is smaller than 800 square feet", "source": "housing unit whose size is smaller than 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string <) (call ensureNumericEntity (number 800 en.square_feet))))", "qid": "housing_train_234", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "apartments 800 square feet and above", "source": "housing unit whose size is at least 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >=) (call ensureNumericEntity (number 800 en.square_feet))))", "qid": "housing_train_590", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "housing unit that is cheaper than 1500 dollars", "source": "housing unit whose monthly rent is smaller than 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <) (call ensureNumericEntity (number 1500 en.dollar))))", "qid": "housing_train_157", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "housing that is 800 square feet or less", "source": "housing unit whose size is at most 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string <=) (call ensureNumericEntity (number 800 en.square_feet))))", "qid": "housing_train_255", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "apartments for rent below 1500", "source": "housing unit whose monthly rent is at most 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (number 1500 en.dollar))))", "qid": "housing_train_278", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "unit larger than 800 square feet", "source": "housing unit whose size is larger than 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >) (call ensureNumericEntity (number 800 en.square_feet))))", "qid": "housing_train_423", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which housing unit has a monthly rent of more than 1000 dollars", "source": "housing unit whose monthly rent is larger than 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string >) (call ensureNumericEntity (number 1500 en.dollar))))", "qid": "housing_train_503", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "housing that is cheaper than 1500month", "source": "housing unit whose monthly rent is smaller than 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <) (call ensureNumericEntity (number 1500 en.dollar))))", "qid": "housing_train_294", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "housing under 800 square feet", "source": "housing unit whose size is smaller than 800 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string <) (call ensureNumericEntity (number 800 en.square_feet))))", "qid": "housing_train_747", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "housing costing more than 1500 dollars per month", "source": "housing unit whose monthly rent is larger than 1500 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string >) (call ensureNumericEntity (number 1500 en.dollar))))", "qid": "housing_train_543", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "apartment with a private bath for rent at 1500", "source": "housing unit that has a private bath and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_660", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me housing with 800 square feet of space where cats are acceptable", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_201", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is 1500month with a private room", "source": "housing unit that has a private room and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartment with a private room for rent at 1500", "source": "housing unit that has a private room and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_444", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit with a rent of 1500 dollars per month permits cats in it", "source": "housing unit that allows cats and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_636", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit with an area of 800 square feet permits  cats and dogs inside it", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_test_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet housing units that are cat friendly", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_343", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what housing unit has a price of 1500 dollars and allows dogs", "source": "housing unit that allows dogs and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_38", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "pet friendly housing with 1500 dollars as rent", "source": "housing unit that allows dogs and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_411", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot dogfriendly apartment", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_715", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
