{"paraphrased": "what meal is good to be served for groups", "source": "meal that restaurant that is good for groups serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups))))", "qid": "restaurants_train_149", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what meal can you get for take out at the restaurant", "source": "meal that restaurant that has take-out serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout))))", "qid": "restaurants_train_1027", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what cuisines are offered by restaurants that offer takeout", "source": "cuisine that is cuisine of restaurant that has take-out", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout))))", "qid": "restaurants_train_707", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "restaurants with a cuisine that is child friendly", "source": "cuisine that is cuisine of restaurant that is good for kids", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids))))", "qid": "restaurants_test_115", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which neighborhood restaurants have waiters", "source": "neighborhood that is neighborhood of restaurant that has waiter service", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter))))", "qid": "restaurants_test_176", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what neighborhoods have restaurants that serve outdoors", "source": "neighborhood that is neighborhood of restaurant that has outdoor seating", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor))))", "qid": "restaurants_train_5", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what meals do the restaurant with reservations serve", "source": "meal that restaurant that takes reservations serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve))))", "qid": "restaurants_test_201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves group meals", "source": "meal that restaurant that is good for groups serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups))))", "qid": "restaurants_train_154", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what cuisine options are there among group friendly restaurants", "source": "cuisine that is cuisine of restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups))))", "qid": "restaurants_train_306", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "cuisine that is cuisine of restaurant that is good for groups", "source": "cuisine that is cuisine of restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups))))", "qid": "restaurants_train_138", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what restaurants received 3 stars and serve lunch", "source": "restaurant that serves lunch and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_156", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "a three star restaurant that serves lunch", "source": "restaurant that serves lunch and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_58", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that serves lunch and whose price rating is 2 dollar signs", "source": "restaurant that serves lunch and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_110", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what midtown west restaurants have a price rating of 2 dollar signs", "source": "restaurant whose neighborhood is midtown west and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_649", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with 3 star ratings and that serve lunch", "source": "restaurant that serves lunch and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_206", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that serves lunch and whose star rating is 3 stars", "source": "restaurant that serves lunch and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1056", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants that serve lunch with a price rating of 2", "source": "restaurant that serves lunch and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 3 stars in midtown west", "source": "restaurant whose neighborhood is midtown west and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_725", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurants in midtown west have a price rating of 2 dollar signs", "source": "restaurant whose neighborhood is midtown west and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which hotel in midtown west has a 3 star stating", "source": "restaurant whose neighborhood is midtown west and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_69", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with 2 or 3 price rating", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_874", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "hotel which has a price rating of 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_369", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant with 5 stars or 3 stars rating", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_test_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants in the 2 or 3 dollar sign price range", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that have a price rating of 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_1227", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants with a 3 or 5 star rating", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_504", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "which restaurants are rated 3 or 5 stars", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_1021", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant with a 2 or 3 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_894", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants with star ratings of 3 or 5", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_1296", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_1082", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "what restaurants deliver that serve food good for kids", "source": "restaurant that is good for kids and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string delivery)))", "qid": "restaurants_train_687", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which restaurant welcomes children and has outdoor seats", "source": "restaurant that has outdoor seating and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string kids)))", "qid": "restaurants_train_501", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "a restaurant that is group friendly", "source": "restaurant that is good for groups and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string groups)))", "qid": "restaurants_train_844", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants with waiters that are good for groups", "source": "restaurant that has waiter service and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string groups)))", "qid": "restaurants_train_1067", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find a restaurant with outdoor seating that takes credit cards", "source": "restaurant that takes credit cards and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string outdoor)))", "qid": "restaurants_train_316", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that takes reservations", "source": "restaurant that takes reservations and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string reserve)))", "qid": "restaurants_train_321", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants that deliver and are good for large parties", "source": "restaurant that has delivery and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string groups)))", "qid": "restaurants_test_67", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "great place for groups and takes reservations", "source": "restaurant that takes reservations and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string groups)))", "qid": "restaurants_train_18", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that delivers and has an outdoor seating area", "source": "restaurant that has delivery and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string outdoor)))", "qid": "restaurants_train_953", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which hotel offers delivery services", "source": "restaurant that has delivery and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string delivery)))", "qid": "restaurants_train_211", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that is open for lunch and dinner", "source": "restaurant that serves lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call concat en.food.lunch en.food.dinner)))", "qid": "restaurants_train_998", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "list all thai or italian restaurants", "source": "restaurant whose cuisine is thai or italian", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call concat en.cuisine.thai en.cuisine.italian)))", "qid": "restaurants_train_492", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "hotel with a thai or italian restaurant", "source": "restaurant whose cuisine is thai or italian", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call concat en.cuisine.thai en.cuisine.italian)))", "qid": "restaurants_train_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurant that serves lunch or dinner", "source": "restaurant that serves lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call concat en.food.lunch en.food.dinner)))", "qid": "restaurants_train_753", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which restaurants serve lunch or dinner", "source": "restaurant that serves lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call concat en.food.lunch en.food.dinner)))", "qid": "restaurants_train_879", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west or chelsea", "source": "restaurant whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "restaurants_test_193", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "thai or italian restaurants", "source": "restaurant whose cuisine is thai or italian", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call concat en.cuisine.thai en.cuisine.italian)))", "qid": "restaurants_train_909", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "a restaurant in west midtown or chelsea", "source": "restaurant whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "restaurants_train_780", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "list all restaurants in midtown west or chelsea", "source": "restaurant whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "restaurants_train_1252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurants that serve lunch or dinner", "source": "restaurant that serves lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call concat en.food.lunch en.food.dinner)))", "qid": "restaurants_test_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurant that has two cuisine", "source": "restaurant that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "restaurants_test_170", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant has two different cuisines", "source": "restaurant that has at most two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string <=) (number 2)))", "qid": "restaurants_train_951", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant has more than two cuisines", "source": "restaurant that has at least two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string >=) (number 2)))", "qid": "restaurants_train_232", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant serves at least two cuisines", "source": "restaurant that has at least two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string >=) (number 2)))", "qid": "restaurants_train_853", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "name a restaurant serving more than two types of cuisine", "source": "restaurant that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "restaurants_train_1162", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants found in less than two neighborhoods", "source": "restaurant that has less than two neighborhood", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string <) (number 2)))", "qid": "restaurants_train_770", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that has at most two cuisine", "source": "restaurant that has at most two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string <=) (number 2)))", "qid": "restaurants_train_911", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurant offers fewer than two types of cuisine", "source": "restaurant that has less than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string <) (number 2)))", "qid": "restaurants_train_1286", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant with two locations", "source": "restaurant that has at most two neighborhood", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string <=) (number 2)))", "qid": "restaurants_train_1061", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants that has more than one cuisine", "source": "restaurant that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "restaurants_train_59", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "hotel that has a price rating of 2 dollar signs and a 3 star rating", "source": "restaurant whose price rating is 2 dollar signs and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_769", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and whose price rating is 2 dollar signs", "source": "restaurant whose star rating is 3 stars and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_542", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and whose star rating is 3 stars", "source": "restaurant whose price rating is 2 dollar signs and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_864", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and whose star rating is 3 stars", "source": "restaurant whose star rating is 3 stars and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_83", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "a three star restaurant thats mid priced", "source": "restaurant whose star rating is 3 stars and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1147", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that has 3 stars rating", "source": "restaurant whose star rating is 3 stars and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_305", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant has 3 stars and has a 2 menu", "source": "restaurant whose star rating is 3 stars and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurants have a price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "hotel that has a price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1306", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurants have a 3 star rating and 2 dollar price rating", "source": "restaurant whose star rating is 3 stars and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_30", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "in which neighborhood is thai cafe", "source": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_777", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what type of dishes does the thai cafe offer", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_212", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of cuisine is thai cafe", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_15", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals does thai cafe serve", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_617", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which cuisines match that of the thai cafe", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal served at the thai cafe", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_450", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a thai cafe in the neighborhood", "source": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_960", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals do the thai cafe serve", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "source": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_429", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals do the thai cafe serve", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1292", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant with alot of meals", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_660", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves the least number of meal", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_145", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which hotel offers the most number of meals", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_14", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant serves the most meals", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_65", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants with the most options", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1028", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurants serve the least number of meals", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_552", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "hotel that serves the minimum number of meals", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_61", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant has the largest menu", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_311", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant has the smallest menu", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_281", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which resturants serve the least number of meals", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_119", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurants are in the price rating level of two dollar signs", "source": "restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1002", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with a 2 dollar sign price rating", "source": "restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_82", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant does not have a 3 star rating", "source": "restaurant whose star rating is not 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string !=) (number 3 en.star)))", "qid": "restaurants_train_1273", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 3 stars", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_207", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "list all restaurants that have ratings above 2 ", "source": "restaurant whose price rating is not 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string !=) (number 2 en.dollar_sign)))", "qid": "restaurants_train_474", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant whose star rating is not 3 stars", "source": "restaurant whose star rating is not 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string !=) (number 3 en.star)))", "qid": "restaurants_test_331", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "list all 2 dollar signs restaurants", "source": "restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_590", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant doesnt have a 2 dollar sign", "source": "restaurant whose price rating is not 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string !=) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1037", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "hotel which has a 3 star rating", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_0", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurants have at least a 3 star rating", "source": "restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1234", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what kind of restaurant serves the same food as thai cafe", "source": "restaurant that serves meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_329", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants that serve the same type of food as thai cafe", "source": "restaurant whose cuisine is cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_152", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what restaurants are similar to thai cafe", "source": "restaurant that serves meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_test_181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name a restaurant in the neighbourhood of thai cafe", "source": "restaurant whose neighborhood is neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_772", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants that serve same meals as thai cafe", "source": "restaurant that serves meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_533", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what restaurant serves a meal similar to that found at the thai cafe", "source": "restaurant that serves meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_800", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the type of cuisine of thai cafe", "source": "restaurant whose cuisine is cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_765", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurant whose neighborhood is neighborhood that is neighborhood of thai cafe", "source": "restaurant whose neighborhood is neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_1202", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what restaurant serves the same food as the thai cafe", "source": "restaurant that serves meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_682", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what restaurants serve the same cuisine as thai cafe", "source": "restaurant whose cuisine is cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe)))", "qid": "restaurants_train_1024", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
