{"paraphrased": "what efron article cites multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_235", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article with venue anals of statistics that multivariate data analysis cites", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_569", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article by efron that cites multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_188", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles published in annals of statistics cited by multivariate data analysis", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_16", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles written by efron and cited by multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_60", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article by efron citing multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles citing multivariate data analysis and cited by multivariate data analysis", "source": "article that cites multivariate data analysis and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles by efron cited in multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_143", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article written by efron which multivariate data analysis cites", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_385", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article citing multivariate data analysis", "source": "article that cites multivariate data analysis and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_476", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "award winning article cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_325", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "awardwinning articles cited in articles using multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_419", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article cited by multivariate data analysis won an award", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_57", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that won awards cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_276", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what award winning article is cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_213", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "award winning articles cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an additional author to an efron article", "source": "person that is author of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_570", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue that is venue of article whose author is efron", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name the author whose article has its venue as annals of statistics", "source": "person that is author of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_330", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publications containing articles that cite multivariate data analysis", "source": "venue that is venue of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_18", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article is about multivariate data analysis", "source": "venue that is venue of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_17", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited in articles by efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_229", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article is cited by an article in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_582", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article is cited by an efron article", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article that cites multivariate data analysis", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what articles were written by efron", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue of at most two article", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_30", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name an author of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_274", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a person who has written no more than two articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_508", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that references one or two articles", "source": "article that at most two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_532", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of two article", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_531", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues of two articles or fewer", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_87", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the venue that is mentioned in more than two articles", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_45", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which articles cite more than two articles", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_617", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author with maximum two article", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_177", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writers of more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_598", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles published except in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_446", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article wasnt published in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_56", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article does not have a publication date of 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_test_82", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "find an article published in 2004", "source": "article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_3", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles that were not published in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_317", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles not published in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_20", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles written by efron", "source": "article whose author is efron and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string author) (string =) en.person.efron))", "qid": "publications_test_61", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis whose venue is annals of statistics", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_597", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article did efron write whose venue is annals of statistics", "source": "article whose venue is annals of statistics and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string author) (string =) en.person.efron))", "qid": "publications_train_140", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article was written by efron and discusses annals of statistics", "source": "article whose author is efron and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_399", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which annals of statistics article cites multivariate data analysis", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_105", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article written by efron cites multivariate data analysis", "source": "article whose author is efron and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_486", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article written by efron that cites multivariate data analysis", "source": "article whose author is efron and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_184", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article cites multivariate data analysis and is also its venue", "source": "article whose venue is annals of statistics and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_34", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles citing multivariate data analysis published in annals of statistics", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_329", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article on statistics that cites multivariate data analysis", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_521", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that is published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_587", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_339", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_605", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was published in 2004 or later", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_61", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article was published on or before 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_455", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "article whose publication date is at least 2004", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_390", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "find an article published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_226", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article has a publication date earlier than 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_592", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published in or after 2004", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_138", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_45", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published 2004 or more recent", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_test_84", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "article whose publication date is at most 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_test_87", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "name a person who is the author of an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_65", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who wrote multivariate data analysis more than once", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_28", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article citing multivariate data analysis", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_89", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name a person who is the author of an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_562", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name someone who has written an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_77", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by studies using multivariate data analysis", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_249", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article that multivariate data analysis cites", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_624", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the author of a multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_36", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "author of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_10", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that cite multivariate data analysis published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_566", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article that cites multivariate data analysis that is published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_279", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article published in 2004 cited multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_68", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what articles are published in annals of statistics and in the year 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_263", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "find an article in annals of statistics that was published in 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_286", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published in annals of statistics in 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_585", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was written by efron and has a publication date of 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_295", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles by efron published in 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_358", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article published by efron in 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which article was published in 2004 authored by efron", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_618", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article by efron cites multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_test_89", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that cite multivariate data analysis and are cited in multivariate data analysis", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_527", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles citing multivariate data analysis written by efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_169", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article exchanged citations with multivariate data analysis", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_525", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article cited bymultivariate data analysis whose venue is annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article written by efron that is cited by multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_426", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis in the annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_283", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which efron article cites multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_293", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by multivariate data analysis and published in annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_506", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article about multivariate data analysis in the annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_63", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that mentions award winning multivariate data analysis article", "source": "article that cites multivariate data analysis and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_280", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "articles that won an award written by efron", "source": "article whose author is efron and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string won_award)))", "qid": "publications_train_534", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "awardwinning articles by efron", "source": "article whose author is efron and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string won_award)))", "qid": "publications_test_104", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "award winning article whose venue is annals of statistics", "source": "article whose venue is annals of statistics and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string won_award)))", "qid": "publications_train_595", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "article whose venue is annals of statistics and that won an award", "source": "article whose venue is annals of statistics and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string won_award)))", "qid": "publications_train_623", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what award winning article was in annals of statistics", "source": "article whose venue is annals of statistics and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string won_award)))", "qid": "publications_train_591", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what efron article has won an award", "source": "article whose author is efron and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string won_award)))", "qid": "publications_train_176", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "award winning article published by annals of statistics", "source": "article whose venue is annals of statistics and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string won_award)))", "qid": "publications_train_41", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "award winning article published by efron", "source": "article whose author is efron and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string won_award)))", "qid": "publications_train_266", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "article that won an award and cites multivariate data analysis", "source": "article that cites multivariate data analysis and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_288", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which article cites an awardwinning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_421", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "an article that won award cites another article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "authors of awardwinning articles", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_465", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles cited by award winning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_420", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "who is the author of the article who won an award", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_555", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "venue that won an award based on the article", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_129", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "name an article that won an award", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_70", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what venue is about an article that won an award", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_75", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "name an article that won an award", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what person wrote articles than won an award", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
