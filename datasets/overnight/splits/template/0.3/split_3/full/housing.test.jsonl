{"paraphrased": "find housing units that is not an apartment", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_58", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit near midtown west", "source": "housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_231", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me housing units that arent apartments", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_496", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "looking for housing that isnt an apartment", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_240", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units far from midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_304", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing not in midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_335", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that isnt in midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_616", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find all units available midtown east", "source": "housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_539", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units that are apartments", "source": "housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all housing units that are apartments", "source": "housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_619", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "january 2 to february 3", "source": "jan 2 or feb 3", "target": "(call listValue (call concat (date 2015 1 2) (date 2015 2 3)))", "qid": "housing_train_670", "anonymized_target": "(call listValue (call concat (date 2015 1 2) (date 2015 2 3)))"}
{"paraphrased": "housing unit which is an apartment housing type with a private room", "source": "housing unit whose housing type is apartment and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_room)))", "qid": "housing_train_569", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "apartments with a private room", "source": "housing unit whose housing type is apartment and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_room)))", "qid": "housing_train_577", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "show me housing in midtown west where dogs are welcome", "source": "housing unit whose neighborhood is midtown west and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string allows_dogs)))", "qid": "housing_train_477", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "apartment that allows cats", "source": "housing unit whose housing type is apartment and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string allows_cats)))", "qid": "housing_test_184", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing units with a  orivate bath in the midtown west area", "source": "housing unit whose neighborhood is midtown west and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_bath)))", "qid": "housing_train_182", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing apartments with a private bath", "source": "housing unit whose housing type is apartment and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_bath)))", "qid": "housing_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "apartment with a master bathroom in midtown west neighbourhood", "source": "housing unit whose neighborhood is midtown west and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_bath)))", "qid": "housing_train_641", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "find housing units with private room near midtown west", "source": "housing unit whose neighborhood is midtown west and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_room)))", "qid": "housing_train_16", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "apartment with a private bathroom", "source": "housing unit whose housing type is apartment and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_bath)))", "qid": "housing_train_218", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "find apartments with a private bath", "source": "housing unit whose housing type is apartment and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_bath)))", "qid": "housing_train_110", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which housing unit with an area of 800 square permits dogs", "source": "housing unit whose size is 800 square feet and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_dogs)))", "qid": "housing_train_551", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which housing unit with an area of 800 square feet permits cats in it", "source": "housing unit whose size is 800 square feet and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_cats)))", "qid": "housing_test_119", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "800 square foot housing unit with a private room", "source": "housing unit whose size is 800 square feet and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_room)))", "qid": "housing_train_203", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing units that allow cats and charge 1500 rent monthly", "source": "housing unit whose monthly rent is 1500 dollars and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_cats)))", "qid": "housing_train_380", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find pet friendly housing units that charge 1500 dollars as rent", "source": "housing unit whose monthly rent is 1500 dollars and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_dogs)))", "qid": "housing_train_501", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "catfriendly apartments with rent at 1500", "source": "housing unit whose monthly rent is 1500 dollars and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_cats)))", "qid": "housing_train_258", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "apartment with a private bathroom for rent at 1500", "source": "housing unit whose monthly rent is 1500 dollars and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_bath)))", "qid": "housing_train_86", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing that is 800 square feet with a private bath", "source": "housing unit whose size is 800 square feet and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_bath)))", "qid": "housing_train_37", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which housing unit with an area of 800 square feet has the facility of a private room", "source": "housing unit whose size is 800 square feet and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_room)))", "qid": "housing_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing with 1500 rent and allows dogs", "source": "housing unit whose monthly rent is 1500 dollars and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_dogs)))", "qid": "housing_test_127", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what kind of housing has the least number of units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_8", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the least amount of housing", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_107", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the most apartment complexes", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_357", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "apartments with the least amount of units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_158", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the most available housing", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_646", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with the least housing units", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_736", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what housing units have a small amount of housing units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_58", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the fewest amount of housing units", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_4", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing types of the most units", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_225", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "looking for a quiet neighborhood", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_248", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing in midtown west with 800 square feet", "source": "housing unit whose neighborhood is midtown west and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_test_117", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing unit which is an apartment with a monthly rent of 1500 dollars", "source": "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_182", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find an apartment that is 800 square feet", "source": "housing unit whose housing type is apartment and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_349", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what apartment costs 1500 dollars", "source": "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_48", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me housing in midtown west where rent is 1500 dollars a month", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_749", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing in midtown west that costs 1500month", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_75", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing apartments that costs 1500 dollars", "source": "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartments in midtown west with a rent of 1500 a month", "source": "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_545", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot apartments in midtown west", "source": "housing unit whose neighborhood is midtown west and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_524", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet housing units in the neighborhoods of midtown west", "source": "housing unit whose neighborhood is midtown west and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_517", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartment in the midtown west neighborhood", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_113", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "looking for apartments", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_260", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units in the neighborhoods of midtown west", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_589", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing that is an apartment", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_207", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit has houses of apartment kind", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_30", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments in midtown west", "source": "housing unit whose neighborhood is midtown west and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_test_60", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all apartments in midtown west", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_734", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment in midtown west", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_141", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units in the midtown west area", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_52", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find apartments in the neighborhoods of midtown west", "source": "housing unit whose neighborhood is midtown west and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_730", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in the same neighborhood at 123 sesame street", "source": "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_test_161", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find housing similar to the house located at 123 sesame street", "source": "housing unit whose housing type is housing type that is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_train_224", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me the same kind of housing as 123 sesame street", "source": "housing unit whose housing type is housing type that is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_test_71", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which housing unit is in the area of 123 sesame street", "source": "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_train_512", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "housing unit in the neighborhood of 123 sesame street", "source": "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_test_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what housing unit with a private room was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))", "qid": "housing_train_405", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what housing unit with a private bath was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))", "qid": "housing_train_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "a unit with a private bath that posted on january 2", "source": "housing unit whose posting date is jan 2 and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))", "qid": "housing_train_635", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "find a housing unit posted on january 2 and that allows cats", "source": "housing unit whose posting date is jan 2 and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_cats)))", "qid": "housing_train_13", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what housing with a private room posted jan 2nd", "source": "housing unit whose posting date is jan 2 and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))", "qid": "housing_train_289", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing allowing dogs that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_dogs)))", "qid": "housing_test_1", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing posted january 2nd that includes a private room", "source": "housing unit whose posting date is jan 2 and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))", "qid": "housing_train_422", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing with private bath that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))", "qid": "housing_test_20", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "find a housing unit posted on january 2 and that has a private room", "source": "housing unit whose posting date is jan 2 and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))", "qid": "housing_train_332", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing that allows dogs and was posted on january 2", "source": "housing unit whose posting date is jan 2 and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_dogs)))", "qid": "housing_train_265", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what is the square footage of 123 sesame street", "source": "size of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string size)))", "qid": "housing_train_432", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the area of 123 sesame street", "source": "size of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string size)))", "qid": "housing_train_536", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the rent of 123 sesame street per month", "source": "monthly rent of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string rent)))", "qid": "housing_train_414", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the neighborhood of 123 sesame street", "source": "neighborhood of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string neighborhood)))", "qid": "housing_train_649", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how big is 123 sesame street", "source": "size of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string size)))", "qid": "housing_train_596", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "housing near 123 sesame street", "source": "neighborhood of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string neighborhood)))", "qid": "housing_train_60", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how large is 123 sesame street", "source": "size of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string size)))", "qid": "housing_train_737", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what kind of housing is in 123 sesame street", "source": "neighborhood of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string neighborhood)))", "qid": "housing_train_323", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how much a month is the rent at 123 sesame street", "source": "monthly rent of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string rent)))", "qid": "housing_train_237", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was 123 sesame street posted", "source": "posting date of 123 sesame street", "target": "(call listValue (call getProperty en.housing_unit.123_sesame_street (string posting_date)))", "qid": "housing_train_362", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "housing posted on january 2 or february 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_402", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "what housing unit was posted on jan 2 or feb 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_656", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "what housing is posted either jan 2nd or feb 3rd", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_test_159", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_724", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "a housing unit posted on january 2 or february 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose posting date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_527", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "units posted before january 2nd", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_288", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "find housing units posted before january 2nd", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_62", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which housing unit is posted on or before jan 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_368", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing unit with a post date earlier than january 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_550", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing posted before january 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_728", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing posted before january 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_675", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which housing unit was posted before jan 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "apartments posted on january 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_270", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing unit with a posting date at the latest january 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_442", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing in the neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing types like 123 sesame street or 900 mission avenue", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street and 900 mission avenue", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_624", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_365", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhoods in 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing unit that is the same as the ones on 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit resembles 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_398", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is 900 mission ave and 123 sesame street", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_681", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_90", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_130", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "condomonium or flat", "source": "apartment or condo", "target": "(call listValue (call concat en.housing.apartment en.housing.condo))", "qid": "housing_train_647", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "seeking apartment or condo", "source": "apartment or condo", "target": "(call listValue (call concat en.housing.apartment en.housing.condo))", "qid": "housing_train_333", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "looking for housing in midtown west or chelsea area", "source": "midtown west or chelsea", "target": "(call listValue (call concat en.neighborhood.midtown_west en.neighborhood.chelsea))", "qid": "housing_test_96", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "neighborhoods medtown west or chelsea", "source": "midtown west or chelsea", "target": "(call listValue (call concat en.neighborhood.midtown_west en.neighborhood.chelsea))", "qid": "housing_train_401", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "condominium or apartment housing", "source": "apartment or condo", "target": "(call listValue (call concat en.housing.apartment en.housing.condo))", "qid": "housing_train_369", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "compare 123 sesame street and 900 mission avenue", "source": "123 sesame street or 900 mission ave", "target": "(call listValue (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave))", "qid": "housing_train_537", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "unit on 123 sesame street or 900 mission avenue", "source": "123 sesame street or 900 mission ave", "target": "(call listValue (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave))", "qid": "housing_test_122", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "neighborhood where i can find housing with a private room", "source": "neighborhood that is neighborhood of housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room))))", "qid": "housing_train_522", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "apartments with a private bathroom", "source": "housing type that is housing type of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_239", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods of housing units that allows cats", "source": "neighborhood that is neighborhood of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_554", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what neighborhood housing units allows dogs", "source": "neighborhood that is neighborhood of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_test_128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which housing unit in this area has a private room", "source": "neighborhood that is neighborhood of housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room))))", "qid": "housing_test_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which housing unit in this neighbourhood has the facility of a private bath", "source": "neighborhood that is neighborhood of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_558", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with housing that have a private bathroom", "source": "neighborhood that is neighborhood of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_test_94", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the housing type that allows cats", "source": "housing type that is housing type of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_648", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what kinds of housing allow cats", "source": "housing type that is housing type of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_463", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has housing with a private room", "source": "neighborhood that is neighborhood of housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room))))", "qid": "housing_train_175", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
