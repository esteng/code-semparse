{"paraphrased": "show me all meetings in greenberg cafe that alice is attending", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_3", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meetings take place in greenbug cafe", "source": "meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find the meeting with alice at greenberg cafe", "source": "meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_53", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting did alice attend at the greenberg cafe", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_543", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me any meetings which alice has attended and take place at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_425", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting is at greenberg cafe and alice is attending", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_498", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings alice has attended at the greenberg cafe", "source": "meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_66", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings located at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_515", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meetings are located at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_24", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings attended by alice in greenberg cafe", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_test_48", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings on january 2nd which are also 3 hours long", "source": "meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_387", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings on january 2 that are three hours long", "source": "meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_396", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all three hour meetings on jan 2", "source": "meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_35", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me three hour meetings on jan 2", "source": "meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_496", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "three hour meeting on january 2nd", "source": "meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_test_32", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me the meetings with the least number of different locations", "source": "meeting that has the least number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string location)))", "qid": "calendar_train_131", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meetings held in the most locations", "source": "meeting that has the most number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string location)))", "qid": "calendar_train_179", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with least attendees", "source": "meeting that has the least number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string attendee)))", "qid": "calendar_train_584", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which meeting is attended by the most people", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_train_299", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meetings attended by the smallest number of people", "source": "meeting that has the least number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string attendee)))", "qid": "calendar_train_484", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with largest number of attendees", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_train_611", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show me the meetings with the most attendees", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_test_74", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what meeting has the most amount of locations", "source": "meeting that has the most number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string location)))", "qid": "calendar_train_429", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what meeting had the fewest people show up", "source": "meeting that has the least number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string attendee)))", "qid": "calendar_train_23", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with largest number of locations", "source": "meeting that has the most number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string location)))", "qid": "calendar_train_334", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show me all meetings on january 2nd which end at 10 am", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_195", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that end at 10am on jan 2", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_615", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting ends at 10am on january second", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_126", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me any meetings on january 2 beginning at 10 am", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_404", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting starts at 10am on jan 2", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_459", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meeting on january 2nd at 10am", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_129", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that start at 10am on jan 2", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_421", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting has an end time of 10am on jan2", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_470", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meetings on january 2 end at 10am", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_162", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings held later than january 2", "source": "meeting whose date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_49", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meetings are scheduled for a date no earlier than jan 2", "source": "meeting whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_test_86", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting has a date no later than jan 2", "source": "meeting whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_625", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting was on or before jan 2", "source": "meeting whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_test_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings happening before january 2nd", "source": "meeting whose date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_test_101", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting has an earlier date than jan 2", "source": "meeting whose date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_253", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings happening after jan 2nd", "source": "meeting whose date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_215", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting is on jan 2 or earlier", "source": "meeting whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_654", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings before january 2nd", "source": "meeting whose date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_418", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "meetings held on or after january 2", "source": "meeting whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_407", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "locations of meetings that end at 10am", "source": "location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_test_87", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "show me meeting locations that start at 10am", "source": "location that is location of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_662", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "show me all attendees of meetings beginning at 10 am", "source": "person that is attendee of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "who is attending the 10sm meeting", "source": "person that is attendee of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_test_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "where are the meetings ending at 10am going to be held", "source": "location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_train_336", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what location is the meeting that starts at 10am", "source": "location that is location of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_655", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "show me the locations of all meetings beginning at 10 am", "source": "location that is location of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_88", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what person is attending a meeting that ends at 10am", "source": "person that is attendee of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_test_129", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "people attending meetings that end at 10am", "source": "person that is attendee of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_train_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what person is attending the meeting that starts at 10am", "source": "person that is attendee of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_586", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "show me any meetings that are either the weekly standup or annual review", "source": "weekly standup or annual review", "target": "(call listValue (call concat en.meeting.weekly_standup en.meeting.annual_review))", "qid": "calendar_train_279", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me all meetings happening at greenberg cafe or central office", "source": "greenberg cafe or central office", "target": "(call listValue (call concat en.location.greenberg_cafe en.location.central_office))", "qid": "calendar_test_90", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me any meetings that alice or bob have attended", "source": "alice or bob", "target": "(call listValue (call concat en.person.alice en.person.bob))", "qid": "calendar_train_609", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me all meetings that are either weekly standup or annual review", "source": "weekly standup or annual review", "target": "(call listValue (call concat en.meeting.weekly_standup en.meeting.annual_review))", "qid": "calendar_train_352", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "when is weekly standup or annual review", "source": "weekly standup or annual review", "target": "(call listValue (call concat en.meeting.weekly_standup en.meeting.annual_review))", "qid": "calendar_train_588", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "location is greenberg cafe or central office", "source": "greenberg cafe or central office", "target": "(call listValue (call concat en.location.greenberg_cafe en.location.central_office))", "qid": "calendar_train_509", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "meeting whose location is same as the  location of weekly standup", "source": "meeting whose location is location that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_651", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "meetings held in the same place as the weekly standup meeting", "source": "meeting whose location is location that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_542", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me all meetings attended by people who have also attended the weekly standup", "source": "meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_275", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "meeting shares attendee with weekly standup", "source": "meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "meetings that are attended by people that also attend the weekly standup meeting", "source": "meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_436", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meeting has the same location as weekly standup", "source": "meeting whose location is location that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_95", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me all meetings that share an attendee with the weekly standup meeting", "source": "meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_420", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me all meetings happening at the same location as the weekly standup", "source": "meeting whose location is location that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_408", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me meetings that share location with the weekly standup meeting", "source": "meeting whose location is location that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendar_train_338", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me all meetings ending at or after 10 am", "source": "meeting whose end time is at least 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_test_159", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "meetings that start at or before 10am", "source": "meeting whose start time is at most 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_497", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all meetings that end by 10am", "source": "meeting whose end time is at least 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_546", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me meetings starting before 10am", "source": "meeting whose start time is at most 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_402", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting starts earlier than 10am", "source": "meeting whose start time is smaller than 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_314", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all meetings starting earlier than 10 am", "source": "meeting whose start time is smaller than 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_506", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "meetings that start before 10am", "source": "meeting whose start time is smaller than 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_test_30", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "meeting ends after 10am", "source": "meeting whose end time is larger than 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_165", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting has an end time of at least 10am", "source": "meeting whose end time is at least 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting ended after 10am", "source": "meeting whose end time is larger than 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendar_train_442", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what three hour meeting has alice attending", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_145", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meetings attended by alice that are three hours long", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_657", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what three hour meeting is at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all three hour meetings that alice is attending", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_167", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which meetings in greenberg cafe will last three hours", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_508", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three hour meeting with alice as attendee", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_181", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings attended by alice which are three hours long", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_585", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings three hours long happening at the greenberg cafe", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_451", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three hour long meeting at greenberg", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_321", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meeting which starts at 1000 am or 300 pm", "source": "meeting whose start time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_test_47", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "show meetings that end at 10am or 3pm", "source": "meeting whose end time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_train_648", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "what meetings have a start time of 10 am or 3pm", "source": "meeting whose start time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_train_41", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "what meetings end at 10am or 3pm", "source": "meeting whose end time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_train_632", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "show me all meetings ending at 10 am or 3 pm", "source": "meeting whose end time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_train_562", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "meeting ends at 10 am or 3 pm", "source": "meeting whose end time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_test_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "meetings that end at 10am or 3pm", "source": "meeting whose end time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_train_211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "meetings that start at 10am or 3pm", "source": "meeting whose start time is 10am or 3pm", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call concat (time 10 0) (time 15 0))))", "qid": "calendar_train_357", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (time 10 0) (time 15 0))))"}
{"paraphrased": "what meeting is on jan 2 or 3rd", "source": "meeting whose date is jan 2 or jan 3", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call concat (date 2015 1 2) (date 2015 1 3))))", "qid": "calendar_train_560", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 1 3))))"}
{"paraphrased": "show me all meetings happening on january 2nd or january 3rd", "source": "meeting whose date is jan 2 or jan 3", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call concat (date 2015 1 2) (date 2015 1 3))))", "qid": "calendar_train_649", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 1 3))))"}
{"paraphrased": "meetings on january 2 or january 3", "source": "meeting whose date is jan 2 or jan 3", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call concat (date 2015 1 2) (date 2015 1 3))))", "qid": "calendar_test_130", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 1 3))))"}
{"paraphrased": "show me all metings that take place jan 2 or jan 3", "source": "meeting whose date is jan 2 or jan 3", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call concat (date 2015 1 2) (date 2015 1 3))))", "qid": "calendar_train_419", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 1 3))))"}
{"paraphrased": "meeting which is on jan 2 or jan 3", "source": "meeting whose date is jan 2 or jan 3", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call concat (date 2015 1 2) (date 2015 1 3))))", "qid": "calendar_train_64", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 1 3))))"}
{"paraphrased": "what important meeting has a length of three hours", "source": "meeting that is important and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_595", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me the important meetings that last three hours", "source": "meeting that is important and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_113", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me any meetings labeled as important which are also three hours long", "source": "meeting that is important and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_37", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "important meeting with three hour duration", "source": "meeting that is important and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_1", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what meeting is not on jan 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_353", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that fall before or after jan 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_659", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me meetings for jan 2", "source": "meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_580", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings happening on days other than january 2nd", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_666", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings on january 2", "source": "meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_646", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me meetings not on jan 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_192", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings that are not on january 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_471", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show the meeting on jan 2", "source": "meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_636", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what is the location of the jan 2 meeting", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_458", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "which people are attending meetings on january 2", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_test_33", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "who is attending the meeting on jan 2", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_405", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "person attending jan 2nd meeting", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_27", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me the attendees for all meetings on jan 2", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "locations that house meetings on january 2", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "location is same as the location of meeting on jan 2", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_test_63", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me the locations of all meetings on january 2", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_106", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "where is my jan 2 meeting", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_597", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me all attendees of meetings on january 2nd", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_32", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me all meetings beginning at 10 am which are three hours long", "source": "meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_146", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three hour meeting that ends at 10am", "source": "meeting whose end time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_248", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings ending at 10 am which are scheduled to be three hours long", "source": "meeting whose end time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_623", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what three hour meeting starts at 10am", "source": "meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_587", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all 3 hour long meetings that end at 10am", "source": "meeting whose end time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_18", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meetings that are three hours long that start at 10am", "source": "meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_474", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings that start at 10am and last three hours", "source": "meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_596", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meetings that are three hours long and end at 10am", "source": "meeting whose end time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_472", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me meetings starting at 10am that take 3 horus", "source": "meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_76", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings marked as important", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_221", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what are some important meetings", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_test_93", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "important meeting", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_460", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "important meetings", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_620", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which meetings are significant", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_443", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "important meeting on january 2nd", "source": "meeting that is important and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_15", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what important meetings are scheduled for jan 2", "source": "meeting that is important and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_373", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
