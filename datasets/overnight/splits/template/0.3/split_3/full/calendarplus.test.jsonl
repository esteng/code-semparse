{"paraphrased": "what is the average length of all the three hour and one hour meetings", "source": "average length of meeting whose length is three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length))))", "qid": "calendarplus_test_15", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of all meetings which last one hour or three hours", "source": "average length of meeting whose length is three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length))))", "qid": "calendarplus_train_320", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings after jan 2", "source": "average length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_501", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings before january 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_492", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings held on or after january 2", "source": "average length of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_513", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what was the average length of all meetings prior to jan 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that lasted more than 3 hours", "source": "jan 2 or jan 3 whose length is at most three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_13", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which meeting s duration is greater than 3 hoursjan2 or jan 3", "source": "jan 2 or jan 3 whose length is larger than three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_429", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "how are meetings are held on jan 2 for a duration of 3 hours", "source": "number of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2))))", "qid": "calendarplus_train_463", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me average meeting lenghtd  that start at 10am and last for three hours", "source": "average length of meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)) (string length))))", "qid": "calendarplus_train_259", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING))))"}
{"paraphrased": "how long is the average meeting shorter than three hours", "source": "average length of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_156", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long are all my meetings longer than three hours", "source": "total length of meeting whose length is larger than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_445", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that was longer than one hour", "source": "total length of meeting whose length is larger than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_452", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long is the meeting that was shorter than three hours", "source": "total length of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_97", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "show me all meetings one hour or three or more hours long", "source": "total length of meeting whose length is at least three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_446", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "start time of meeting on jan 2 with  alice as attendee", "source": "start time of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_test_1", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is the duration of the meeting that is held on 2 jan with alice as the attendee", "source": "length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length)))", "qid": "calendarplus_train_469", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "list the attendees of the january 2 meeting at the greenberg cafe", "source": "attendee of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string attendee)))", "qid": "calendarplus_train_496", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "when did the three hour greenberg cafe meeting end", "source": "end time of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_249", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when is my meeting at greenberg cafe that is shorter than three hours", "source": "date of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_train_198", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "alices meeting was 3 hours long", "source": "length of meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_459", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "on what date was the meeting held which lasted three hours and was attended by alice", "source": "date of meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_test_83", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "end time of three hours long meeting whose location is greenberg cafe", "source": "end time of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_258", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which weekly standup or annual review ended at or after 10am", "source": "weekly standup or annual review whose end time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_142", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standups or annual reviews start after 10 am", "source": "weekly standup or annual review whose start time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_219", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all the weekly standup and annual review that ended after 10am", "source": "weekly standup or annual review whose end time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_76", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "when is the weekly standup or annual review meeting which ends at 10 am", "source": "weekly standup or annual review whose end time is at most 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_423", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me weekly standups that ends before 10 am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_160", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review with start time at least 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_382", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review which ends before 10am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_505", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standup or annual review started at or after 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_538", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the date of the annual review that starts at 10 am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_37", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "how many meetings end at 10 am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_444", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings do i have at 10am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_536", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what are the start times of meetings held on january 2nd", "source": "start time of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_196", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when will the meeting of jan 2 end", "source": "end time of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_test_11", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what is the ending time of the meeting on january 2nd", "source": "end time of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_train_147", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "total length of an important meeting on jan 2", "source": "total length of meeting that is important and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_2", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what time did the important greenberg cafe meeting end", "source": "end time of meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)) (string end_time)))", "qid": "calendarplus_test_28", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me when important meetings end time at greenberg cafe", "source": "end time of meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)) (string end_time)))", "qid": "calendarplus_train_6", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "when did the important meeting that alice went to end", "source": "end time of meeting whose attendee is alice and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)) (string end_time)))", "qid": "calendarplus_train_177", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what is the average length of any meetings with alice that end at 10am", "source": "average length of meeting whose attendee is alice and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_530", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "on average how long are the greenberg cafe meetings that start at 10am", "source": "average length of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_117", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting that starts at 10am at the greenberg cafe", "source": "total length of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_172", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting at the greenberg cafe which ended at 10am", "source": "total length of meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_512", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the length of the meeting that is on january 2nd and is three hours long", "source": "length of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_182", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what meeting date is january 2 and lest than 3 hours long", "source": "date of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_test_138", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting on jan 2 end", "source": "end time of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_test_10", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me the meeting that lasts 3 hours that took place on jan 2", "source": "attendee of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_412", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what time did the important meeting at 10am end", "source": "end time of meeting whose start time is 10am and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_408", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "location of an important meeting that ends at 10am", "source": "location of meeting whose end time is 10am and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)) (string location)))", "qid": "calendarplus_train_312", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "how many meetings were held on january 2", "source": "number of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2))))", "qid": "calendarplus_train_464", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me the number of meetings on january 2nd with a length of three hours", "source": "number of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour))))", "qid": "calendarplus_train_547", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what time did the greenberg cafe meeting end", "source": "end time of meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe) (string end_time)))", "qid": "calendarplus_test_137", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "where is the meeting that begins at the opening time of the weekly standup conducted", "source": "location of meeting whose start time is at least start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string location)))", "qid": "calendarplus_train_529", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that was after the day weekly standup was held", "source": "length of meeting whose date is larger than date of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string date)))) (string length)))", "qid": "calendarplus_train_73", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that ended before weekly standup started", "source": "length of meeting whose end time is smaller than start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string length)))", "qid": "calendarplus_train_263", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "location of meeting that starts before end time of weekly standup", "source": "location of meeting whose start time is smaller than end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string location)))", "qid": "calendarplus_train_76", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that ended after weekly standup started", "source": "date of meeting whose end time is larger than start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string date)))", "qid": "calendarplus_train_506", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that ended before weekly standup did", "source": "date of meeting whose end time is smaller than end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string date)))", "qid": "calendarplus_train_36", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that started before weekly standup", "source": "length of meeting whose start time is smaller than start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string length)))", "qid": "calendarplus_test_50", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "what is the duration of the meeting that starts at the ending time of the weekly standup meeting", "source": "length of meeting whose start time is at most end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length)))", "qid": "calendarplus_train_210", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "show me the length of meetings with an end time thats no later than the start time of weekly standup", "source": "length of meeting whose end time is at most start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string length)))", "qid": "calendarplus_train_191", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "what is the end time for the meeting that starts at least at the start time of the weekly standup", "source": "end time of meeting whose start time is at least start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string end_time)))", "qid": "calendarplus_test_109", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING)))"}
{"paraphrased": "which meeting has less than two attendees", "source": "meeting whose location is meeting that has less than two attendee", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string <) (number 2))))", "qid": "calendarplus_test_85", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what meeting had the same location as a meeting that had two locations", "source": "meeting whose location is meeting that has two location", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (number 2))))", "qid": "calendarplus_train_415", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "how long was the average meeting that had people from weekly standup attend", "source": "average length of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string length))))", "qid": "calendarplus_train_143", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING))))"}
{"paraphrased": "is my three hour meeting at 10 am or 3 pm", "source": "10am or 3pm whose length is larger than three hours", "target": "(call listValue (call filter (call concat (time 10 0) (time 15 0)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_56", "anonymized_target": "(call listValue (call filter (call concat (time 10 0) (time 15 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "how long was the important meeting that started at 10am", "source": "total length of meeting whose start time is 10am and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)) (string length))))", "qid": "calendarplus_train_552", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "show me the average length of meetings that start at 10am and are marked as important", "source": "average length of meeting whose start time is 10am and that is important", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)) (string length))))", "qid": "calendarplus_train_397", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings designated as important and starting at 10am", "source": "total length of meeting whose start time is 10am and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)) (string length))))", "qid": "calendarplus_train_38", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long is the important meeting that ended at 10am", "source": "total length of meeting whose end time is 10am and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)) (string length))))", "qid": "calendarplus_train_317", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "show me all improtant meeting that end at 10 am", "source": "total length of meeting whose end time is 10am and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)) (string length))))", "qid": "calendarplus_train_465", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "show all meetings on january 2nd", "source": "total length of meeting whose date is at least jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string length))))", "qid": "calendarplus_train_152", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING))))"}
{"paraphrased": "total length of meeting not after jan 2", "source": "total length of meeting whose date is at most jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))) (string length))))", "qid": "calendarplus_train_124", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings held on or before january 2", "source": "total length of meeting whose date is at most jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))) (string length))))", "qid": "calendarplus_train_442", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING))))"}
{"paraphrased": "on average how long are the meetings on or after jan 2", "source": "average length of meeting whose date is at least jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string length))))", "qid": "calendarplus_test_31", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings after january 1", "source": "average length of meeting whose date is at least jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string length))))", "qid": "calendarplus_train_137", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings before january 2nd", "source": "average length of meeting whose date is at most jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))) (string length))))", "qid": "calendarplus_train_303", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the greenberg cafe meetings on jan 2", "source": "average length of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_test_34", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings held at the greenberg cafe on january 2", "source": "average length of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_185", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "show me the length of any meetings with alice that are on january 2nd", "source": "total length of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_311", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "meeting number that ends after the weekly standup end time", "source": "number of meeting whose end time is larger than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_12", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings ended after weekly standup", "source": "number of meeting whose end time is larger than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_74", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings were as long or longer than weekly standup", "source": "number of meeting whose length is at most length of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string length))))))", "qid": "calendarplus_test_96", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings started after weekly standup finished", "source": "number of meeting whose start time is larger than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_test_72", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings started before or at the same time as weekly standup", "source": "number of meeting whose start time is at most start time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time))))))", "qid": "calendarplus_train_173", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings ended at or after the start time of weekly standup", "source": "number of meeting whose end time is at least start time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time))))))", "qid": "calendarplus_train_480", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings end earlier than the commencing time of the weekly standup meeting", "source": "number of meeting whose end time is smaller than start time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time))))))", "qid": "calendarplus_train_141", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings end longer in time than weekly standup", "source": "number of meeting whose end time is at least end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_347", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "number of meeting not longer than weekly standup", "source": "number of meeting whose length is at most length of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string length))))))", "qid": "calendarplus_train_90", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings end on or before the end time of the weekly standup", "source": "number of meeting whose start time is at most end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_129", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "three hours or longer", "source": "three hours or one hour whose length is larger than three hours", "target": "(call listValue (call filter (call concat (number 3 en.hour) (number 1 en.hour)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_94", "anonymized_target": "(call listValue (call filter (call concat (ANON_NUMBER) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting was in the same place as weekly standup", "source": "meeting whose location is location that is location of weekly standup and that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendarplus_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what time did the meeting that ended at the same time as weekly standup start", "source": "start time of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string start_time)))", "qid": "calendarplus_train_392", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time do meetings end when they have attendees who also attend the weekly standup", "source": "end time of meeting whose attendee is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call getProperty en.meeting.weekly_standup (string attendee))) (string end_time)))", "qid": "calendarplus_train_460", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the date of the meeting that ends at the end time of the weekly standup", "source": "date of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string date)))", "qid": "calendarplus_test_123", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "show me the length of meetings with attendees of the weekly standup", "source": "length of meeting whose attendee is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call getProperty en.meeting.weekly_standup (string attendee))) (string length)))", "qid": "calendarplus_train_45", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that ended at the same time as weekly standup", "source": "attendee of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string attendee)))", "qid": "calendarplus_train_401", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started when weekly standup ended end", "source": "end time of meeting whose start time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string end_time)))", "qid": "calendarplus_train_306", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time does the meeting end that ends at the same time as the weekly standup", "source": "end time of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string end_time)))", "qid": "calendarplus_train_341", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "show me the attendees of the meetings with an end time thats the same as the start of weekly standup", "source": "attendee of meeting whose end time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string attendee)))", "qid": "calendarplus_train_313", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the end time of the meeting which starts at the same time as the weekly standup", "source": "end time of meeting whose start time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string end_time)))", "qid": "calendarplus_train_490", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "length of meeting that ends at start time of weekly standup", "source": "length of meeting whose end time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string length)))", "qid": "calendarplus_train_66", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "does the weekly standup or annual review ends at 10 am", "source": "weekly standup or annual review whose end time is 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_432", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting had the same attendee as either weekly standup or annual review", "source": "meeting whose attendee is person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_train_30", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "how many meetings are at least one to three hours", "source": "number of meeting whose length is at least three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_150", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings were three or less hours long", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_301", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings last less than 3 hours ", "source": "number of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_281", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings lasted between one hour or three hours at the most", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_test_33", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "when does the meeting on january 2nd end", "source": "end time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_test_99", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting on jan 2 start", "source": "start time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_test_68", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "show me who attended the 10am meeting on january 2nd", "source": "attendee of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_train_439", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time was the start of the three hour meeting on january 2", "source": "start time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_497", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "attendee of three hours meeting on jan 2", "source": "attendee of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_train_507", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "show me the number of meetings that is on january 2nd at greenberg cafe", "source": "number of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe)))", "qid": "calendarplus_train_16", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "number of meeting on jan 2 at greenberg cafe", "source": "number of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe)))", "qid": "calendarplus_train_410", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me the end time of meetings that are on january 2nd or 3rd", "source": "end time of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string end_time)))", "qid": "calendarplus_test_2", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting after jan 3", "source": "date of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string date)))", "qid": "calendarplus_test_116", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "how long did the meeting on or before jan 3 last", "source": "length of meeting whose date is at most jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length)))", "qid": "calendarplus_train_336", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that was after jan 3", "source": "length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length)))", "qid": "calendarplus_test_30", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "what was the length of a meeting after jan 3rd", "source": "length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length)))", "qid": "calendarplus_train_359", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "where was the meeting that was before jan 2 held", "source": "location of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string location)))", "qid": "calendarplus_train_50", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "priority attendee meeting on jan 2", "source": "attendee of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string attendee)))", "qid": "calendarplus_train_316", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "end time of an important meeting on jan 2", "source": "end time of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_32", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what is the end time for the important meeting on january", "source": "end time of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_275", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all locations of important meetings on january 2nd", "source": "location of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string location)))", "qid": "calendarplus_test_104", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "average length of meeting on jan 2 at greenberg cafe", "source": "average length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_188", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the average length of a meeting on january 2 that alice attended", "source": "average length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_256", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me all meetings on january 2nd where alice is attending", "source": "total length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_test_64", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting on january 2nd at the greenberg cafe", "source": "total length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_265", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "total length of meeting on jan 2 with alice as attendee", "source": "total length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_test_82", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting at the greenberg cafe on jan 2", "source": "average length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_test_3", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
