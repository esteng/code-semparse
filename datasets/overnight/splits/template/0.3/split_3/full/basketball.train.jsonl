{"paraphrased": "either 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "basketball_train_232", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "either 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "basketball_train_274", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "which year 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "basketball_train_425", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "number of points over a season of player kobe bryant from season 2004", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_2", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobe bryant in 2004", "source": "number of fouls (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "qid": "basketball_train_20", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant play on in 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_26", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have during the 04 season", "source": "number of blocks (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "qid": "basketball_train_36", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_60", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in the 2004 season", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_67", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe have in 04", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_74", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made in the season 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_119", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "name the number of turnovers achieved by kobe bryant in 2004", "source": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "qid": "basketball_train_120", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant 2004 season", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_127", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how  many rebounds in a season did kobe bryant have in 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_135", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "steals by kobe bryant in 2004", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_143", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "which team did kobe bryant play for in 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_163", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "in 2004 how many allseason blocks did kobe bryant have", "source": "number of blocks (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "qid": "basketball_train_188", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds were  got by kobe bryant in 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_222", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "fouls by kobe bryant in 2004", "source": "number of fouls (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "qid": "basketball_train_276", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did player kobe bryant have during the season 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_288", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "during 2004 how many fouls did kobe get against him", "source": "number of fouls (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "qid": "basketball_train_290", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "qid": "basketball_train_306", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "did kobe bryant play in 2004", "source": "season of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "qid": "basketball_train_347", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by kobe bryant in 2004", "source": "number of blocks (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "qid": "basketball_train_354", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for in 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_358", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant make in 2004", "source": "number of fouls (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "qid": "basketball_train_360", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe get in 04", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_381", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "2004 season of kobe bryant", "source": "season of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "qid": "basketball_train_408", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant from season 2004", "source": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "qid": "basketball_train_414", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in the 2004 season", "source": "number of played games (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "qid": "basketball_train_418", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what was the team of kobe bryant  in 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_473", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in 2004", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_621", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what is the points kob bryant scored in season 2004", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_666", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobebryant get in 2004", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_673", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make in 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_683", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "stats of kobe bryant during 2004 season", "source": "season of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "qid": "basketball_train_696", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make in 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_726", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in the 2004 season", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_727", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "which position did kobe bryant play in 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_830", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant give up during the 2004 regular season", "source": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "qid": "basketball_train_927", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in the 2004 season", "source": "number of played games (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "qid": "basketball_train_931", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobebryant get in 2004", "source": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "qid": "basketball_train_940", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "during the 2004 season how many turnovers did kobe bryant acquire", "source": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "qid": "basketball_train_953", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "position of player kobe bryant from 2004 season", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_962", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers kob bryant made in season 2004", "source": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "qid": "basketball_train_997", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many assists kob bryant made in season 2004", "source": "number of assists (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "qid": "basketball_train_1042", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what players had more points than kobe bryant in 2004", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_1060", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "in which team did kobe bryant play in season 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_1115", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in the 2004 season", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_1135", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in during the 2004 season", "source": "number of played games (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "qid": "basketball_train_1143", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what is the position of kobe bryant in season 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_train_1180", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for in the 2004 season", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_1181", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in the 2004 season", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_1203", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "kobe bryant played in the season 2004", "source": "season of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "qid": "basketball_train_1221", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what was the total number of blocks for kobe bryant in the 2004 season", "source": "number of blocks (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "qid": "basketball_train_1242", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "for season 2004 note the number of total assists of kobe bryant", "source": "number of assists (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "qid": "basketball_train_1253", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "during  season 2004 note the total number of points scored by kobe bryant", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_1298", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in 2004", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_1304", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant make in 2004", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_1333", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant make in 2004", "source": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "qid": "basketball_train_1364", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many total points did kobe bryant have in the 2004 season", "source": "number of points (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "qid": "basketball_train_1427", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant from season 2004", "source": "number of assists (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "qid": "basketball_train_1463", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many steals has kobe bryant had", "source": "number of steals (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "qid": "basketball_train_1496", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe have in 2004", "source": "number of blocks (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "qid": "basketball_train_1545", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe bryant play for in 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_train_1560", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in during 2004", "source": "number of played games (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "qid": "basketball_test_69", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_test_117", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "where did kobe bryant play in 2004", "source": "team of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "qid": "basketball_test_160", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "during the 2004 season how many blocks was kobe bryant responsible for", "source": "number of blocks (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "qid": "basketball_test_230", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play in 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_test_251", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant have for the 04 season", "source": "number of assists (over a season) of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "qid": "basketball_test_307", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what position did kob bryant play in 2004", "source": "position of player kobe bryant whose season is 2004", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "qid": "basketball_test_378", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "how many teams are there", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_84", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of positions", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_105", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many positions", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_210", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many teams are in the nba", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_373", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the position", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_422", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "number of teams", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_559", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the players number for a certain team", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_628", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many different positions are there", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_710", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are there", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_756", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the team", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_858", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many positions are there", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_960", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is number of the player", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1004", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the player kobe bryant", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1083", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many teams are there", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_train_1091", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1127", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the player in this position", "source": "number of position", "target": "(call listValue (call .size (call getProperty (call singleton en.position) (string !type))))", "qid": "basketball_train_1272", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are there total", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_train_1553", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the players number", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_test_0", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are there", "source": "number of player", "target": "(call listValue (call .size (call getProperty (call singleton en.player) (string !type))))", "qid": "basketball_test_78", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are in the team ", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_test_352", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many players are on the team", "source": "number of team", "target": "(call listValue (call .size (call getProperty (call singleton en.team) (string !type))))", "qid": "basketball_test_368", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what players made less than three assists over a season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_0", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less blocks this season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_4", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has no more than three steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_10", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least three rebounds in the season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_22", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played less than 4 games per season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_27", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with more than 2 rebounds", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_34", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had 3 or more rebounds", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_38", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with less than 3 assists per season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_41", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_43", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_47", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 points over a season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_72", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the total number of assists equalling less than 3", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_82", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has made more than 3 points this season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_83", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 blocks this season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_95", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer than three steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_103", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played less than 3 games over all seasons", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_104", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find a player with 3 or more steals in any one season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_109", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 steals", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_126", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more than 3 fouls over a season", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_134", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 blocks over a season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_141", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored fewer than 3 points in a season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_153", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than 4 fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_155", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has less than 3 blocks", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_167", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with scored assists in any one season tallying at least 3", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_169", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who made less than 4 blocks over a season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_172", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played 3 or more games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_175", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has gotten more than 3 points", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_177", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with turnover amounts in a given season equalling at most 3", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_178", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has a total foul count under 3 for the season", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_184", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_192", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players responsible for less than 3 points in any given season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_207", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more than 3 turnovers over all seasons", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_213", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less assists this season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_219", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who gets 3 or more turnovers each season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_223", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer than three fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_237", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least three played games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_241", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had less than 3 games played over all seasons", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_250", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more than three points per season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_251", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no less than 3 all season assists", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_252", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have committed 3 or more fouls in a season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_254", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than three turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_257", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more than 3 rebounds in every season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_264", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 rebounds", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_267", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a maximum of 3 blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_268", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had three or more blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had 3 or more assists over all seasons", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_278", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made 3 blocks over a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_287", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has  played lesser than 3 fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_312", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with a total number of rebounds in a season no greater than three", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_326", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more than 3 blocks", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_340", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 rebounds", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_352", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "a player with at least 3 fouls", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_365", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have game time in no more than 3 games in a given season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_375", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has 3 or more steals in a season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_394", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has gotten 3 or less blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_399", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played at least 3 games in a season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_400", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more steals this season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_402", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more than 3 turnovers this season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_426", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players responsible for 3 or less fouls in any one given season", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_427", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more than 3 turnovers in each season theyve played", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_435", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with maximum 3 steals over a season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_436", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has 3 or less fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_441", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had a maximum of 3 assists", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_448", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made more than 3 block over a season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_461", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has at most 3 assists total in a season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_467", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not less than 3 points over a season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_469", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players responsible for less than 3 blocks in any one season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_478", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players all season assists totaled over 3", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_485", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players whose total number of assists in any one given season equals at most 3", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_486", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played less than 3 games this season", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_489", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players had 3 or fewer steals over a season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_491", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has got a maximum of 3 turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_508", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players made at 13 rebounds over the season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_528", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more that three steals over all seasons", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_535", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 points over a season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_539", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored less than three points", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_540", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players who accrued a total of points in any one season totalling more than 3", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_543", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played less than 4 games over a season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_558", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 3 fouls over a season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_560", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a minimum of three steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_563", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had got less than 3 turnovers", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_567", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who made more than 3 steals in a given season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_572", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player makes less than 3 rebounds per career average season", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_576", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_595", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with no more than 3 steals a season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_597", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not score more than three points in a season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_606", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than three blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_616", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have at least 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_617", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has 3 allseason rebounds maximum", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_625", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have gotten time in at least 3 games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_631", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is someone with less than 3 blocks in a season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_635", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_642", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 assists", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_644", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no more than three allseason blocks", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_654", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with greater than three blocks in a season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_658", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has at least 3 assists over a season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_670", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played no more than three games", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_688", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less points this season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_715", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players who have point scores for any one season of no more than 3", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_722", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players have less than 3 steals on them in a season", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_723", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least three assists last season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_728", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have 3 or more assists over the season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_733", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more than three fouls per game over the season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_735", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three rebounds this season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_749", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played more than 3 games", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_760", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who played more than 3 games over a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_761", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 3 assists over a season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_762", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer than three blocks per season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_773", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had at least three fouls in the season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_775", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player made more than 3 blocks over the season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_787", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with minimum 3 steals over a season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_795", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer turnovers than three", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_800", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not less than 3 fouls over a season is at least 3", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_805", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more than 3 turnovers", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_821", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with fewer than three assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_832", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_838", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players whose number of points is less than 3 over a season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_860", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 blocks", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_861", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players had game time in at least 3 games over the season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_881", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 2 points over a season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_886", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more than three fouls in the season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_908", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made a minimum of 3 blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_915", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has been in for only 1 or 2 games in a season", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_923", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had at most 3 games allseason", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_935", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more than three rebounds in the season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_937", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more than 3 allseason blocks", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_947", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos averaged no more than 3 rebounds each season", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_968", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with rebounds in any one season equalling less than 3", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_971", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with total foul tallies of less than 3 in any one particular season", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_979", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more than 3 turnovers over all seasons", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_994", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played more than 3 fouls", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1021", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more than three fouls over a season", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1022", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than three assists during the season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1025", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has under 3 assists all season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1044", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 turnovers", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1047", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find a player with 3 or less blocks in any given season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1052", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played 3 or less games", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1055", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose assists over a season is at most 3", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1056", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who have less than three steals in a season", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1057", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made less than 4 points in a season", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1067", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 turnovers", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1079", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got more than 3 assists each season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1080", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has equal to or more than 3 turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1086", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 steals", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1089", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played more than 3 games in a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1092", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played 3 or more games", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1095", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who have played fewer than 3 games in a season", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1096", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played fewer than three games", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1098", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or equal to 3 fouls", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1100", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with at most 3 turnovers over a season", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1104", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has got a minimum of 3 turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1120", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more assists", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1129", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with a total number of turnovers in any one specific season that is less than 3", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1144", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no less than 3 allseason rebounds", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1148", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played more than 3 games", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1151", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more than 3 assists to their credit per season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1153", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had 3 or less rebounds", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1195", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 points this season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1199", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than three fould per game over the season players with the fewers", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1207", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than 3 blocks over all seasons", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1214", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1215", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that average at least three assists per game over a season", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1216", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than three fouls in a season", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1223", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 assists", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1231", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with three or more fouls in a season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1233", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 blocks allseason", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a maximum of 3 fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1252", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored 3 or less points during a season", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1255", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note the players whose total number of rebounds in any one given season is more than 3", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1257", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least three points during the season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1278", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that scored three or more points per game last season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1283", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1285", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who made less than 4 steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1289", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three played games", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1296", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played less than three games", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1301", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored more than 3 points", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1303", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player as less than 3 assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1305", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1306", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have more than 3 turnovers over all seasons", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1307", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have no more than three assists over a season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1310", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players score at least 3 points per season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1313", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more than 3 turnovers", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1323", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players with assist scores over any given season that tally more than 3", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1327", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1328", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players all season blocks were no less than 3", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1335", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played minimum 3 games over a season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1338", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has less than 3 blocks over a season", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1348", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no less than 3 allseason steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1350", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less steals this season", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1361", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players scored at least three points over a season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1365", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who has played at most 3 games over this season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1371", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had three or fewer assists over the season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1376", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have no more than 3 fouls over all seasons", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1378", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with point totals in any one season equalling at least 3", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1384", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more than three steals over a season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1398", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more than 3 blocks over a season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1407", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had at least three steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1414", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played less than 3 games", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1429", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had more than three assists in a season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1433", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1434", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has less than 3 assists over a season", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1436", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1437", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three turnovers in the season", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1440", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players has less than 3 allseason fouls", "source": "player whose number of fouls (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1446", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players had fewer than 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1448", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has a maximum of 3 allseason turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1461", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had 3 or more assists", "source": "player whose number of assists (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1464", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with a total number of rebounds in a season greater than three", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1465", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more 3 or more turnovers in a game", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1469", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with fewer than three points", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1487", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had less than or equal to 3 points", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1493", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with at least 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1499", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three assists during the season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1506", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have at least 3 blocks a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1514", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player having not less than 3 blocks over a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1520", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had over 3 fouls", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1523", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more than three fouls", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1524", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player scored less than 3 points in a full season", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1526", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players who have participated in more than 3 games in a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1529", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 points", "source": "player whose number of points (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1535", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less than 3 turnovers over a season", "source": "player whose number of turnovers (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1541", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_1", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than 3 rebounds in an average season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_9", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have played less than 3 games over all seasons", "source": "player whose number of played games (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_17", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players had more than 3 points in a season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_20", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who made more than2 steals over a season", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_22", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or fewer blocks", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_32", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had got a minimum of 3 points", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_36", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whos season average is more than 3 blocks", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_50", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player averages less than 3 blocks per season", "source": "player whose number of blocks (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_71", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 rebounds", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_72", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had less than 3 blocks over all seasons", "source": "player whose number of blocks (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_81", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 points in a season", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_98", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players give up less than 4 turnorvers per season", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_101", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least three turnovers", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_122", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 steals", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_144", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three blocks in the season", "source": "player whose number of blocks (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_152", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than 4 assists over a season", "source": "player whose number of assists (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_test_161", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has made no more than 3 steals per season in their career", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_164", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players made at least 3 rebounds over the season", "source": "player whose number of rebounds (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_165", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player with 3 or less fouls each season", "source": "player whose number of fouls (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_167", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the players with turnover tallies of at least 3 in any one season", "source": "player whose number of turnovers (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_170", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that has played at least 3 games in a season", "source": "player whose number of played games (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_171", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got at least 3 blocks in a season", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_178", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had 3 or less turnovers", "source": "player whose number of turnovers (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_180", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored more than 3 points", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_189", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less than 4 rebounds", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_193", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more than three steals during the season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_196", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with more than 3 steals over all seasons", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_198", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that did not have more than three steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_206", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or less rebounds", "source": "player whose number of rebounds (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_212", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more than 3 assists over a season", "source": "player whose number of assists (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_test_213", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players made more than 3 rebounds in a season", "source": "player whose number of rebounds (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_215", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more than 3 fouls every season theyve played", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_222", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more than 3 games played during a season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_226", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has  got less than 3 rebounds", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_228", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with total fouls in any one season equalling an amount more than 3", "source": "player whose number of fouls (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has less than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_242", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with fouls to their credit equalling at least 3 in any given season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_250", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has minimum 3 points over a season", "source": "player whose number of points (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_257", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who played more than 3 games all season", "source": "player whose number of played games (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_300", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or equal to 3 blocks", "source": "player whose number of blocks (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (number 3 block)))) (call domain (string player))) (string player)))", "qid": "basketball_test_305", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer than three rebounds", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_310", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who averages at least 3 fouls a season", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_317", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who gets more than 3 steals a season", "source": "player whose number of steals (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_322", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has less than 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (number 3 rebound)))) (call domain (string player))) (string player)))", "qid": "basketball_test_330", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has 3 or less steals", "source": "player whose number of steals (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_343", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played 3 or less games this season", "source": "player whose number of played games (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (number 3 game)))) (call domain (string player))) (string player)))", "qid": "basketball_test_345", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has gotten 3 or more steals", "source": "player whose number of steals (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_347", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less than 3 assists", "source": "player whose number of assists (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (number 3 assist)))) (call domain (string player))) (string player)))", "qid": "basketball_test_349", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have less than 3 steals during a season", "source": "player whose number of steals (over a season) is smaller than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (number 3 steal)))) (call domain (string player))) (string player)))", "qid": "basketball_test_369", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more than three points scored", "source": "player whose number of points (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_370", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had 3 or more fouls", "source": "player whose number of fouls (over a season) is at least 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (number 3 foul)))) (call domain (string player))) (string player)))", "qid": "basketball_test_376", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player with more than 3 baskets per season played", "source": "player whose number of points (over a season) is at most 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (number 3 point)))) (call domain (string player))) (string player)))", "qid": "basketball_test_377", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made more than 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is larger than 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (number 3 turnover)))) (call domain (string player))) (string player)))", "qid": "basketball_test_383", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had at least as many blocks in the season as kobe bryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more fouls than kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_11", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less blocks than kobe bryant over all seasons", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_12", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played more games than kobe bryant the seasons he played", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_16", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or fewer steals than kobe bryant", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_31", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of steals in a season or less than kobe bryant", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_32", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player gets as many assists as kobe bryant if not more", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_42", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of steals over a season is less than that of  of player kobe bryant over a season", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_44", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players with turnover amounts in any one season that are less than the turnover amounts attributable to kobe bryant in any one season", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_51", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players committing a total number of steals that is larger than the total number of steals committed by kobe bryant in any one season", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_64", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored more points than kobe bryant this season", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_66", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has as much steals as most number of steals kob bryant made over a season", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_69", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have made at least as many blocks as kobe bryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_71", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has fewer blocks per season than kobe bryant", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_81", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more turnovers in a season than kobe bryant", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_85", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the same or less games than kobe bryant", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_88", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of fouls over a season is less than that of player kobe bryant over a season", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_89", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have as many rebounds as kobe bryant over all seasons", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_94", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose steals over a season are not more than steals player kobe bryant over a season", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_100", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more fouls than kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_110", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had same or more rebounds than kobe bryant over all seasons", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_131", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played less games than kobe bryant", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_137", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more rebounds than kob bryant over a season", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_138", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player consistently has more steals per season than kobe bryant", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_139", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players whose total number of rebounds in a given season is more than the number of rebounds made in a season by kobe bryant", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_152", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_157", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have fewer fouls over a season than that of kobe bryant", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_159", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players who have a total number of fouls in any one season equal to or more than that of kobe bryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_160", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smaller turnovers over a season than player kobe bryant over a season", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_161", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same or more turnovers than kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_176", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has lesser assists than kob bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_180", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has fewer per season assists than  point guard kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_187", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had an equal amount of assists in a season to that of kobe bryants lowest assists total", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_189", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played more games than kobe bryant this season", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_190", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more assists than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_194", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had less blocks than kobe bryant over all seasons", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_197", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same amount or less of assists as kobe bryant", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_199", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have a total number of steals in a given season that is less than the total number of steals acquired by kobe bryant in a given season", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_200", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had equal or more fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_204", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in more games over a season than kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_218", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more points than kobe bryant over all seasons", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_225", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player made as many blocks over the season as kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_228", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that player more games in a season than that of kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_233", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with fouls over a season not more than fouls over a season of player kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_248", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with lesser steals than player kobe bryant over a season", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_256", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played more games over a season player kobe bryant has played over a season", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_261", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same number or less rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_262", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had more turnovers than kobe bryant during a season", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_263", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less turnovers than kobe bryant", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_270", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who gets no more fouls each year than kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_273", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played more games over a season than player kobe bryan over a season", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_279", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had more points than kobe bryant", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_280", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had the same or more blocks than kobe bryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_281", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has lesser number of turnovers than kobebryant", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_313", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had more rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_330", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored at least as many points as kobe bryant", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_337", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played more games in a season than kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_338", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has as many allseason steals as kobe bryant", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_346", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of blocks of kobebryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_355", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more steals over a season than that of player kobe bryant over a season", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_376", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has no more played games than kobe bryant", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_382", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more points than kob bryant over a season", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_383", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more rebounds over a season than that of player kobe bryant over a season", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_391", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with assists over a season not less than that of player kobe bryant", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_405", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player averages more turnovers each season than kobe bryant", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_407", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have as many rebounds as kobe bryant over a season", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_413", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more blocks than kobe bryant", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_437", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players number of games played allseason equaled no less than kobe bryants", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_442", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more blocks per season than kobe bryant", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_443", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have the same or fewer total fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_445", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player leads kobe bryant for rebounds per season", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_464", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had a greater number of assists in a season than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_468", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had equal or more assists than kobe bryant over all seasons", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_474", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of blocks over a season is less than that of player kobe bryant over a season", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_484", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more allseason steals than kobe bryant", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_487", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more steals than kobe bryant over all seasons", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_490", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whats the name of a player with less turnovers per season than kobe bryant", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_498", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more blocks over a season than player kobe bryant over a season", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_500", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less turnovers than kobe bryant this season", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_512", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player who made the same or a lesser number of assists in the same season as kobe bryant", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_514", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more rebounds per season than kobe bryant", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_545", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that had more rebounds than kobe bryant this season", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_548", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less fouls than kobe bryant", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_550", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have the same number of rebounds as kobe bryant over all seasons", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_564", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or more rebounds as kobe bryant", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_565", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more steals than kobe bryant", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_594", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players with a total number of blocks in any one season that is more than the total number of blocks in any one season acquired by kobe bryant", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_596", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more blocks than kobe bryant over a season", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_601", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had as many fouls or more as kobe bryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_607", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer turnovers during the season than kobe bryant", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_608", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more blocks in a season that kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_610", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than the number of steals by kobe bryant", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_623", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer blocks than kobe bryant", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_633", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or less blocks as kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_652", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who matches or beats kobe bryant in steals per season", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_655", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of turnovers over a season is more than that of player kobe bryant over a season", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_656", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same or less steals than kobe bryant", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_661", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less fouls than kobe bryant this season", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_664", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had at least as many assists as kobe bryant", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_669", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player with fewer rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_679", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer points in the season than kobe bryant", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_681", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more points per season than kobe bryant", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_692", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player with a total number of blocks less than the total number of blocks performed by kobe bryant in any one season", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_702", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who committed more fouls than kob bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_703", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had less than or equal the number of rebounds as kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_718", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players whose total tally of assists is less than the tallly of assists acquired by kobe bryant in the same season", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_720", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player with assists to his credit for any one season  tallying more than the total number of assists performed by kobe bryant in any one season", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_721", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who made turnovers same as the least turnovers made by kob bryant over a season", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_730", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more all season points than kobe bryant", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_731", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no fewer allseason steals than kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_743", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players whose point scores in any one season are less than the total point scores of kobe bryant", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_752", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whoplayed less games over a season than player kobe bryant has played over a season", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_757", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player takes more fouls than kobe bryant or the same per season", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_764", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more assists than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_766", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with less points over a season than that of player kobe bryant over a season", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_772", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more points per season than kobe bryant", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_786", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored equal or less points as kobe bryant", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_796", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made fewer assists than kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_797", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had at least as many games played as kobe bryant over a season", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_798", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had the same or more steals kobe over the season", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_808", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less assists than kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_812", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same number of fouls as kobe bryant allseason", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_816", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players played games same as the least number of games played by kobe bryant over a season", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_818", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored less points than kobe bryant", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_819", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or equal number of rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_820", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has as much fouls as maximum fouls kob bryant made over a season", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_822", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of turnovers of kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_849", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have had fewer turnovers per season than kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_859", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or more turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_865", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_870", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more points over a season than that of player kobe bryant over a season", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_876", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with a total number of steals in a season that is equal to the lowest number of steals in a season for kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_882", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or less fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_885", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has no more turnovers per season than kobe bryant", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_891", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that overall outrebounded kobe bryant during the season", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_896", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of steals of kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_900", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more blocks than kobe bryant this season", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_901", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more steals than kobe bryant this season", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_904", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with at least as many turnover as kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_909", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who made lesser steals than kob bryant over a season", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_918", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has fewer steals per season on average than kobe bryant", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_920", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has more points than kobe bryant", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_945", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos a player with less games played than kobe bryant", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_951", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had no more rebounds over a season than that of kobe bryant", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_961", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who assists over a single season is at least the same as kobe bryants", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_966", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than or the same number of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_976", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same or more steals as kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_981", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played in the same amount or more games than kobe this season", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_983", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that scored the same or fewer points than kobe during the season", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_990", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has not played more games than player kobe bryantover a season", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1000", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of points of kobebryant", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1006", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same or less points this season as kobe bryant", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1009", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player tied kobe bryants highest seasonal point score in a single season", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1010", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players who have performed blocks in any one season tallying to the same amount as those blocks performed by kobe bryant in any one season", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1011", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had more points in a season than kobe bryant", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1017", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players whose tally of games participated in is smaller than the number of games in which kobe bryant has had game time in", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1033", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who has had more blocks than kobe bryant", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1036", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players scored less points over the season than kobe bryant", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1051", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has at least as many all season points as kobe bryant", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1054", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of blocks over a season is not less than that ofplayer kobe bryant over a season", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1062", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with more turnovers per season than kobe bryant", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1069", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had less steals than kobe bryant", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1110", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players whose number of turnovers in a season is no more than that of kobe byrant", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1125", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the maximum points of kobe bryant", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1126", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players committed more fouls that kobe bryant over a season", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1133", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have less fouls than kobe bryant over all seasons", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1137", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player gets more blocks than  kobe bryant or at least the same", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1138", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the same or fewer blocks per season as kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1165", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had more steals than kobe bryant over all seasons", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1168", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with at least as many steals as kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1170", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have at least as many turnovers that kobe bryant has during a season", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1174", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more fouls over a season than player kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1183", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less points than kobe bryant in a season", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1188", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have the same number of fouls as kobe bryant over all seasons", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1190", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made more steals than kob bryant made over a season", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1197", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had few steals over the season than kobe bryant", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1198", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with a total amount of blocks in a season equal to the most blocks in a season for kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1200", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had were outrebounded by", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1205", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less points than kob bryant over a season", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1219", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same or more fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1229", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored lesser points than kobe bryant", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1232", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players allseason blocks are no more than kobe bryants allseason blocks", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1238", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players who have scored a total number of points in one season  larger than the total number of points scored in the same seaon by kobe bryant", "source": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1245", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name of a player with no more rebounds each season than kobe bryant", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1251", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have the points same as kob bryants highest points", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1260", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has fewer turnovers than kobe bryant in a season", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1261", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who has had fewer steals this season than kobe bryant", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1263", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1273", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played as any fouls as kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1293", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has less rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1297", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had played more fouls than kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1309", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player equal or more assists than kobe bryant", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1322", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players played less games than kob bryant over a season", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1334", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of fouls of kobebryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1344", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the most assists over a season other than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1356", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have the same number of points in a season as kobe bryants lowest amount", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1362", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had equal or fewer assists than kobe bryant", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1385", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players all season assists totaled at least as many as kobe bryants", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1386", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who played at least as many games as kobe bryant", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1391", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players have had more turnovers in a season than kobe bryant", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1402", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played less games than kobe bryant", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1418", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had at least as many fouls as kobe bryant in a season", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1424", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not more turnovers over a season than player kobe bryant over a season", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1439", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of rebounds over a season are not more than rebounds over a season of player kobe bryant", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1451", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has been in fewer games than kobe bryant", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1452", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of assists over a season is more than that of  of player kobe bryant over a season", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1454", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more blocks all season than kobe bryant", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1459", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less turnovers than kob bryant over a season", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1462", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player got lesser number of assists than kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1466", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos a player with less points per season than kobe bryant", "source": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1468", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players played most games over a season same as kob bryant", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1470", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have the same number of turnovers over all their seasons equal to or worse than that of kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1474", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1481", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same or more assists than kobe bryant", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1504", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had more assists than kobe bryant this season", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1505", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of points over a season is not less  than that of player kobe bryantover a season", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1509", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name someone with more games per season played than kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1510", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or more number of blocks as kobe bryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1513", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in the same or less games as kobe bryant", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1519", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has at least as many points in a season as kobe bryant", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1521", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player gets more assists every season than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1525", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players who have committed a higher amount of fouls in a given season than kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1530", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with more played games in a season than kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1538", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made blocks same as maximum blocks by kobe bryant over a season", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1558", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player scored no more points in a season than kobe bryant", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_test_8", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less blocks allseason than kobe bryant", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_test_12", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played in fewer games than kobe bryant", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_13", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or less rebounds than kobe bryant this season", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_21", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played the same or more games as kobe bryant", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_25", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had fewer rebounds in a season than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_28", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had a higher number of assists in a season than kobe bryant", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_33", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has fewer per season steals than kobe bryant", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_37", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored equal or less points than kobe bryant this season", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_test_49", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player who had the same number of steals as kobe bryant or less", "source": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_52", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more fouls than kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_59", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have participated in more games during any one specific season than kobe bryant", "source": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_61", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played less fouls than kobe bryant", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_67", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had equal to or less assists than kobe bryant during a season", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_73", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had fewer fouls in the season than kobe bryant", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_96", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played less games than kobe bryant", "source": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_105", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had fewer turnovers than kobe bryan over a season", "source": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_test_112", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of blocks over a season is more than that of player kobe bryant over a season", "source": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_test_114", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players responsible for fewer rebounds in any one season than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_115", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with rebound tallies that at most equal those of kobe bryant over any given season", "source": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_119", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made more turnovers than kobe bryant over all seasons", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_test_125", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name of a player with fewer annual fouls than kobe bryant", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_143", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of assists over a season is less than that of player kobe bryant over a season", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_153", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has less rebounds than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_158", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less points scored than kobe bryant over all seasons", "source": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_test_172", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players with steals over a season equal to or more than the number of steals made by kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_183", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with fouls over a season not less than fouls over a season of player kobe bryant", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_208", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made at least as many points as kobe bryant", "source": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_points)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points))))) (call domain (string player))) (string player)))", "qid": "basketball_test_216", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less blocks than kobe bryant", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_test_218", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same or more steals as kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_253", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players whose total number of blocks in a season is the fewest that kobe bryant had in a season", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_test_264", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name someone with at least as many games played per season as kobe bryant", "source": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_265", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with more steals during the season than kobe bryant", "source": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_274", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with no more assists than kobe bryant in a season", "source": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_280", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had no more than the number of fouls obtained by kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_285", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had equal to or less fouls than kobe bryant", "source": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_287", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players who have participated in either the same number or less than the same number of games in any one season as kobe bryant", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_288", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had less fouls than kobe bryant during a season", "source": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_290", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less assists than kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_291", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more assists than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_301", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name of someone with more fouls since the start of the season than kobe bryant", "source": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_test_306", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer assists than kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_309", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players with a maximum number of turnovers  in a given season equalling that of kobe bryant in a given season", "source": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_test_342", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players who have performed a specific number of assists over any given season equalling that of kobe bryant also over any given season", "source": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_357", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more turnovers than kobe bryant", "source": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_test_358", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have played in the same number of games as kobe over all seasons", "source": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_games_played)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played))))) (call domain (string player))) (string player)))", "qid": "basketball_test_365", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had less blocks than kobe bryant this season", "source": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_test_372", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had at least as many turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_turnovers)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers))))) (call domain (string player))) (string player)))", "qid": "basketball_test_387", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "either kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_112", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which player is it kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_113", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "name a point guard or a forward", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_284", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "players who are forwards or point guards", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_293", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "who is better kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_705", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "player who plays position point guard or forward", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_771", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either los angeles lakers or cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_train_1106", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what nba teams play in cleveland or la", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_24", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either los angeles lakers or cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_134", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which team is it the la lakers or the cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_252", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "who has had more or less than 3 fouls", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_45", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more and less than 3 steals over all seasons", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_54", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has played more or less than 3 games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_62", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or less than 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_92", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player doesnt have 3 assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_117", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had more or less fouls than 3 over a season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_123", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not have three assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_154", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has not played 3 games over a season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_183", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who do not have three steals over the course of a season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_215", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had a point score that was not three", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_229", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not have three turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_342", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not score 3 rebounds", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_359", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had more or less than 3 steals", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_395", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose fouls are not 3 over a season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_440", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who never played 3 games over a season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_450", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played fewer than 3 games so far this season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_472", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players acquired less or more that 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_533", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has had points more or less than 3", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_546", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player not with 3 turnovers over a season", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_573", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with less and more than 3 rebounds over all seasons", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_582", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player doesnt average over 3 assists per game", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_590", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player didnt have 3 assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_591", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player not with 3 blocks over a season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_592", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had less than 3 points in a season", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_632", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not had three rebounds in a season", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_678", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not made3 blocks", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_682", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not have3 rebounds", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_776", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not have 3 steals", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_799", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is a player that doesnt make even 3 steals per season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_803", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not have 3 steals", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_train_824", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player did not score 3 points", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_850", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have participated in less or more than 3 games in a given season", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_864", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have a total number of fouls over a season that is not 3", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_899", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players scored more or less than 3 points in a season", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_916", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have less than 3 turnovers this season", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_957", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with point tallies in any one season either less than or more than 3", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_1007", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player didnt play 3 games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_1066", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had a total number of rebounds in a season not equal to three", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_1090", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more and less than 3 blocks over seasons", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1132", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has players that are not the 3 had", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_1150", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with assists not equal to three in a season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1176", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made less than 4 assists in a season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1179", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had did not have 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_train_1300", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not have 3 assists", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1308", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not played 3 fouls", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1311", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has more or less than 3 all season rebounds", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_train_1336", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have more and less than 3 fouls over all seasons", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1353", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that never made 3 blocks in a season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1355", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played and hasnt scored a 3", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_train_1387", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has less than 3 fouls total in a season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1388", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who did not have three fouls in the season", "source": "player whose number of fouls (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call domain (string player))) (string player)))", "qid": "basketball_train_1396", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not have exactly three assists in any given season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_train_1423", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players whose total number of points in a season is not 3", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_1458", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has more or less than 3 blocks", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1477", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points does kobe bryant average over a season", "source": "player whose number of points (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string !=) (number 3 point))) (call domain (string player))) (string player)))", "qid": "basketball_train_1484", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name those players with blocks to their credit that tally less than 3 or more than 3", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_train_1486", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose steals are not 3 over a season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_test_2", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who did not have three blocks this season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_test_6", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players didnt commit 3 turnovers in a season", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_test_60", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more or less than 3 steals during a season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_test_76", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has other than 3 allseason games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_test_82", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with not 3 rebounds over a season", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_test_89", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who doesnt have 3 assists over a season", "source": "player whose number of assists (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string !=) (number 3 assist))) (call domain (string player))) (string player)))", "qid": "basketball_test_116", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not played three games", "source": "player whose number of played games (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string !=) (number 3 game))) (call domain (string player))) (string player)))", "qid": "basketball_test_149", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has not got 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_test_185", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that doesnt have 3 turnovers", "source": "player whose number of turnovers (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call domain (string player))) (string player)))", "qid": "basketball_test_231", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had less than 3 blocks in a season", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_test_270", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have not even made 3 rebounds in a season", "source": "player whose number of rebounds (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call domain (string player))) (string player)))", "qid": "basketball_test_326", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who did not have three steals in the season", "source": "player whose number of steals (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string !=) (number 3 steal))) (call domain (string player))) (string player)))", "qid": "basketball_test_335", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not have 3 blocks", "source": "player whose number of blocks (over a season) is not 3", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string !=) (number 3 block))) (call domain (string player))) (string player)))", "qid": "basketball_test_390", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that did no play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_393", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players who did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_493", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_657", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_848", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_965", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not play in the 2004 season", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_986", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_train_1422", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players for seasons other than 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_test_48", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players did not play in 2004", "source": "player whose season is not 2004", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call domain (string player))) (string player)))", "qid": "basketball_test_240", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which season was kobe bryant", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_28", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by  kobe bryant", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_29", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe have last season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_49", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks in a season did kobe bryant have", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_59", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant had over all seasons", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_79", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "teams kobe bryant plays for", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_128", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played each season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_train_140", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the number of total turnovers of kobe bryant", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_149", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls does kobe bryant have in a season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_191", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_195", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "team of player kobe bryant", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_201", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists kob bryant made over a season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_208", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers has kobe bryant played", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_242", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant made so far this season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_243", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many all season rebounds did kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_259", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have over  the season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_286", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals has kobe bryant got in his career", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_305", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the number of rebounds by kobe bryant over the season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_316", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks does kobe bryant average in a given season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_318", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the number of assists attributable to kobe bryant during a season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_369", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds in a season did kobe bryant have", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_387", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant aquire over the entire season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_458", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "kobe bryants rebounds for the season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_475", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have this season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_479", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how any steals did kobe bryant get", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_481", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what year did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_497", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many seasons have kobe bryant played", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_501", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have this season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_525", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turn overs kob bryant made over a season", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_650", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many all season steals did kobe bryant have", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_651", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_671", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "total points of kob bryant over a season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_684", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the number of assists by player kobe bryant over the season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_700", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls were played by kobebryant", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_782", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals kob bryant made over a season", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_783", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score this season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_806", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "number of turnovers over a season of player kobe bryant", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_892", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobebryant get", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_938", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player kobe bryants number of rebounds over a season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_944", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds has kobe bryant had", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_963", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is kobe bryants team", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_970", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_992", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant had", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_1023", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whats kobe bryants season turnover average", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_train_1030", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is kobe bryants allseason point total", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_1064", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "when did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_train_1109", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists has kobe bryant got for this season so far", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_1121", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what position does kobe bryant play", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_train_1134", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points were scored by kobe bryant", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_1226", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals has kobe bryant had", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_1239", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "kobe bryant playing position", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_train_1249", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks kob bryant made over a season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_1280", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant scored this season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_train_1288", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe have this season", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_train_1294", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what team does kobe bryant play on", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_train_1357", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "koby bryant position", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_train_1358", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many steals does kobe bryant have over all seasons", "source": "number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))", "qid": "basketball_train_1375", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have allseason", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_1403", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many did kobe bryant play so far this year", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_train_1417", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have this season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_train_1426", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what was the total number of games played by kobe bryant in a season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_train_1516", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant have this season", "source": "number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))", "qid": "basketball_train_1518", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant have during the season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_train_1556", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many turnovers in the year did kobe bryant have", "source": "number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))", "qid": "basketball_test_15", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the position of kobe bryant", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_test_19", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what team is kobe bryant on", "source": "team of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))", "qid": "basketball_test_66", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe bryant make over a season", "source": "number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))", "qid": "basketball_test_68", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what seasons has kobe bryant played", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_test_86", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what are seasons played by kobe bryant", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_test_100", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant had in any one season", "source": "number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))", "qid": "basketball_test_107", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the position of kobe bryant", "source": "position of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))", "qid": "basketball_test_126", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what season did kobe bryant play", "source": "season of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))", "qid": "basketball_test_187", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "number of games kobe bryant has played in a season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_test_227", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant participated in during any one season", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_test_255", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe bryant get", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_test_268", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many assists in the season did kobe bryant have", "source": "number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))", "qid": "basketball_test_329", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "number of played games over a season of player kobe bryant", "source": "number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))", "qid": "basketball_test_382", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many points has kobe bryant gotten in a season", "source": "number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))", "qid": "basketball_test_385", "anonymized_target": "(call listValue (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_203", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for the fewest teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_285", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who scored the least on the team", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_308", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the fewest positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_372", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player is the most versatile and plays the most number of positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_506", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player that represented most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_542", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_660", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which played has played on the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_706", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_789", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with lowest jersey number", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_872", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player was on the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_906", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_943", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the least position", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_952", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has played the least number of positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1043", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the smallest number on the team", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1097", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the greatest number of positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1130", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played the fewest positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1161", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has held the most positions", "source": "player that has the most number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_train_1163", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has minimum number of teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1184", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has maximum number of teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1268", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has been apart of the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1339", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played for the least number of teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1441", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have been on the most teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_train_1471", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has the least number of position", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_test_74", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players play for the least amount of teams", "source": "player that has the least number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_test_90", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who played for the most number of teams", "source": "player that has the most number of team", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string max) (string team))) (call domain (string player))) (string player)))", "qid": "basketball_test_179", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the least number of positions", "source": "player that has the least number of position", "target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (string min) (string position))) (call domain (string player))) (string player)))", "qid": "basketball_test_374", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countSuperlative (var s) (ANON_STRING) (ANON_STRING))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has maximum two team", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_63", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have played two or fewer positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_65", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played less than two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_87", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players play no more than two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_125", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have at most 2 positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_166", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have been on less than two teams", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_390", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that plat one or two different positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_495", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has one team", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_510", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played for either one or two nba teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_586", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players plays in two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_745", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_746", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that plays in two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_748", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for only one team", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_811", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players hold two or less positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_972", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played at most two positions", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1078", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played for no more than two teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1139", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player plays fewer than two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1158", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played with at most two teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1167", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the most twos by position", "source": "player that has at most two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1235", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players with a single position", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1240", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "a player that has played for no more than two teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1317", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has less then two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1369", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played for fewer than two teams", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1394", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players are associated with one or no team", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1473", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have been on two or less teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_train_1554", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played only one position", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_147", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that plays less than two positions", "source": "player that has less than two position", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string position) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_259", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player have played for fewer than two teams", "source": "player that has less than two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_325", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played for two or less teams", "source": "player that has at most two team", "target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (string team) (string <=) (number 2))) (call domain (string player))) (string player)))", "qid": "basketball_test_373", "anonymized_target": "(call listValue (call getProperty ((lambda s (call countComparative (var s) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smallest number of assists over a season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_6", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the fewest allseason turnovers", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_7", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note the player with the highest number of rebounds to their credit in any one season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_13", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the lead for most turnovers in a season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_23", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the most blocks during the season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_37", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most rebounds in a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_53", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smallest number of fouls over a season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_76", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least fouls this season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_78", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the lowest number of assists in a season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_86", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the least amount of turnovers in a season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_102", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest rebounds in one season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_108", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least amount of blocks", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_132", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored the minimum number of points ", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_170", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the maximum number of steals", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_198", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who leads the points race so far this season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_224", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has less rebound over all seasons", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_235", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "98019705layers with the fewest turnovers per game during the season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_258", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least rebounds", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_300", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with the fewest turnovers during a season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_302", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos made the most assists from the start of the season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_303", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most points this season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_325", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player with the highest number of blocks to his credit in any one season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_331", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "over a season which player has the largest number of rebounds", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_333", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the most steals in a season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_339", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most steals per season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_345", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the most blocks in a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_351", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the most assists", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_401", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the record for steals", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_404", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the most blocks in a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_411", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player that has the least fouls over all seasons", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_416", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the fewest fouls per season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_455", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in the most games this season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_456", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the minimum number of games", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_507", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made the minimum number of turnovers", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_513", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the fewest turnovers this season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_524", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played in the most games", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_534", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "the player with least blocks over a season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_561", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most fouls this season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_566", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest assists", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_568", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have had the least amount of turnovers in any one particular season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_570", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the least fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_571", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has most rebounds over a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_574", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the lowest average blocks per season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_578", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the most rebounds", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_579", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most points scored over all seasons", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_588", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who made the most turnovers over all seasons", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_602", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most fouls in a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_603", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the largest number of assists over the season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_627", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the most steals", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_639", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the least amount of games", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_685", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the most turnovers in a season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_689", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the most  turnovers in any one season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_701", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the least steals", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_708", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most number of blocks over a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_724", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the least amount of rebounds in a season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_753", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the largest number of all season fouls", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_759", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the fewest rebounds ever", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_781", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the fewest allseason blocks", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_792", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the lead for fouls in a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_804", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the most career blocks per season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_829", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played in the fewest games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_867", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made least points", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_887", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least assists this season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_888", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_898", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has been in the least number of games in any one season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_905", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "the player who made most fouls over a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_907", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the most fouls", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_921", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the fewest all season fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_928", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made the maximum number of blocks", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_958", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the fewest steals all season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_978", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most turnovers over a season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_987", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most number of steals over a season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_988", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the record number of games in a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1026", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the most steals during a single season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1031", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the most turnovers", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1050", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which plater made the least amount of blocks during the season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1065", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the record for most rebounds in a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1107", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the minimum number of steals", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1113", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the most games", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1149", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest rebounds", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1152", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least points", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1154", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least points this season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1159", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played the most games in a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1166", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the least number of points in this season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1185", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the most points", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1204", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the least played games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1208", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least steals this season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1217", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player who has scored the most points in a season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1246", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the least turnovers so far this season", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1256", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the fewest fouls", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1264", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the fewest blocks in a season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1276", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who played the fewest games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player responsible for the biggest number of steals in any one season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1279", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with least number of blocks over a season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1284", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the fewest points in a year", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1286", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the record for fewest steals in a season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1320", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has most allseason points", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1321", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has made the least number of blocks", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1326", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the least assists", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1349", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the lowest amount of rebounds in a season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1363", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played largest numbergames over a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1367", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players has the most points over all seasons", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1370", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the fewest games in a season", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1373", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the highest number of assists", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1374", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the fewest assists per season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1382", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most points over a season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1389", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played more number of games over a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1390", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player with the highest score of assists performed in any one given season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1395", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played in the most games during a season", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1409", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with most number of fouls over a season", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1420", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played the fewest games", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1421", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that have the least amount of fouls in a season", "source": "player that has the smallest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1453", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the least rebounds this season", "source": "player that has the smallest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1475", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the most played games over all seasons", "source": "player that has the largest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1494", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most turnovers", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1500", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most blocks this season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1547", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with smallest number of points over a season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_3", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player who had the least number of steals over an entire season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_4", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find the player that has the hightest point score over any one season", "source": "player that has the largest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_10", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most steals this season", "source": "player that has the largest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_11", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the least amount of assists over a season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_47", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the most assists this season", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_64", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has had the fewest steals", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_95", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played least number of games over a seasono", "source": "player that has the smallest number of played games (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_test_106", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the most turnovers per season", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_138", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the largest number of fouls over all seasons", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_159", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had the most rebounds in a season", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_test_214", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has highest number rebounds", "source": "player that has the largest number of rebounds (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_test_289", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has played the maximum number of fouls", "source": "player that has the largest number of fouls (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_304", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players responsible for the least number of assists over any given season", "source": "player that has the smallest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_312", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the least blocks this season", "source": "player that has the smallest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_314", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who made the least steals over a season", "source": "player that has the smallest number of steals (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_323", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the player with the fewest points in the season", "source": "player that has the smallest number of points (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_333", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the most allseason assists", "source": "player that has the largest number of assists (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_339", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the least turnovers", "source": "player that has the smallest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string min) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_355", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the most blocks over a season", "source": "player that has the largest number of blocks (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_362", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the maximum number of turnovers", "source": "player that has the largest number of turnovers (over a season)", "target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (string max) (call ensureNumericProperty (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_389", "anonymized_target": "(call listValue (call getProperty ((lambda s (call superlative (var s) (ANON_STRING) (call ensureNumericProperty (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had the same number of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_24", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same number of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_52", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the same amount of turnovers as kobe bryant over a season", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_55", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players are on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_58", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of turnovers over a season is same as that of player kobe bryant over a season", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_90", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what other players play the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_97", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of rebounds as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_124", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had as many rebounds as kobe bryant in a season", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_133", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player gives up te same number of turnovers as kobe bryant each season", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_136", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the same number of rebounds in any one season as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_193", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_221", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player from player kobe bryants team", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have made the same number of fouls as kobe bryant in a season", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_236", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player belongs to kobe bryant  steam", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_271", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that had the same number of turnovers in a season as kobe byrant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_324", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have played during the same seasons as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_334", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_398", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has as many fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_410", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has same rebounds over a season as that of player kobe bryant over a season", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_424", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has as much steals as kob bryant made over a season", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_462", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who plays the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_477", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has played the same number of games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_488", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_518", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with number of blocks over a season as that of player kobe bryantis", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_536", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "for the season who played the same number of games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_541", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the same assist per game average as kobe bryant over a season", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_577", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of assists over a season is same as that of player kobe bryant over a season", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_580", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who had the same number of steals as kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_626", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had as many blocks as kobe bryant over as season", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_643", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players made number of rebounds same as  kobe bryant over a season", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_672", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the same per season blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_674", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who are the players with foul totals equivalent in any one season to that of kobe bryant in any one season", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_725", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of fouls over a season is same as that of player kobe bryant over a season", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_742", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who had the same number of fouls in a season that kobe bryant had", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_790", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "is there a player with the same per season point average as kobe bryant", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_807", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played in the same season as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_809", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player made as much points as kob bryant made over a season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_828", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players scored as many points as kobe bryant over all seasons", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_856", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who were kobe bryants team mates", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_889", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "whos got the same number of fouls as kobe each season theyve played", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1005", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same number of points in the season as kobe bryant", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1014", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the same number of played games as kobe bryant over all seasons", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1019", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of points over a season is same as that of player kobe bryantcover a season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1075", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with the same number of blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1076", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in the same season as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1093", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same number of fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1105", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players had the same games played than kobe bryant over all seasons", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1114", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1116", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what was the position of kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1157", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1162", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same amount of assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1193", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who has played as many games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1222", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has the same number of all season assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1230", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name the other players in kobe bryants team", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1265", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who else plays the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1275", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has the same number of rebounds as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1341", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who has played same number of games over a season as by player kobe bryantover a season", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1401", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has a similar per season rebound average as kobe bryant", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1411", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what seasons did kobe bryant play in", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1435", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "are there players who have a gamesparticipated in tally equalling that of kobe bryant in any one specific season", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1442", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has as many blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1449", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "is there a player with the same number of turnovers in a specific season as kobe bryant has in a specific season as well", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1472", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who plays on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1488", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that play the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1489", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players responsible for the same amount of assists in any one specific season as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1490", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same number of turnovers as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1515", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has at least as many assists as kobe bryant over a season", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1539", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player matches the season average steal rate of kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1546", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have the same position as kobe bryant", "source": "player whose position is position of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1550", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of blocks this season as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_31", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players with the same number of steals as kobe bryant over all seasons", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_43", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which team is kobe bryan on", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_test_46", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have committed the same number of steals in a given season as kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_121", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players amount of allseason rebounds equals kobe bryants", "source": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_rebounds) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds)))) (call domain (string player))) (string player)))", "qid": "basketball_test_130", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has scored the points of kobe bryant", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_137", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player whose number of steals over a season is same as that of player kobe bryant over a season", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_156", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find players with blocks per season scores for any one season equivelant to blocks per season score for any one season performed by kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_192", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who plays on the same team as kobe bryant", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_test_194", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have been played the same number of games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_test_232", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that tied kobe inn total scoring for the season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_237", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played with kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_test_262", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "find those players who have scored tallies equivelant to those of kobe bryant in any one specific season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_263", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had the same amount of assists as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_269", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that played at the same time as kobe bryant", "source": "player whose season is season of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string season)))) (call domain (string player))) (string player)))", "qid": "basketball_test_272", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who has had the same number of steals as kobe bryant", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_test_284", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with the same assists per season as kobe bryant", "source": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_assists) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists)))) (call domain (string player))) (string player)))", "qid": "basketball_test_297", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players tied with kobe bryant for blocks in a season", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_319", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks did kobe bryant have", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_356", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player scored the same amount of teams as kobe bryant this season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_360", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had as many turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_364", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
