{"paraphrased": "players that started playing between the 2004 and 2010 seasons", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_test_190", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player did not play in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_713", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1337", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_327", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1001", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who played 2004 to 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_547", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players played in the 2004 or 2010 seasons", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_train_25", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players who played in 2004 or 2010", "source": "player whose season is 2004 or 2010", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string season) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (string player))) (string player)))", "qid": "basketball_test_118", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what position did kobe bryant play when he had 3 blocks in a season", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_56", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team did kobe play for during his three steam season", "source": "team of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "qid": "basketball_train_227", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe have during the season he averaged three assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_519", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in which he made three rebounds", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_246", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played", "source": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "qid": "basketball_train_146", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what was the position of kobe bryant when he played 3 fouls", "source": "position of player kobe bryant whose number of fouls (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "qid": "basketball_train_933", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many blocks has kobe bryant achieved in seasons with at least 3 games played", "source": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "qid": "basketball_train_107", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games has kobe bryant played in the last 3 seasons", "source": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "qid": "basketball_train_845", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what position is kobe bryant", "source": "position of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "qid": "basketball_train_1432", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what team was kobe bryant on when he scored 3 points over the season", "source": "team of player kobe bryant whose number of points (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "qid": "basketball_test_256", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "player not from los angeles lakers team", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_109", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players dont play for the los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_140", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who dont play for los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_366", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who is not a point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_77", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_298", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not belong to the los angeles lakers team", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_765", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name players who are not in los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_714", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players are not point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_156", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players dont play for the la lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_613", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player did not play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_14", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many blocks were made by kobe bryant who belonged to the los angeles lakers team", "source": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "qid": "basketball_train_230", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of points over a season of player kobe bryant who is at point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_496", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "number of assists over a season of player kobe bryant who is at point guard", "source": "number of assists (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "qid": "basketball_test_65", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many points did kobe bryant score in the position of point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_780", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many rebounds did kobe bryant get as point guard", "source": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "qid": "basketball_train_913", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many turnovers were got by kobe bryant who belonged to the los angeles lakers team", "source": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "qid": "basketball_train_1501", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant get when he was at point guard", "source": "number of steals (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "qid": "basketball_test_379", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "points of kob bryant over a season in which he played in point guard", "source": "number of points (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "qid": "basketball_train_982", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how many fouls did kobe have in the season he played point gaurd", "source": "number of fouls (over a season) of player kobe bryant whose position is point guard", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "qid": "basketball_train_1450", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "in which season did kobe bryant play for los angeles lakers", "source": "season of player kobe bryant whose team is los angeles lakers", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "qid": "basketball_test_108", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "who plays for either la lakers or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_1218", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many players have been on the lakers or cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_1112", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player is on either the los angeles lakers or the cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_1478", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player plays either point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_868", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player plays the position of point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_380", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player is at point guard or forward position", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_447", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player belongs to the los angeles lakers team or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_869", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player from los angeles lakers or cleveland cavaliers", "source": "player whose team is los angeles lakers or cleveland cavaliers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call concat en.team.lakers en.team.cavaliers))) (call domain (string player))) (string player)))", "qid": "basketball_train_217", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players are point guards or forwards", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_409", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players play point guard or forward", "source": "player whose position is point guard or forward", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string =) (call concat en.position.point_guard en.position.forward))) (call domain (string player))) (string player)))", "qid": "basketball_train_356", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))) (call domain (ANON_STRING))) (ANON_STRING)))"}
