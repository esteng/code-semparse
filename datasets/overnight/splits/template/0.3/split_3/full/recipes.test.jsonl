{"paraphrased": "what recipe calls for either milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_646", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show recipes for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what is a recipe that is good for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_47", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "list the recipes for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_77", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes that require milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_136", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes for lunch or supper", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_269", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes that require milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_test_35", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which recipes are intended for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_261", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which recipes are for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_471", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what recipe uses milk or spinach as an ingredient", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_151", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what meal has quiche and rice pudding", "source": "meal that rice pudding or quiche is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what ingredients does rice pudding or quiche need", "source": "ingredient that rice pudding or quiche requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_test_115", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me ingredients needed for rice pudding and quiche", "source": "ingredient that rice pudding or quiche requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_155", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "meal than has rice pudding or quiche", "source": "meal that rice pudding or quiche is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_470", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "for what meal is rice pudding or quiche used for", "source": "meal that rice pudding or quiche is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_test_199", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which ingredient is needed by rice pudding or quiche", "source": "ingredient that rice pudding or quiche requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_787", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what meal is rice pudding or quiche made for", "source": "meal that rice pudding or quiche is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_63", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what meal is rice pudding or quiche intended for", "source": "meal that rice pudding or quiche is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_test_175", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the ingredients of rice pudding or quiche", "source": "ingredient that rice pudding or quiche requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_772", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "ingredient in rice pudding and quiche", "source": "ingredient that rice pudding or quiche requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call concat en.recipe.rice_pudding en.recipe.quiche)))", "qid": "recipes_train_853", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me lunch recipes posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_166", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "the lunch recipe  posting date is 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_15", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes posted in 2004 that use milk", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_181", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me lunch recipes that posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_249", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find the lunch recipes posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_360", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe has a posting date of 2004 and is lunch", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_119", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a recipe with milk posted in 2004", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_704", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe posted in 2004 requires milk as an ingredient", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_289", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a lunch recipe from 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_452", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe posted in 2004 makes a lunch meal", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes without milk", "source": "recipe that not requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string !=) en.ingredient.milk))", "qid": "recipes_train_549", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes not for lunch", "source": "recipe that not is for lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string !=) en.meal.lunch))", "qid": "recipes_test_1", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe is not for a lunch meal", "source": "recipe that is for lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_711", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe doesnt require milk", "source": "recipe that not requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string !=) en.ingredient.milk))", "qid": "recipes_train_450", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipe does not need milk", "source": "recipe that not requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string !=) en.ingredient.milk))", "qid": "recipes_test_96", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find me all recipes that require milk", "source": "recipe that requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_639", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes that has milk as one of its ingredients", "source": "recipe that requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_331", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show recipes that does not have milk as one of its ingredients", "source": "recipe that not requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string !=) en.ingredient.milk))", "qid": "recipes_train_513", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipe uses milk as an ingredient", "source": "recipe that requires milk", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_300", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "recipe for lunch", "source": "recipe that is for lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_137", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a recipe found in two or more cuisines", "source": "recipe that has at least two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >=) (number 2)))", "qid": "recipes_train_167", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipes fall under more than two cuisines", "source": "recipe that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "recipes_train_80", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipes have two cuisines", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_train_177", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipe belongs to more than two cuisines", "source": "recipe that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "recipes_test_40", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show recipes that follow more than two cuisines", "source": "recipe that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "recipes_train_50", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "two cuisine recipe", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_train_168", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me recipes with two ingedients", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_train_293", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what recipe has over two types of cuisine", "source": "recipe that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "recipes_train_352", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what recipe has less than two cuisines", "source": "recipe that has less than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string <) (number 2)))", "qid": "recipes_test_205", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what recipe has two cuisine", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_test_144", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me recipes requiring the fewest ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_782", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe has the shortest ingredient list", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_713", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a recipe requiring the fewest ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_282", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that work for more than one meal", "source": "recipe that is for the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_61", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipes for all kinds of meals", "source": "recipe that is for the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_824", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require the least amount of ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_543", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe calls for the most ingredients", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_191", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe has the least number of meals", "source": "recipe that is for the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_767", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires highest number of ingredients", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_658", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the recipe that needs the minimum number of ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_43", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe has the fewest number of cuisine", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_509", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "recipe in least cuisines", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_771", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show recipes with one cuisine", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_692", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which recipe belongs to less number of cuisines", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_386", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show me recipes for the most cuisines", "source": "recipe that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string cuisine)))", "qid": "recipes_train_189", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show recipes with the maximum number of cuisines", "source": "recipe that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string cuisine)))", "qid": "recipes_train_505", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what is a recipe from the fewest cuisines", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_17", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show me recipes with the cuisine least represented", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_448", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which recipe falls under the least kinds of cuisine", "source": "recipe that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string cuisine)))", "qid": "recipes_train_207", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what recipe is used in the greatest number of cuisines", "source": "recipe that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string cuisine)))", "qid": "recipes_train_629", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "find a lunch recipe that is prepared with milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_121", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name lunch recipes", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_718", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe needs milk and is for lunch", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_354", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe has milk as an ingredient", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_134", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name the recipe that is prepared for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_428", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipes require milk", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_744", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a lunch recipe", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_49", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what lunch recipes contain milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_606", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe calling for milk makes something for lunch", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show recipes that has milk as its ingredient", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_739", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipes were posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_554", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_588", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe posted later than 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_854", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_752", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "find a recipe that was posted  by 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_171", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipes were posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_740", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "recipes posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_652", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted no earlier than 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_286", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_362", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_184", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
