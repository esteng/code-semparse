{"paraphrased": "restaurant in the area that has a 2 dollar sign price rating", "source": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_38", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what are the cuisines of all the 3 star rating restaurants", "source": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_81", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what is the cuisine of the restaurants with three star ratings", "source": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_95", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what meal does the restaurant with a 2 dollar price rating serve", "source": "meal that restaurant whose price rating is 2 dollar signs serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_185", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what kind of meal do 3 star restaurants serve", "source": "meal that restaurant whose star rating is 3 stars serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_190", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what cuisines are offered by 3 star restaurants", "source": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_220", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what kind of meals do 2 dollar signs rated restaurants serve", "source": "meal that restaurant whose price rating is 2 dollar signs serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_224", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "which restaurant s cuisine has 3 star rating", "source": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_283", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "which neighborhoods have 3 star restaurants", "source": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_292", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "which neighborhood resturant has a 3 star rating", "source": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_483", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what meal does the 3 star restaurant serve", "source": "meal that restaurant whose star rating is 3 stars serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_521", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what is a meal served at a threestar rated restaurant", "source": "meal that restaurant whose star rating is 3 stars serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_604", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what is the neighborhood of the restaurant that has a price rating of 2 dollar signs", "source": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_677", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "source": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_767", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what restaurants have a rating of 2 dollar signs", "source": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_786", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "list 3 star restaurants by neighborhood", "source": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_851", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what neighborhoods have the most 3 star rated restaurants", "source": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_963", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "source": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_980", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "source": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_1068", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what cuisine does a 2 dollar sign price rating restaurant have", "source": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_1131", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "name a meal served in a restaurant with a price rating of two dollar signs", "source": "meal that restaurant whose price rating is 2 dollar signs serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_1172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "which neighborhoods have restaurants with a 2 dollar sign price rating", "source": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_1241", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "a thai restaurant with medium pricing", "source": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_train_1279", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what restaurant has a 3 star rating", "source": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_train_1293", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "which restaurant s cuisine has a price rating of 2 dollar signs", "source": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "qid": "restaurants_test_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "source": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_test_71", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "threestar restaurant meals", "source": "meal that restaurant whose star rating is 3 stars serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_test_161", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what is the neighborhood of the 3 star rated restaurant", "source": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "qid": "restaurants_test_292", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what restaurant has 3 or 2 menu items", "source": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which restaurants have price ratings higher than two or three dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "list all restaurants with 3 or 5 star ratings", "source": "restaurant whose star rating is at least 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_42", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with a price rating higher than 3 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_50", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which resturants have a price rating of at least two or three dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_64", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with 5 star and lower price ratings", "source": "restaurant whose star rating is at most 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_73", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "find a restaurant with more than 3 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_103", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is larger than 3 stars or 5 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_107", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with price ratings less than 2 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what restaurants have a rating better than 3 or 5 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_186", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is at least 3 stars or 5 stars", "source": "restaurant whose star rating is at least 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_255", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with price rating above 3 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_277", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what are some restaurants rated at most 3 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_326", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which restaurants have a price rating of 2 to3 dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_409", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_481", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant that is rated 3 to 5 stars", "source": "restaurant whose star rating is at least 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_490", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what restaurant has less than 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_556", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_566", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which restaurants are rated between 3 and 5 stars", "source": "restaurant whose star rating is at least 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_638", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which restaurants are rated under 3 stars", "source": "restaurant whose star rating is at most 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_775", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which resturants have a price rating of at most two or three dollar signs", "source": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_849", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which resturants have a star rating smaller than 3 or 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_854", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "hotel which has a price rating of more than 2dollar or 3 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_886", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "hotels that have a minimum  price rating of 2 dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_914", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with 3 to 5 star ratings", "source": "restaurant whose star rating is at least 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1044", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what restaurant has at least a 2 or 3 dollar sign rating", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1070", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which restaurant has fewer than 3 or 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1071", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "list all restaurants that areworse than 3 or 5 star rated restaurants", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1075", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants has rating below 3 stars", "source": "restaurant whose star rating is at most 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1081", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with price ratings between 2 and 3", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1133", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is at most 3 stars or 5 stars", "source": "restaurant whose star rating is at most 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1173", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "list all restaurants that are cheaper than 2 dollar signs or 3 star dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1177", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with 3 or lower price rating", "source": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1183", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "hotel which has a price rating of less than 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1200", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is smaller than 3 stars or 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1204", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "list restaurants that are at or less than 2 or 3 dollar signs", "source": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1221", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "list all restaurants that have lower stars than 3 star or 5 star", "source": "restaurant whose star rating is at most 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1262", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what are some restaurants that are rated between 3 and 5 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1275", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "hotels that have a higher rating than 3 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_test_5", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_test_37", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what restaurants have price ratings of 2 or 3 dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_test_221", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants rated less than 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_test_240", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants that are at most 2 or 3 dollar price ratings", "source": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_test_242", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant with 1 dollar sign", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_test_280", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what restaurant a price rating greater than or equal to the thai cafe", "source": "restaurant whose price rating is at least price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_4", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants rated more highly than thai cafe", "source": "restaurant whose star rating is larger than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "hotel  that that has the star rating of thai cafe", "source": "restaurant whose star rating is at most star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_168", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which restaurants are rated the same or better than thai cafe", "source": "restaurant whose star rating is at least star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_174", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurants have the same price rating or better than thai cafe", "source": "restaurant whose price rating is at least price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_188", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find a restaurant with a price rating equal or less than the thai cafe", "source": "restaurant whose price rating is at most price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants that are more expensive than thai cafe", "source": "restaurant whose price rating is larger than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_204", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants rated higher than thai cafe", "source": "restaurant whose star rating is larger than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_229", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants with a smaller star rating than thai cafe", "source": "restaurant whose star rating is smaller than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_262", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants with the same or lower price rating as thai cafe", "source": "restaurant whose price rating is at most price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_285", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurant whose star rating is at most star rating of thai cafe", "source": "restaurant whose star rating is at most star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_325", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants that has a larger price rating than thai cafe", "source": "restaurant whose price rating is larger than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_354", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurant whose star rating is larger than star rating of thai cafe", "source": "restaurant whose star rating is larger than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_516", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "hotel which has a higher star rating than thai cafe", "source": "restaurant whose star rating is larger than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_679", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which restaurants are rated the same or below thai cafe", "source": "restaurant whose star rating is at most star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_761", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which resturant has a smaller star rating than thia cafe", "source": "restaurant whose star rating is smaller than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_774", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "name a restaurant with a lower price rating than the thai cafe", "source": "restaurant whose price rating is smaller than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_801", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "thai cafe with least price rating", "source": "restaurant whose price rating is at least price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_807", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which restaurant has a price rating no higher than thai cafe", "source": "restaurant whose price rating is at most price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_868", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurant has a lower price rating than the thai cafe", "source": "restaurant whose price rating is smaller than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_881", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what thai restaurant has the highest star rating", "source": "restaurant whose star rating is at most star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_896", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find a restaurant with less stars than the thai cafe", "source": "restaurant whose star rating is smaller than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_912", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurant has a star rating the same as thai cafe", "source": "restaurant whose star rating is at least star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_961", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurant that is cheaper than thai cafe", "source": "restaurant whose price rating is smaller than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1009", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurants have lower ratings that thai cafe", "source": "restaurant whose star rating is smaller than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_1047", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants with a price rating larger than thai cafe", "source": "restaurant whose price rating is larger than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1063", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants with the same or higher star rating as thai cafe", "source": "restaurant whose star rating is at least star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_1094", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "list all restaurants that have the same or better price rating than thai cafe", "source": "restaurant whose price rating is at least price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1103", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which resturants have a price less than or equal to thai cafe", "source": "restaurant whose price rating is at most price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1104", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants whose price rating is similar to that of thai cafe", "source": "restaurant whose price rating is at least price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurant whose star rating is at least star rating of thai cafe", "source": "restaurant whose star rating is at least star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_1178", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants that cheaper than thai cafe", "source": "restaurant whose price rating is smaller than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1206", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurant has a higher price rating than the thai cafe", "source": "restaurant whose price rating is larger than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_train_1238", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which restaurants have star ratings lower than the thai cafe", "source": "restaurant whose star rating is smaller than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_train_1318", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants with star ratings better or equal to thai cafe", "source": "restaurant whose star rating is at most star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_test_22", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurant has a lower price rating than thai cafe", "source": "restaurant whose price rating is smaller than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_test_56", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurant with the same or less stars as the thai cafe", "source": "restaurant whose star rating is at most star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_test_135", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurant whose price rating is larger than price rating of thai cafe", "source": "restaurant whose price rating is larger than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_test_191", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants pricier than thai cafe", "source": "restaurant whose price rating is larger than price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string price_rating)))))", "qid": "restaurants_test_274", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "restaurants which have the same star rating or better of thai cafe", "source": "restaurant whose star rating is at least star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_test_279", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what restaurant has better star ratings than thai cafe", "source": "restaurant whose star rating is larger than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_test_319", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "a restaurant with a better star rating than thai cafe", "source": "restaurant whose star rating is larger than star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call getProperty en.restaurant.thai_cafe (string star_rating)))))", "qid": "restaurants_test_325", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what cuisine is served by the fewest restaurants", "source": "cuisine that is cuisine of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string min) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant serves the least amount of meals", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_76", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "cuisine that is cuisine of the least number of restaurant", "source": "cuisine that is cuisine of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string min) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_131", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood with the most restaurants", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_163", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine has the most restaurants", "source": "cuisine that is cuisine of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string max) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_198", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine type is most common", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_315", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the least amount of restaurants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_432", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the least number of restaurants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_525", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what same meals do all the other restaurants serve", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_602", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal is served in the most restaurants", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_643", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the least restaurants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_652", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the cuisine of the most restaurants", "source": "cuisine that is cuisine of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string max) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_729", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "area that has the minimum number of restaurants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_732", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the cuisine of most restaurants", "source": "cuisine that is cuisine of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string max) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_747", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood is home to the most restaurants", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1012", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which neighboorhodd has the least number of resturants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1034", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meal that the most number of restaurant serves", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1062", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meal that the least number of restaurant serves", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1080", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood that is neighborhood of the most number of restaurant", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1109", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meals that few restaurants serve", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1116", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine has the least amount of restaurants", "source": "cuisine that is cuisine of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string min) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1235", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the largest number of restaurants", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1308", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which neighborhood has the most restaurants", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_66", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what kind of cuisine has the most restaurants", "source": "cuisine that is cuisine of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string max) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_123", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "the most common restaurant meal", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_133", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which type of cuisine is least popular", "source": "cuisine that is cuisine of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string min) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_144", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the most restaurants", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_198", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the least served meal at restaurants", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_243", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what kind of meal has the smallest number of restaurants that serve it", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_286", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what kind of cuisine has the smallest amount of restaurants", "source": "cuisine that is cuisine of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string min) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_287", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "list all restaurants that are either thai or italian", "source": "thai or italian", "target": "(call listValue (call concat en.cuisine.thai en.cuisine.italian))", "qid": "restaurants_train_2", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "restaurants called thai cafe or pizzeria juno", "source": "thai cafe or pizzeria juno", "target": "(call listValue (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno))", "qid": "restaurants_train_391", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "chelsea or midtown west", "source": "midtown west or chelsea", "target": "(call listValue (call concat en.neighborhood.midtown_west en.neighborhood.chelsea))", "qid": "restaurants_train_529", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "italian or thai", "source": "thai or italian", "target": "(call listValue (call concat en.cuisine.thai en.cuisine.italian))", "qid": "restaurants_train_594", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "thai cafe or pizzeria juno", "source": "thai cafe or pizzeria juno", "target": "(call listValue (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno))", "qid": "restaurants_train_598", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "list all restaurants in the neighborhood of midtown west or chelsea", "source": "midtown west or chelsea", "target": "(call listValue (call concat en.neighborhood.midtown_west en.neighborhood.chelsea))", "qid": "restaurants_train_1197", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "a restaurant for lunch or dinner", "source": "lunch or dinner", "target": "(call listValue (call concat en.food.lunch en.food.dinner))", "qid": "restaurants_train_1243", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what restaurants serve lunch or dinner", "source": "lunch or dinner", "target": "(call listValue (call concat en.food.lunch en.food.dinner))", "qid": "restaurants_test_214", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west or chelsea", "source": "midtown west or chelsea", "target": "(call listValue (call concat en.neighborhood.midtown_west en.neighborhood.chelsea))", "qid": "restaurants_test_257", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "restaurants serving thai or italian food", "source": "thai or italian", "target": "(call listValue (call concat en.cuisine.thai en.cuisine.italian))", "qid": "restaurants_test_290", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "where is the thai cafe and the pizzeria juno", "source": "thai cafe or pizzeria juno", "target": "(call listValue (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno))", "qid": "restaurants_test_321", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what restaurant has lunch or dinner", "source": "lunch or dinner", "target": "(call listValue (call concat en.food.lunch en.food.dinner))", "qid": "restaurants_test_326", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west that serve thai food", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_10", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "the restaurant that is midtown serves thai food", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_52", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "hotel in the area of midtown west which serves lunch", "source": "restaurant that serves lunch and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_93", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants in midtown west ", "source": "restaurant whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_124", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "midtown west restaurant that is open for lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_170", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some thai restaurants in midtown west", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_193", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which resturants serve lunch", "source": "restaurant that serves lunch and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_230", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants offer lunch", "source": "restaurant that serves lunch and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_284", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurant has lunch", "source": "restaurant that serves lunch and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_313", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants in the midtown west neighborhood", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_337", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all thai restaurants in midtown west", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_338", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai resturants serve lunch", "source": "restaurant that serves lunch and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_341", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai cuisine restaurant which serves lunch", "source": "restaurant whose cuisine is thai and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_414", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that serves lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_427", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that serves lunch in midtown west", "source": "restaurant that serves lunch and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_434", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant in mid town west", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_443", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that serves lunch and whose cuisine is thai", "source": "restaurant that serves lunch and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_452", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_497", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "the restaurant serves lunch as well as thai food", "source": "restaurant whose cuisine is thai and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_526", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a thai restaurant in the midtown neighborhood", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_625", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants are in midtown west", "source": "restaurant whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_779", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that is around mid town west that offers lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_787", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurant has lunch", "source": "restaurant that serves lunch and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_842", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose cuisine is thai and whose cuisine is thai", "source": "restaurant whose cuisine is thai and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_926", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurant offers lunch", "source": "restaurant that serves lunch and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_941", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurant offers lunch", "source": "restaurant that serves lunch and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_981", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has thai cuisine", "source": "restaurant whose cuisine is thai and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1023", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants in midtown west serve lunch", "source": "restaurant that serves lunch and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1054", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all thai restaurants offering lunch", "source": "restaurant whose cuisine is thai and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1055", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in the midtown west neighborhood", "source": "restaurant whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1065", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a thai restaurant in the midtown west area", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1154", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant with thai cuisine", "source": "restaurant whose cuisine is thai and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1195", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a thai restaurant that serves lunch", "source": "restaurant whose cuisine is thai and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1324", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that serves lunch", "source": "restaurant that serves lunch and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_9", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what resturants are in midtown west", "source": "restaurant whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_60", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west serving lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_101", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants in midtown west have thai cuisine", "source": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_128", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that serves lunch and whose neighborhood is midtown west", "source": "restaurant that serves lunch and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_213", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants located in midtown west that also serve lunch", "source": "restaurant whose neighborhood is midtown west and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_302", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all of the thai restaurant in midtown west", "source": "restaurant whose neighborhood is midtown west and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_324", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "no lunch restaurant", "source": "restaurant that not serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "qid": "restaurants_train_146", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that serves lunch", "source": "restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_183", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name a restaurant that does not offer  thai food", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_189", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a thai restaurant", "source": "restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_351", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant not in the midtown west area", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_train_359", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants located in midtown west", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_380", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the restaurant that does not serve lunch", "source": "restaurant that not serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "qid": "restaurants_train_561", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some restaurants serving any cuisine except thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_666", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant that does not serve thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_728", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some restaurants that doesnt serve thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_train_744", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what resturant is not in midtown west", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_train_778", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant offers lunch", "source": "restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_797", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that not serves lunch", "source": "restaurant that not serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "qid": "restaurants_train_831", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant is not located in midtown west", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_train_841", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants in the neighborhood of midtown west", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_846", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants open for lunch", "source": "restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_917", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants are not in midtown west", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_train_1010", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant is located in midtown west", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1040", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant offers lunch", "source": "restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1045", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that are not open for lunch", "source": "restaurant that not serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "qid": "restaurants_train_1076", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant does not offer lunch", "source": "restaurant that not serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "qid": "restaurants_train_1140", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in the midtown west area", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1224", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a thai restaurant", "source": "restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1312", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some thai restaurants", "source": "restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_42", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "whats a resturant in midtown west", "source": "restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_79", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant that is open for lunch", "source": "restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_183", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants are not located in midtown west", "source": "restaurant whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "restaurants_test_187", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants", "source": "restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_291", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants that is not thai", "source": "restaurant whose cuisine is not thai", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "qid": "restaurants_test_322", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what neighborhood has the most thai restaurants", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_16", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "source": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_24", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_39", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find all thai restaurants", "source": "cuisine that is cuisine of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_200", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal does the midtown west restaurant serve", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_217", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which neighborhoods have restaurants that serve lunch", "source": "neighborhood that is neighborhood of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_346", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which neighborhoods have thai restaurants", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_367", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "thai cuisine restaurant", "source": "cuisine that is cuisine of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_373", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what neighborhood has restaurants that serve lunch", "source": "neighborhood that is neighborhood of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_430", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what are the types of cuisine available in the midtown west neighborhood", "source": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the neighborhood of the thai restaurant", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_577", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "cuisine that is cuisine of restaurant whose cuisine is thai", "source": "cuisine that is cuisine of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_595", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what cuisine does the midtown west restaurant have", "source": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_618", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal does the restaurant serve for lunch", "source": "meal that restaurant that serves lunch serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_661", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "neighborhood with restaurants that serve lunch", "source": "neighborhood that is neighborhood of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_671", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kind of meals are served in the restaurants in midtown west", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_683", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal does the thai restaurant serve", "source": "meal that restaurant whose cuisine is thai serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_685", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is a meal that a restaurant that is open for lunch serves", "source": "meal that restaurant that serves lunch serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_705", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kind of cuisine is found at the restaurants that serve lunch", "source": "cuisine that is cuisine of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_742", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is a meal served by a restaurant in midtown west", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_752", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which is the thai restaurant in this neighbourhood", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_834", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants similar to restaurants in midtown west", "source": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_869", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what neighborhood contains restaurants that offer lunch", "source": "neighborhood that is neighborhood of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_888", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what are the cuisines of all the midtown west restaurants", "source": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_929", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what restaurants are located in midtown west", "source": "neighborhood that is neighborhood of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_949", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurant that serves thai meal", "source": "meal that restaurant whose cuisine is thai serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_973", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what neighborhood are the restaurants that are in midtown west", "source": "neighborhood that is neighborhood of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_1029", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "list by type of cuisine the restaurants that serve lunch", "source": "cuisine that is cuisine of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1042", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "neighborhood that is neighborhood of restaurant that serves lunch", "source": "neighborhood that is neighborhood of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1057", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kind of cuisine offers lunch", "source": "cuisine that is cuisine of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1060", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meals do lunch serving restaurants serve", "source": "meal that restaurant that serves lunch serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1086", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "thai restaurant cuisine", "source": "meal that restaurant whose cuisine is thai serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_1106", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants that are in midtown west", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_1137", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurant with lunch menu", "source": "meal that restaurant that serves lunch serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1160", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is a meal served in a thai restaurant", "source": "meal that restaurant whose cuisine is thai serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_1168", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants that are in the neighborhood of midtown west", "source": "neighborhood that is neighborhood of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_1181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the cuisine of restaurants that serve lunch", "source": "cuisine that is cuisine of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1196", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "cuisine that is cuisine of restaurant that serves lunch", "source": "cuisine that is cuisine of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_test_6", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meals does this restaurant serve for lunch", "source": "meal that restaurant that serves lunch serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_test_21", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants in midtown west neighborhood", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_test_139", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what neighborhood is the thai restaurant in", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_test_207", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kind fo meals do thai restaurants serve", "source": "meal that restaurant whose cuisine is thai serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_test_253", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "most expensive restaurants", "source": "restaurant that has the largest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_181", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which hotel has the highest star rating", "source": "restaurant that has the largest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_281", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "cheapest restaurants", "source": "restaurant that has the smallest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_300", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "hotel that has the minimum star rating", "source": "restaurant that has the smallest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_323", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is the most expensive restaurant", "source": "restaurant that has the largest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_560", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "highest star rated restaurants", "source": "restaurant that has the largest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_589", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which restaurant has the lowest star rating", "source": "restaurant that has the smallest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_745", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which restaurant is the most highly rated", "source": "restaurant that has the largest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_776", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what restaurant has the lower price rating", "source": "restaurant that has the smallest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_823", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurants with the lowest star rating", "source": "restaurant that has the smallest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_898", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurant that has the largest price rating", "source": "restaurant that has the largest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_928", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "a restaurant that has the highest star rating", "source": "restaurant that has the largest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_954", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which restaurant is rated the most expensive", "source": "restaurant that has the largest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_965", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what restaurant has the lowest star rating", "source": "restaurant that has the smallest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_train_1043", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what restaurant has the highest price rating", "source": "restaurant that has the largest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_1107", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which hotel has the least price rating", "source": "restaurant that has the smallest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_1236", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "this restaurant had the largest rating in price", "source": "restaurant that has the largest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_train_1272", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is the highest rated restaurant", "source": "restaurant that has the largest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_test_122", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurants rated least expensive", "source": "restaurant that has the smallest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_test_136", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurant that has the largest star rating", "source": "restaurant that has the largest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_test_185", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurant with smaller star rating", "source": "restaurant that has the smallest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_test_223", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurant that has the smallest star rating", "source": "restaurant that has the smallest star rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string star_rating))))", "qid": "restaurants_test_250", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "restaurant whose price rating is smallest", "source": "restaurant that has the smallest price rating", "target": "(call listValue (call superlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (call ensureNumericProperty (string price_rating))))", "qid": "restaurants_test_267", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is better a 3 or a 5 star rating", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_165", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "what restaurants have at least 30 or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_177", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "5 stars or 3 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_223", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "30 reviews or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_332", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "find 3 star or 5 star restaurant", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_411", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated with 3 to 5 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_449", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with at least 30 or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_509", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "has a 2 or 3 dollar sign rating", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_train_674", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with a 2 or 3 dollar sign price rating", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_train_946", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants that have between 30 and 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_976", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with between 30 and 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_1124", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "list all restaurants that have a price rating of 2 dollar signs or 3 star dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_36", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "2 dollar signs or 3 dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_78", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 2 or 3 dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_171", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 35 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_test_314", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "how many restaurants are there total", "source": "number of restaurant", "target": "(call listValue (call .size (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_26", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many different kind of cuisines are there", "source": "number of cuisine", "target": "(call listValue (call .size (call getProperty (call singleton en.cuisine) (string !type))))", "qid": "restaurants_train_97", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the phone number of the restaurant", "source": "number of restaurant", "target": "(call listValue (call .size (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_158", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many neighborhoods are there", "source": "number of neighborhood", "target": "(call listValue (call .size (call getProperty (call singleton en.neighborhood) (string !type))))", "qid": "restaurants_train_191", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many neighboords are there that have restaurants", "source": "number of neighborhood", "target": "(call listValue (call .size (call getProperty (call singleton en.neighborhood) (string !type))))", "qid": "restaurants_train_199", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of this meal", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_368", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "number of restaurant", "source": "number of restaurant", "target": "(call listValue (call .size (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_372", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of restaurants", "source": "number of restaurant", "target": "(call listValue (call .size (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_633", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the restaurants number", "source": "number of restaurant", "target": "(call listValue (call .size (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1255", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "number of cuisine", "source": "number of cuisine", "target": "(call listValue (call .size (call getProperty (call singleton en.cuisine) (string !type))))", "qid": "restaurants_test_29", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many different cuisines are there to chose from", "source": "number of cuisine", "target": "(call listValue (call .size (call getProperty (call singleton en.cuisine) (string !type))))", "qid": "restaurants_test_289", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many meals are served", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_317", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant whose star rating is star rating of thai cafe", "source": "restaurant whose star rating is star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call getProperty en.restaurant.thai_cafe (string star_rating))))", "qid": "restaurants_train_63", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "list all restaurants similar to the cuisine of thai cafe", "source": "restaurant whose cuisine is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call getProperty en.restaurant.thai_cafe (string cuisine))))", "qid": "restaurants_train_192", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which restaurants have the same star rating as thai cafe", "source": "restaurant whose star rating is star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call getProperty en.restaurant.thai_cafe (string star_rating))))", "qid": "restaurants_train_196", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurants with the same price rating as thai cafe", "source": "restaurant whose price rating is price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call getProperty en.restaurant.thai_cafe (string price_rating))))", "qid": "restaurants_train_275", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what thai restaurant has a good star rating", "source": "restaurant whose star rating is star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call getProperty en.restaurant.thai_cafe (string star_rating))))", "qid": "restaurants_train_348", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "name athai restaurant or cafe", "source": "restaurant whose cuisine is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call getProperty en.restaurant.thai_cafe (string cuisine))))", "qid": "restaurants_train_356", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurant whose price rating is price rating of thai cafe", "source": "restaurant whose price rating is price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call getProperty en.restaurant.thai_cafe (string price_rating))))", "qid": "restaurants_train_626", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurant that is near to thai cafe", "source": "restaurant whose neighborhood is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call getProperty en.restaurant.thai_cafe (string neighborhood))))", "qid": "restaurants_train_654", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurant with a price rating equal to thai cafe", "source": "restaurant whose price rating is price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call getProperty en.restaurant.thai_cafe (string price_rating))))", "qid": "restaurants_train_670", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which restaurants have the same star rating as thai cafe", "source": "restaurant whose star rating is star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call getProperty en.restaurant.thai_cafe (string star_rating))))", "qid": "restaurants_train_781", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurants serving the same cuisine as thai cafe", "source": "restaurant whose cuisine is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call getProperty en.restaurant.thai_cafe (string cuisine))))", "qid": "restaurants_train_802", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which resturants have a price rating the same as the thai cafe", "source": "restaurant whose price rating is price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call getProperty en.restaurant.thai_cafe (string price_rating))))", "qid": "restaurants_train_870", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurant whose cuisine is cuisine of thai cafe", "source": "restaurant whose cuisine is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call getProperty en.restaurant.thai_cafe (string cuisine))))", "qid": "restaurants_train_1112", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "a restaurant as good as thai cafe", "source": "restaurant whose star rating is star rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call getProperty en.restaurant.thai_cafe (string star_rating))))", "qid": "restaurants_train_1113", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurant who shares a neighborhood with the thai cafe", "source": "restaurant whose neighborhood is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call getProperty en.restaurant.thai_cafe (string neighborhood))))", "qid": "restaurants_train_1215", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what is the price range for the thai restaurant", "source": "restaurant whose price rating is price rating of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call getProperty en.restaurant.thai_cafe (string price_rating))))", "qid": "restaurants_train_1219", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "list restaurants in the neighborhood of thai cafe", "source": "restaurant whose neighborhood is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call getProperty en.restaurant.thai_cafe (string neighborhood))))", "qid": "restaurants_test_57", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "restaurants in the neighborhood of thai cafe", "source": "restaurant whose neighborhood is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call getProperty en.restaurant.thai_cafe (string neighborhood))))", "qid": "restaurants_test_126", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which restaurant has thai cuisine", "source": "restaurant whose cuisine is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call getProperty en.restaurant.thai_cafe (string cuisine))))", "qid": "restaurants_test_132", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "where is a thai cafe", "source": "restaurant whose cuisine is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) (call getProperty en.restaurant.thai_cafe (string cuisine))))", "qid": "restaurants_test_260", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what restaurant serves two meals", "source": "meal that two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_62", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal is served by fewer than two restaurants", "source": "meal that less than two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_78", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is served at no more than two restaurants", "source": "cuisine that is cuisine of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_176", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has two or less restaurants", "source": "neighborhood that is neighborhood of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_182", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has no more than two restaurants", "source": "neighborhood that is neighborhood of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_227", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has fewer than two restaurants", "source": "neighborhood that is neighborhood of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_237", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood contains two restaurants", "source": "neighborhood that is neighborhood of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_241", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is at at least two restaurants", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_249", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "cuisine in at least 2 restaurants", "source": "cuisine that is cuisine of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_253", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is meal served in at least two restaurants", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_258", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal served by no more than two restaurants", "source": "meal that at most two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_324", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meal that more than two restaurant serves", "source": "meal that more than two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_333", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meals are served by more than two restaurants", "source": "meal that more than two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_340", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal is served in at least 2 restaurants", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_343", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has less than two restaurants", "source": "neighborhood that is neighborhood of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_345", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that have the same meal", "source": "cuisine that is cuisine of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_365", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what are some cuisines offered by more than two restaurants", "source": "cuisine that is cuisine of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_383", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is served in two restaurants", "source": "cuisine that is cuisine of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_408", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants with a common meal", "source": "meal that less than two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_415", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurant serves this cuisine", "source": "cuisine that is cuisine of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_470", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves two meal", "source": "meal that two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_489", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that serve the same cuisine", "source": "cuisine that is cuisine of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_648", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is shown in only two restaurants", "source": "cuisine that is cuisine of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_668", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is present at more than two restaurants", "source": "cuisine that is cuisine of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_669", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves unique meals", "source": "meal that less than two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_730", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhoods have at least two restaurants", "source": "neighborhood that is neighborhood of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_734", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisines are offered by more than one restaurant", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_739", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that are near two neighborhoods", "source": "neighborhood that is neighborhood of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_768", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is served by fewer than two restaurants", "source": "cuisine that is cuisine of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_809", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which neighborhood has two restaurants", "source": "neighborhood that is neighborhood of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_836", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood only has one or two restaurants", "source": "neighborhood that is neighborhood of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_839", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with more than 2 restauraunts", "source": "neighborhood that is neighborhood of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_840", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that serves meal", "source": "meal that at most two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_843", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a type of cuisine of two restaurants", "source": "cuisine that is cuisine of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_847", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that serve less than one meal", "source": "meal that less than two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_970", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what kind of cuisine has at least two restaurants", "source": "cuisine that is cuisine of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_995", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood contains at least two restaurants", "source": "neighborhood that is neighborhood of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1003", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a neighborhood with two restaurants", "source": "neighborhood that is neighborhood of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1011", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood that is neighborhood of more than two restaurant", "source": "neighborhood that is neighborhood of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1141", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which neighborhoods have more than two restaurants", "source": "neighborhood that is neighborhood of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1143", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal served by two different restaurants", "source": "meal that two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1184", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meals do 2 restaurants serve", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1191", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has more than two restaurants", "source": "neighborhood that is neighborhood of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1199", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurants offer more than two cuisines", "source": "cuisine that is cuisine of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1226", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has at least two restaurants", "source": "neighborhood that is neighborhood of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1284", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood that is neighborhood of at least two restaurant", "source": "neighborhood that is neighborhood of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1290", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that has a common meal", "source": "meal that two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_50", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meal served by two or more different restaurants", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_84", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a restaurant with varied cuisine", "source": "cuisine that is cuisine of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_104", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurant has two cuisines", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_107", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant near a neighborhood", "source": "neighborhood that is neighborhood of two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_121", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what kind of cuisines have at least two restaurants", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_125", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "more that three restaurant in neighborhood", "source": "neighborhood that is neighborhood of more than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_151", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhoods have at least two restaurants", "source": "neighborhood that is neighborhood of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_153", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant with food of two cultures", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_154", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has at most one restaurant", "source": "neighborhood that is neighborhood of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_224", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the two cuisine restaurant", "source": "cuisine that is cuisine of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_249", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal do two or more restaurants serve", "source": "meal that at least two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_293", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "cuisine that is cuisine of at least two restaurant", "source": "cuisine that is cuisine of at least two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string >=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_297", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that are near a neighborhoood", "source": "neighborhood that is neighborhood of less than two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_298", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what cuisine is served at two or less restaurants", "source": "cuisine that is cuisine of at most two restaurant", "target": "(call listValue (call countComparative (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_306", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal that 2 or less restaurants serve", "source": "meal that at most two restaurant serves", "target": "(call listValue (call countComparative (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string <=) (number 2) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_311", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurants has more than two meals on the menu", "source": "restaurant that serves at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_33", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves at most two meal", "source": "restaurant that serves at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_148", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurants serve two meals", "source": "restaurant that serves two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_197", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "open for two meals", "source": "restaurant that serves at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_318", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "list all restaurants that serves less than two meals", "source": "restaurant that serves less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_386", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants with more than two meals", "source": "restaurant that serves more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_457", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurants serve less than two meals", "source": "restaurant that serves less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_486", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant only serves two or less meals", "source": "restaurant that serves at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_574", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants serving fewer than two meals", "source": "restaurant that serves less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_580", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurants serve at least two meals", "source": "restaurant that serves at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_592", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant has two meals", "source": "restaurant that serves two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_620", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants open for at least two meals per day", "source": "restaurant that serves at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_709", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant serves more than two meals", "source": "restaurant that serves more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_757", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that is open for two meals", "source": "restaurant that serves at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_948", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurants have at least 2 meals on the menu", "source": "restaurant that serves two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_955", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurants serve at least two meals", "source": "restaurant that serves at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1017", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which resturants serve more than two meals", "source": "restaurant that serves more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1053", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurants serves more than just one meal", "source": "restaurant that serves more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1092", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant serves less than two meals", "source": "restaurant that serves less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1277", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants for two", "source": "restaurant that serves two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1310", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant which serves at maximum two meals", "source": "restaurant that serves at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_46", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants only open for 2 meals per day", "source": "restaurant that serves at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_49", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which resturants serve less than two meals", "source": "restaurant that serves less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_65", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a restaurant that serves multiple meals", "source": "restaurant that serves two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_116", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that serve two at most at a time", "source": "restaurant that serves at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string <=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_184", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that serve multiple meals", "source": "restaurant that serves more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_234", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves at least two meal", "source": "restaurant that serves at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_269", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "whats the star rating of thai cafe", "source": "star rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string star_rating)))", "qid": "restaurants_train_47", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what neighborhood is thai cafe located in", "source": "neighborhood of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string neighborhood)))", "qid": "restaurants_train_98", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the priuce rating of thai cafe", "source": "price rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string price_rating)))", "qid": "restaurants_train_282", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "restaurants with similar food to thai cafe", "source": "cuisine of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string cuisine)))", "qid": "restaurants_train_334", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the price rating of the thai cafe", "source": "price rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string price_rating)))", "qid": "restaurants_train_388", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the star rating of the thai cafe", "source": "star rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string star_rating)))", "qid": "restaurants_train_417", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the price rating of thai cafe", "source": "price rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string price_rating)))", "qid": "restaurants_train_433", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the star rating of the thai cafe", "source": "star rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string star_rating)))", "qid": "restaurants_train_441", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the price rating of thai cafe", "source": "price rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string price_rating)))", "qid": "restaurants_train_650", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "neighborhood of thai cafe", "source": "neighborhood of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string neighborhood)))", "qid": "restaurants_train_825", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "the thai cafe is in which neighborhood", "source": "neighborhood of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string neighborhood)))", "qid": "restaurants_train_913", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the nature of the cuisine of thai cafe", "source": "cuisine of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string cuisine)))", "qid": "restaurants_train_935", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the star rating of thai cafe", "source": "star rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string star_rating)))", "qid": "restaurants_train_969", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "price rating of thai cafe", "source": "price rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string price_rating)))", "qid": "restaurants_train_999", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cuisine of thai cafe", "source": "cuisine of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string cuisine)))", "qid": "restaurants_train_1139", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what kind of cuisine is thai cafe", "source": "cuisine of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string cuisine)))", "qid": "restaurants_train_1182", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "thai cafe in the neighborhood", "source": "neighborhood of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string neighborhood)))", "qid": "restaurants_train_1304", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the star rating of thai cafe", "source": "star rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string star_rating)))", "qid": "restaurants_test_143", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the price rating of the thai cafe", "source": "price rating of thai cafe", "target": "(call listValue (call getProperty en.restaurant.thai_cafe (string price_rating)))", "qid": "restaurants_test_162", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the average star rating", "source": "average star rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_14", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total star rating of all restaurants", "source": "total star rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_71", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average price rating of a restaurant", "source": "average price rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_87", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the star rating of the restaurant", "source": "total star rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_137", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "total star rating of restaurant", "source": "total star rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_225", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average price rating of a restaurant", "source": "average price rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_240", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "average star rating of restaurant", "source": "average star rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_279", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total price rating of all the restaurants", "source": "total price rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_532", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "total price rating of restaurant", "source": "total price rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_543", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average star rating of all restaurants", "source": "average star rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_635", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total star rating of all restaurants", "source": "total star rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_750", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average price rating of all restaurants", "source": "average price rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_856", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the price rating of the hotel", "source": "total price rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_875", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the price rating", "source": "total price rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_1174", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average restaurant star rating", "source": "average star rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_train_1229", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average price ratings of restaurants", "source": "average price rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_train_1319", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average star rating of all restaurants", "source": "average star rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_test_62", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average price rating of a hotel", "source": "average price rating of restaurant", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating))))", "qid": "restaurants_test_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what are the star ratings of this restaurant", "source": "total star rating of restaurant", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating))))", "qid": "restaurants_test_309", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "a group friendly thai restaurant", "source": "restaurant that is good for groups and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_36", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants serve lunch and have an outdoor dining area", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_43", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurant takes reservations", "source": "restaurant that takes reservations and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_68", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurant offers reservations", "source": "restaurant that takes reservations and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_84", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has delivery and whose cuisine is thai", "source": "restaurant that has delivery and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_120", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant is good with groups and serves lunch", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_123", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that take credit cards and serve lunch", "source": "restaurant that takes credit cards and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_141", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that offers reservation facility and serves lunch", "source": "restaurant that takes reservations and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_147", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "family friendly restaurants in midtown west", "source": "restaurant that is good for kids and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_166", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant is open for lunch and contains outdoor seating", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what good kids restaurant is in the midtown west area", "source": "restaurant that is good for kids and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_216", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurant has delivery", "source": "restaurant that has delivery and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_226", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant with takeout in midtown west", "source": "restaurant that has take-out and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_236", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants are good for kids and serve lunch", "source": "restaurant that is good for kids and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_243", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants that accept reservations", "source": "restaurant that takes reservations and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_256", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants in midtown west accept credit cards", "source": "restaurant that takes credit cards and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_263", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west west restaurant is good for groups", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_267", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that takes reservations and that serves lunch", "source": "restaurant that takes reservations and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_269", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that have outdoor seating and serve lunch", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_287", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant which provides outdoor seating facilities", "source": "restaurant that has outdoor seating and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_290", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants with outdoor seating", "source": "restaurant that has outdoor seating and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_309", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has waiter service and whose neighborhood is midtown west", "source": "restaurant that has waiter service and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_312", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in the  area around midtown west that offers delivery services", "source": "restaurant that has delivery and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_355", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all thai restaurants that offer takeout", "source": "restaurant that has take-out and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_375", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant that delievers", "source": "restaurant that has delivery and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_382", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant can you eat lunch outside at", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_397", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai resturants have takeout", "source": "restaurant that has take-out and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_398", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "hotel in midtown west that can be booked in advance", "source": "restaurant that takes reservations and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_428", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with delivery for lunch", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_444", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in midtown west for kids", "source": "restaurant that is good for kids and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_451", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant offers lunch and takeout", "source": "restaurant that has take-out and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_460", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "groupfriendly restaurants in midtown west", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_480", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurant takes credit cards", "source": "restaurant that takes credit cards and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_487", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a kid friendly restaurant for lunch", "source": "restaurant that is good for kids and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_493", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west with outdoor dining areas", "source": "restaurant that has outdoor seating and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_522", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with reservations and serves lunch", "source": "restaurant that takes reservations and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_548", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurant takes credit cards", "source": "restaurant that takes credit cards and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_550", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has outdoor seating and whose neighborhood is midtown west", "source": "restaurant that has outdoor seating and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_553", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in midtown west that is good for groups", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_557", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "hotel that offers lunch and best for group dining", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_558", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants serving lunch that accept reservations", "source": "restaurant that takes reservations and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_563", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "groupfriendly thai restaurants", "source": "restaurant that is good for groups and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_569", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has takeout and that serves lunch", "source": "restaurant that has take-out and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_575", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant takes credit cards in midtown west area", "source": "restaurant that takes credit cards and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_586", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west that deliver", "source": "restaurant that has delivery and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_588", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that is good for groups and whose cuisine is thai", "source": "restaurant that is good for groups and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_593", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant can i eat lunch and pay with a credit card", "source": "restaurant that takes credit cards and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_605", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants that are kid friendly", "source": "restaurant that is good for kids and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_606", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurant offers delivery", "source": "restaurant that has delivery and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_623", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that is good for kids and whose cuisine is thai", "source": "restaurant that is good for kids and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_632", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that is good for groups and that serves lunch", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_644", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant in midtown west has outdoor seating available", "source": "restaurant that has outdoor seating and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_647", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a thai restaurant with outdoor seating", "source": "restaurant that has outdoor seating and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_662", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name some thai restaurants meant for group dining", "source": "restaurant that is good for groups and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_680", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants for lunch for kids", "source": "restaurant that is good for kids and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_688", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants open for lunch that take credit cards", "source": "restaurant that takes credit cards and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_718", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that deliver and serve lunch", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_731", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what good kids restaurants serve thai cuisine", "source": "restaurant that is good for kids and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_759", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a lunch serving restaurant with take out", "source": "restaurant that has take-out and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_773", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurant can i get takeout from", "source": "restaurant that has take-out and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_816", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "hotel in the midtown west area which has outdoor seating facilities", "source": "restaurant that has outdoor seating and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_829", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant is good for a group of people and also serves lunch", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_850", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "hotels that can be booked in advance and offers lunch", "source": "restaurant that takes reservations and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_855", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has waiter service and serves lunch", "source": "restaurant that has waiter service and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_862", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has takeout and serves lunch", "source": "restaurant that has take-out and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_872", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant that offers waiter services", "source": "restaurant that has waiter service and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_889", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has takeout and whose cuisine is thai", "source": "restaurant that has take-out and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_910", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants serve lunch and offer takeout", "source": "restaurant that has take-out and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_915", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a thai restaurant that is good for groups", "source": "restaurant that is good for groups and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_921", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has delivery and that serves lunch", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_936", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in the midtown west neighborhood that have waiters", "source": "restaurant that has waiter service and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_943", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurants offer delivery and serves lunch", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_964", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant serving lunch that can deliver", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_972", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurants offer a waiter service", "source": "restaurant that has waiter service and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_982", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurants have outdoor seating", "source": "restaurant that has outdoor seating and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_983", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurants take reservations", "source": "restaurant that takes reservations and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_987", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which resturant in midtown west has waiter service", "source": "restaurant that has waiter service and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1019", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what retaurant in midtown west have waiter services", "source": "restaurant that has waiter service and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1020", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants that kids enjoy", "source": "restaurant that is good for kids and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1090", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurants offer takeout", "source": "restaurant that has take-out and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1098", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants that take credit cards", "source": "restaurant that takes credit cards and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_1122", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a midtown west resturant that takes reservations", "source": "restaurant that takes reservations and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1127", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant offers lunch and is good for groups", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1145", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant in midtown west contains outdoor seating", "source": "restaurant that has outdoor seating and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1158", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "take out restaurant in midtown west", "source": "restaurant that has take-out and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1175", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that serve lunch and have waiter service", "source": "restaurant that has waiter service and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1180", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants have takeout and serve lunch", "source": "restaurant that has take-out and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1187", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that serve lunch that are good for large parties", "source": "restaurant that is good for groups and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1189", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "hotel that offers lunch and has outdoor seating facilities", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1193", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant offers lunch and takes reservations", "source": "restaurant that takes reservations and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1194", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant offers lunch and takes credit cards", "source": "restaurant that takes credit cards and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1270", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which resturants serve lunch and have delivery", "source": "restaurant that has delivery and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what good kids restaurant serves lunch", "source": "restaurant that is good for kids and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1280", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants for groups and is in midtown west", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1298", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that serves lunch and accepts credit cards", "source": "restaurant that takes credit cards and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_2", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has lunch and waiter service", "source": "restaurant that has waiter service and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_13", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants that accept credit cards", "source": "restaurant that takes credit cards and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_27", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant with waiter service for lunch", "source": "restaurant that has waiter service and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_32", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant is good for kids and offers lunch", "source": "restaurant that is good for kids and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_35", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that is good for kids and whose neighborhood is midtown west", "source": "restaurant that is good for kids and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_38", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has outdoor seating and that serves lunch", "source": "restaurant that has outdoor seating and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_54", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with outdoor seating in midtown west", "source": "restaurant that has outdoor seating and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_64", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurant offers takeout", "source": "restaurant that has take-out and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_70", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that takes credit cards and whose neighborhood is midtown west", "source": "restaurant that takes credit cards and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant that can be booked in advance", "source": "restaurant that takes reservations and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thia resturants have waiter service", "source": "restaurant that has waiter service and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_92", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in the area of midtown west which is good for group dining", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west that take credit cards", "source": "restaurant that takes credit cards and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_97", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that has delivery and whose neighborhood is midtown west", "source": "restaurant that has delivery and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_140", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant in midtown west that accepts reservations", "source": "restaurant that takes reservations and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_175", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants in the midtown west neighborhood are good for children", "source": "restaurant that is good for kids and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurants have takeout", "source": "restaurant that has take-out and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_200", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that takes credit cards and that serves lunch", "source": "restaurant that takes credit cards and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_215", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that takes reservations and whose neighborhood is midtown west", "source": "restaurant that takes reservations and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_228", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants whose cuisine is thai and that deliver", "source": "restaurant that has delivery and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_229", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants in midtown west have delivery service", "source": "restaurant that has delivery and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_231", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurants have waiters", "source": "restaurant that has waiter service and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_test_275", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurants takes credit cards", "source": "restaurant that takes credit cards and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant that is good for groups and whose neighborhood is midtown west", "source": "restaurant that is good for groups and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_299", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what 2 dollar sign restaurant takes credit card", "source": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "qid": "restaurants_train_19", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "3 star rated restaurant that accepts reservations", "source": "restaurant whose star rating is 3 stars and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string reserve)))", "qid": "restaurants_train_34", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and that is good for kids", "source": "restaurant whose price rating is 2 dollar signs and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "qid": "restaurants_train_49", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star restaurants deliver", "source": "restaurant whose star rating is 3 stars and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string delivery)))", "qid": "restaurants_train_142", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star rated restaurant offers waiter service", "source": "restaurant whose star rating is 3 stars and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string waiter)))", "qid": "restaurants_train_143", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that is good for kids", "source": "restaurant whose star rating is 3 stars and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "qid": "restaurants_train_157", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants whose ratings are 3 stars and that take reservations", "source": "restaurant whose star rating is 3 stars and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string reserve)))", "qid": "restaurants_train_161", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that is good for groups", "source": "restaurant whose star rating is 3 stars and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string groups)))", "qid": "restaurants_train_184", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants with waiters that have a price rating of 2", "source": "restaurant whose price rating is 2 dollar signs and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string waiter)))", "qid": "restaurants_train_202", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants in the 2 dollar sign price category that accept credit cards", "source": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "qid": "restaurants_train_245", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a restaurant rated at least 3 stars that delivers", "source": "restaurant whose star rating is 3 stars and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string delivery)))", "qid": "restaurants_train_278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 2 dollar signs restaurant has outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_train_294", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurants have a price rating of two dollar signs and also accept credit cards", "source": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "qid": "restaurants_train_295", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "source": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "qid": "restaurants_train_299", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurant has outdoor seating and a 2 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_train_363", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which 3 star restaurants have waiters", "source": "restaurant whose star rating is 3 stars and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string waiter)))", "qid": "restaurants_train_426", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and that has takeout", "source": "restaurant whose price rating is 2 dollar signs and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "qid": "restaurants_train_447", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants rated 3 stars with outdoor seating", "source": "restaurant whose star rating is 3 stars and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string outdoor)))", "qid": "restaurants_train_465", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star restaurant is good for kids", "source": "restaurant whose star rating is 3 stars and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "qid": "restaurants_train_494", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurant has a 2 dollar price rating and outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_train_498", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants that have waiters and have 2 dollar sign price rating", "source": "restaurant whose price rating is 2 dollar signs and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string waiter)))", "qid": "restaurants_train_506", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurant has 2 menu items and takes credit cards", "source": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "qid": "restaurants_train_523", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a 3 star restaurant that is good for kids", "source": "restaurant whose star rating is 3 stars and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "qid": "restaurants_train_527", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star restaurants accept reservations", "source": "restaurant whose star rating is 3 stars and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string reserve)))", "qid": "restaurants_train_549", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurants with 2 price rating also have waiter service", "source": "restaurant whose price rating is 2 dollar signs and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string waiter)))", "qid": "restaurants_train_584", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants which take reservations and are rated 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string reserve)))", "qid": "restaurants_train_601", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 2 dollar signs restaurant is good for kids", "source": "restaurant whose price rating is 2 dollar signs and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "qid": "restaurants_train_615", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "groupfriendly restaurants that are rated 3 stars", "source": "restaurant whose star rating is 3 stars and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string groups)))", "qid": "restaurants_train_616", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurant has takeout and a 2 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "qid": "restaurants_train_621", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants with delivery rated 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string delivery)))", "qid": "restaurants_train_637", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name a hotel which has a three star rating and good for group dining", "source": "restaurant whose star rating is 3 stars and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string groups)))", "qid": "restaurants_train_639", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "moderately priced restaurants that have outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_train_686", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a group friendly restaurant that is medium priced", "source": "restaurant whose price rating is 2 dollar signs and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string groups)))", "qid": "restaurants_train_692", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which 3star restaurant has takeout service", "source": "restaurant whose star rating is 3 stars and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string takeout)))", "qid": "restaurants_train_693", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which restaurant has a price rating of two dollar signs and has outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_train_702", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "three star restaurants that accept credit cards", "source": "restaurant whose star rating is 3 stars and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string credit)))", "qid": "restaurants_train_711", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3star restaurants also have waiters", "source": "restaurant whose star rating is 3 stars and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string waiter)))", "qid": "restaurants_train_716", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which restaurant has a price rating of two dollar signs and has waiters", "source": "restaurant whose price rating is 2 dollar signs and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string waiter)))", "qid": "restaurants_train_721", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants rated with 3 stars and have outdoor seating", "source": "restaurant whose star rating is 3 stars and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string outdoor)))", "qid": "restaurants_train_740", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star restaurant has outdoor seating", "source": "restaurant whose star rating is 3 stars and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string outdoor)))", "qid": "restaurants_train_748", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants that are kid friendly and inexpensive", "source": "restaurant whose price rating is 2 dollar signs and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "qid": "restaurants_train_764", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which restaurant has a 2dollarsigns price rating and takeout service", "source": "restaurant whose price rating is 2 dollar signs and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "qid": "restaurants_train_789", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a reservation restaurant with meduim", "source": "restaurant whose price rating is 2 dollar signs and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string reserve)))", "qid": "restaurants_train_804", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that takes reservations", "source": "restaurant whose star rating is 3 stars and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string reserve)))", "qid": "restaurants_train_810", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which resturants have takeout and a price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "qid": "restaurants_train_821", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants with 3star ratings that have waiters", "source": "restaurant whose star rating is 3 stars and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string waiter)))", "qid": "restaurants_train_830", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which restaurants with 3 stars takes reservations", "source": "restaurant whose star rating is 3 stars and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string reserve)))", "qid": "restaurants_train_832", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a 3 star resturnt that has room for groups", "source": "restaurant whose star rating is 3 stars and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string groups)))", "qid": "restaurants_train_878", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and that has waiter service", "source": "restaurant whose price rating is 2 dollar signs and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string waiter)))", "qid": "restaurants_train_885", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "kidfriendly restaurants that are rated 3 stars", "source": "restaurant whose star rating is 3 stars and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "qid": "restaurants_train_902", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find a restaurant good for groups that has a 2 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string groups)))", "qid": "restaurants_train_938", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a delivery restaurant with medium pricing", "source": "restaurant whose price rating is 2 dollar signs and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string delivery)))", "qid": "restaurants_train_958", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a three star kid friendly restaurant", "source": "restaurant whose star rating is 3 stars and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "qid": "restaurants_train_974", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants that offer takeout and are price rated 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "qid": "restaurants_train_989", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "family friendly restaurants with price rating of two", "source": "restaurant whose price rating is 2 dollar signs and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "qid": "restaurants_train_993", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "3 star restaurants that accept credit cards", "source": "restaurant whose star rating is 3 stars and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string credit)))", "qid": "restaurants_train_1058", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "hotel that can be booked in advance and which has a price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string reserve)))", "qid": "restaurants_train_1088", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "3 star restaurants which have waiters", "source": "restaurant whose star rating is 3 stars and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string waiter)))", "qid": "restaurants_train_1126", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants with 2 price rating that accept credit cards", "source": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "qid": "restaurants_train_1151", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "3 star rated restaurants for kids", "source": "restaurant whose star rating is 3 stars and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "qid": "restaurants_train_1153", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that has takeout", "source": "restaurant whose star rating is 3 stars and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string takeout)))", "qid": "restaurants_train_1161", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "a restaurant with a 2 dollar sign rating for kids", "source": "restaurant whose price rating is 2 dollar signs and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "qid": "restaurants_train_1186", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that has delivery", "source": "restaurant whose star rating is 3 stars and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string delivery)))", "qid": "restaurants_train_1209", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "affordable restaurant with outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_train_1210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "hotel which has a price rating of 2 dollar signs and offers delivery services", "source": "restaurant whose price rating is 2 dollar signs and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string delivery)))", "qid": "restaurants_train_1274", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what are some 2 dollar rated restaurants good for groups", "source": "restaurant whose price rating is 2 dollar signs and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string groups)))", "qid": "restaurants_train_1288", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "three star restaurants that deliver", "source": "restaurant whose star rating is 3 stars and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string delivery)))", "qid": "restaurants_train_1322", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that has waiter service", "source": "restaurant whose star rating is 3 stars and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string waiter)))", "qid": "restaurants_test_3", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "name a restaurant with a price rating of two dollars signs that has outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_test_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 2 dollar signs restaurant offers waiter service", "source": "restaurant whose price rating is 2 dollar signs and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string waiter)))", "qid": "restaurants_test_8", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which restaurant with a star rating of three is good for groups", "source": "restaurant whose star rating is 3 stars and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string groups)))", "qid": "restaurants_test_12", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 2 dollar sign restaurant offers takeout", "source": "restaurant whose price rating is 2 dollar signs and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "qid": "restaurants_test_17", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what restaurant delivers and has a price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string delivery)))", "qid": "restaurants_test_19", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find a 3 star restaurant with takeout", "source": "restaurant whose star rating is 3 stars and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string takeout)))", "qid": "restaurants_test_20", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 2 dollar signs rated restaurant has outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_test_111", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants with a price rating of 2 dollar signs that also take reservations", "source": "restaurant whose price rating is 2 dollar signs and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string reserve)))", "qid": "restaurants_test_127", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "affordable restaurant with outdoor seating", "source": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "qid": "restaurants_test_142", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurants that are good for children and also have a price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "qid": "restaurants_test_155", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "hotel that has a 3 star rating and which accepts credit catds", "source": "restaurant whose star rating is 3 stars and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string credit)))", "qid": "restaurants_test_166", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star restaurant takes credit cards", "source": "restaurant whose star rating is 3 stars and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string credit)))", "qid": "restaurants_test_169", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which 3 star resturants have takeout", "source": "restaurant whose star rating is 3 stars and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string takeout)))", "qid": "restaurants_test_172", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what 3 star restaurant offers takeout", "source": "restaurant whose star rating is 3 stars and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string takeout)))", "qid": "restaurants_test_276", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which restaurants has outdoor seating and a 3star rating", "source": "restaurant whose star rating is 3 stars and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string outdoor)))", "qid": "restaurants_test_304", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which hotel has a price rating of 2 dollar signs and is good for group dining", "source": "restaurant whose price rating is 2 dollar signs and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string groups)))", "qid": "restaurants_test_315", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose star rating is 3 stars and that takes credit cards", "source": "restaurant whose star rating is 3 stars and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string credit)))", "qid": "restaurants_test_328", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and that is good for groups", "source": "restaurant whose price rating is 2 dollar signs and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string groups)))", "qid": "restaurants_test_330", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "restaurant whose cuisine is thai and that is good for kids", "source": "restaurant whose cuisine is thai and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string kids)))", "qid": "restaurants_train_3", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants that have takeout", "source": "restaurant whose cuisine is thai and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "qid": "restaurants_train_11", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant in mid town west that deliver", "source": "restaurant whose neighborhood is midtown west and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "qid": "restaurants_train_12", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurants take reservations", "source": "restaurant whose cuisine is thai and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string reserve)))", "qid": "restaurants_train_21", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which restaurants in midtown west deliver", "source": "restaurant whose neighborhood is midtown west and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "qid": "restaurants_train_35", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that takes credit cards", "source": "restaurant whose neighborhood is midtown west and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string credit)))", "qid": "restaurants_train_37", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants with lunch and takes reservations", "source": "restaurant that serves lunch and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "qid": "restaurants_train_56", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant is open at lunch and is good for kids", "source": "restaurant that serves lunch and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string kids)))", "qid": "restaurants_train_104", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a restaurant in midtown west that takes credit cards", "source": "restaurant whose neighborhood is midtown west and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string credit)))", "qid": "restaurants_train_164", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is the best restaurant for big groups in midtown west", "source": "restaurant whose neighborhood is midtown west and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string groups)))", "qid": "restaurants_train_215", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that has outdoor seating", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_221", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that deliver and are open for lunch", "source": "restaurant that serves lunch and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "qid": "restaurants_train_235", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant offers reservations and serves lunch", "source": "restaurant that serves lunch and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "qid": "restaurants_train_242", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that takes reservations", "source": "restaurant whose neighborhood is midtown west and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string reserve)))", "qid": "restaurants_train_247", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "midtown west restaurant for many people", "source": "restaurant whose neighborhood is midtown west and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string groups)))", "qid": "restaurants_train_254", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west that have takeout", "source": "restaurant whose neighborhood is midtown west and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string takeout)))", "qid": "restaurants_train_261", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in the midtown west neighborhood with outdoor seating", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_270", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "find a good kids restaurant that serves lunch", "source": "restaurant that serves lunch and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string kids)))", "qid": "restaurants_train_293", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant offers lunch and delivery", "source": "restaurant that serves lunch and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "qid": "restaurants_train_298", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which resturants serve lunch and are good for groups", "source": "restaurant that serves lunch and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string groups)))", "qid": "restaurants_train_327", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west that offer takeout", "source": "restaurant whose neighborhood is midtown west and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string takeout)))", "qid": "restaurants_train_336", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what midtown west restaurant offers outdoor seating", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_344", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "name a restaurant in mid town that accepts credit cards", "source": "restaurant whose neighborhood is midtown west and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string credit)))", "qid": "restaurants_train_389", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west with outdoor seating", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_392", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "family friendly thai restaurants", "source": "restaurant whose cuisine is thai and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string kids)))", "qid": "restaurants_train_399", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurants offer lunch and is good for groups", "source": "restaurant that serves lunch and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string groups)))", "qid": "restaurants_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a thai restaurant that takes credit cards", "source": "restaurant whose cuisine is thai and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string credit)))", "qid": "restaurants_train_401", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurant has delivery", "source": "restaurant whose cuisine is thai and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "qid": "restaurants_train_410", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which resturant serves lunch and is good for kids", "source": "restaurant that serves lunch and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string kids)))", "qid": "restaurants_train_425", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants that have outdoor dining areas", "source": "restaurant whose cuisine is thai and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string outdoor)))", "qid": "restaurants_train_454", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant in midtown west  which is good for groups", "source": "restaurant whose neighborhood is midtown west and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string groups)))", "qid": "restaurants_train_456", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which thai restaurants take credit cards", "source": "restaurant whose cuisine is thai and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string credit)))", "qid": "restaurants_train_458", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant serves lunch to groups", "source": "restaurant that serves lunch and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string groups)))", "qid": "restaurants_train_478", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which resturants serve lunch and have waiter service", "source": "restaurant that serves lunch and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string waiter)))", "qid": "restaurants_train_484", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west with waiter service", "source": "restaurant whose neighborhood is midtown west and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string waiter)))", "qid": "restaurants_train_491", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that has outdoor seating", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_496", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant that serves lunch and that takes reservations", "source": "restaurant that serves lunch and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "qid": "restaurants_train_508", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants with delivery in midtown west", "source": "restaurant whose neighborhood is midtown west and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "qid": "restaurants_train_515", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that has takeout", "source": "restaurant whose neighborhood is midtown west and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string takeout)))", "qid": "restaurants_train_559", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west with an outdoor dining area", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_564", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that are in the neighborhood of midtown west and have outdoor seating", "source": "restaurant whose neighborhood is midtown west and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "qid": "restaurants_train_570", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants with takeout", "source": "restaurant whose cuisine is thai and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "qid": "restaurants_train_600", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose cuisine is thai and that has takeout", "source": "restaurant whose cuisine is thai and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "qid": "restaurants_train_607", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurant has outdoor seating", "source": "restaurant whose cuisine is thai and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string outdoor)))", "qid": "restaurants_train_611", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant serves lunch and offers takeout", "source": "restaurant that serves lunch and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string takeout)))", "qid": "restaurants_train_624", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what midtown west restaurant takes credit cards", "source": "restaurant whose neighborhood is midtown west and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string credit)))", "qid": "restaurants_train_667", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west that have takeout", "source": "restaurant whose neighborhood is midtown west and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string takeout)))", "qid": "restaurants_train_678", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurant that takes reservations", "source": "restaurant whose cuisine is thai and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string reserve)))", "qid": "restaurants_train_710", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "the thai restaurant takes credit cards", "source": "restaurant whose cuisine is thai and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string credit)))", "qid": "restaurants_train_722", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants that deliver", "source": "restaurant whose cuisine is thai and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "qid": "restaurants_train_746", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what midtown west restaurant takes reservations", "source": "restaurant whose neighborhood is midtown west and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string reserve)))", "qid": "restaurants_train_762", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose cuisine is thai and that has delivery", "source": "restaurant whose cuisine is thai and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "qid": "restaurants_train_782", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurant with waiters", "source": "restaurant whose cuisine is thai and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string waiter)))", "qid": "restaurants_train_783", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that serve lunch and takeout", "source": "restaurant that serves lunch and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string takeout)))", "qid": "restaurants_train_790", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that serve lunch and accept credit cards", "source": "restaurant that serves lunch and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string credit)))", "qid": "restaurants_train_808", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant that serves lunch and takes reservations", "source": "restaurant that serves lunch and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "qid": "restaurants_train_811", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurant that is good for group dining", "source": "restaurant whose cuisine is thai and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string groups)))", "qid": "restaurants_train_865", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant which serves lunch and accepts credit cards", "source": "restaurant that serves lunch and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string credit)))", "qid": "restaurants_train_891", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which restaurant not only serves lunch but has delivery", "source": "restaurant that serves lunch and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "qid": "restaurants_train_916", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "midtown west neighborhood that also deliveries", "source": "restaurant whose neighborhood is midtown west and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "qid": "restaurants_train_923", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurants are kid friendly", "source": "restaurant whose cuisine is thai and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string kids)))", "qid": "restaurants_train_930", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which restaurants serve lunch and accept reservations", "source": "restaurant that serves lunch and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "qid": "restaurants_train_931", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "the thai restaurant has delivery", "source": "restaurant whose cuisine is thai and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "qid": "restaurants_train_956", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant in the area of midtown west that is good for group dining", "source": "restaurant whose neighborhood is midtown west and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string groups)))", "qid": "restaurants_train_959", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants with optional outdoor seating", "source": "restaurant whose cuisine is thai and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string outdoor)))", "qid": "restaurants_train_984", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant with outdoor dining area that serves lunch", "source": "restaurant that serves lunch and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string outdoor)))", "qid": "restaurants_train_1005", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurant has delivery", "source": "restaurant whose cuisine is thai and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "qid": "restaurants_train_1033", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant in midtown west is good for groups", "source": "restaurant whose neighborhood is midtown west and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string groups)))", "qid": "restaurants_train_1036", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that has delivery", "source": "restaurant whose neighborhood is midtown west and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "qid": "restaurants_train_1038", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a restaurant that offers lunch and delivery services", "source": "restaurant that serves lunch and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "qid": "restaurants_train_1039", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "the restaurant takes credit cards and serves lunch", "source": "restaurant that serves lunch and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string credit)))", "qid": "restaurants_train_1048", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant has takeout and a lunch menu", "source": "restaurant that serves lunch and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string takeout)))", "qid": "restaurants_train_1050", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant takes credit card and is open for lunch", "source": "restaurant that serves lunch and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string credit)))", "qid": "restaurants_train_1084", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose cuisine is thai and that is good for groups", "source": "restaurant whose cuisine is thai and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string groups)))", "qid": "restaurants_train_1093", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurant offers takeout", "source": "restaurant whose cuisine is thai and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "qid": "restaurants_train_1102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a thai restaurant for kids", "source": "restaurant whose cuisine is thai and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string kids)))", "qid": "restaurants_train_1108", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which restaurant that welcomes kids offers lunch", "source": "restaurant that serves lunch and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string kids)))", "qid": "restaurants_train_1125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a good thai resturant with room for groups", "source": "restaurant whose cuisine is thai and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string groups)))", "qid": "restaurants_train_1136", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant that serves lunch and that has takeout", "source": "restaurant that serves lunch and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string takeout)))", "qid": "restaurants_train_1150", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant that can deliver and is open for lunch", "source": "restaurant that serves lunch and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "qid": "restaurants_train_1166", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant that serves lunch and that has delivery", "source": "restaurant that serves lunch and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "qid": "restaurants_train_1190", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose cuisine is thai and that has outdoor seating", "source": "restaurant whose cuisine is thai and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string outdoor)))", "qid": "restaurants_train_1203", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant can i eat lunch outdoors at", "source": "restaurant that serves lunch and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string outdoor)))", "qid": "restaurants_train_1208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a reservation thai restaurant", "source": "restaurant whose cuisine is thai and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string reserve)))", "qid": "restaurants_train_1222", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurants takes reservations", "source": "restaurant whose cuisine is thai and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string reserve)))", "qid": "restaurants_train_1245", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant can i get lunch at that has waiter service", "source": "restaurant that serves lunch and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string waiter)))", "qid": "restaurants_train_1248", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant whose neighborhood is midtown west and that has waiter service", "source": "restaurant whose neighborhood is midtown west and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string waiter)))", "qid": "restaurants_train_1249", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants that have takeout", "source": "restaurant whose cuisine is thai and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "qid": "restaurants_train_1250", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what thai restaurant offers waiter service", "source": "restaurant whose cuisine is thai and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string waiter)))", "qid": "restaurants_train_1268", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is a kid friendly restaurant that serves lunch", "source": "restaurant that serves lunch and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string kids)))", "qid": "restaurants_train_1276", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that serves lunch and is large", "source": "restaurant that serves lunch and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string groups)))", "qid": "restaurants_train_1283", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a restaurant for kids in midtown west", "source": "restaurant whose neighborhood is midtown west and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string kids)))", "qid": "restaurants_train_1291", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants that offer takeout", "source": "restaurant whose cuisine is thai and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "qid": "restaurants_test_25", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which thai restaurants have waiters", "source": "restaurant whose cuisine is thai and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string waiter)))", "qid": "restaurants_test_26", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in midtown west and is kid friendly", "source": "restaurant whose neighborhood is midtown west and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string kids)))", "qid": "restaurants_test_28", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which thai restaurants accept credit cards", "source": "restaurant whose cuisine is thai and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string credit)))", "qid": "restaurants_test_39", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant in midtown west that takes credit cards", "source": "restaurant whose neighborhood is midtown west and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string credit)))", "qid": "restaurants_test_44", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants accepting reservations and serving lunch", "source": "restaurant that serves lunch and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "qid": "restaurants_test_53", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what groupfriendly restaurant serves lunch", "source": "restaurant that serves lunch and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string groups)))", "qid": "restaurants_test_73", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that take reservations in midtown west", "source": "restaurant whose neighborhood is midtown west and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string reserve)))", "qid": "restaurants_test_86", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which restaurants in midtown west are kid friendly", "source": "restaurant whose neighborhood is midtown west and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string kids)))", "qid": "restaurants_test_99", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurant that is good for groups", "source": "restaurant whose cuisine is thai and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string groups)))", "qid": "restaurants_test_109", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants in the midtown west neighborhood that take reservations", "source": "restaurant whose neighborhood is midtown west and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string reserve)))", "qid": "restaurants_test_110", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what midtown west restaurant offers waiter service", "source": "restaurant whose neighborhood is midtown west and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string waiter)))", "qid": "restaurants_test_156", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants for groups", "source": "restaurant whose cuisine is thai and that is good for groups", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string groups)))", "qid": "restaurants_test_163", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurants with waiter service", "source": "restaurant whose cuisine is thai and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string waiter)))", "qid": "restaurants_test_178", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "thai restaurant that has outdoor seating facilities", "source": "restaurant whose cuisine is thai and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string outdoor)))", "qid": "restaurants_test_180", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "find a good kids restaurant in midtown west", "source": "restaurant whose neighborhood is midtown west and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string kids)))", "qid": "restaurants_test_203", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which resturants serve lunch and have takeout", "source": "restaurant that serves lunch and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string takeout)))", "qid": "restaurants_test_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant takes credit cards and has lunch", "source": "restaurant that serves lunch and that takes credit cards", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string credit)))", "qid": "restaurants_test_211", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "a restaurant for lunch that has outdoor seating", "source": "restaurant that serves lunch and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string outdoor)))", "qid": "restaurants_test_225", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant in midtown west has waiter service", "source": "restaurant whose neighborhood is midtown west and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string waiter)))", "qid": "restaurants_test_251", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurant that serves lunch and that has waiter service", "source": "restaurant that serves lunch and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string waiter)))", "qid": "restaurants_test_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants with lunch and outdoor seating", "source": "restaurant that serves lunch and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string outdoor)))", "qid": "restaurants_test_265", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what restaurant offers lunch and an outdoor seating", "source": "restaurant that serves lunch and that has outdoor seating", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string outdoor)))", "qid": "restaurants_test_266", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "restaurants that have wait service and serve lunch", "source": "restaurant that serves lunch and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string waiter)))", "qid": "restaurants_test_303", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which meal does a thai cafe not serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_22", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what entrees does thai cafe offer", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_133", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal served by the thai cafe", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_228", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what cuisine does the thai cafe not have", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_342", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of meal does thai cafe not serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_406", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "cuisine like that of thai cafe", "source": "cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_438", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which neighborhood is not where that cafe is located", "source": "neighborhood that is not neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_463", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of meals does thai cafe serve", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_544", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants that are not similar to thai cafe", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_578", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what places serve food that is not thai", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_614", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a neighborhood similar to thai cafes", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_657", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with food not like thai cafe", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_665", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meal not served by thai cafe", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_689", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what neighborhood is the thai cafe in", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_708", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which neighborhoods is thai cafe not in", "source": "neighborhood that is not neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_733", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal that the thai cafe does not serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_867", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meal can you get at the thai cafe", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood that is neighborhood of thai cafe", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what cuisine does the thai cafe have", "source": "cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1228", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals dont the thai cafe serve", "source": "meal that thai cafe not serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_1239", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "cuisine unlike thai cafe", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_1266", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants that are similar to thai cafe", "source": "cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are the neighborhoods without thai cafes", "source": "neighborhood that is not neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_test_59", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which meal does a thai cafe serve", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_202", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a neighborhood that doesnt have a thai cafe", "source": "neighborhood that is not neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_test_248", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "cuisine that is like thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_20", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurants in the same neighborhood as thai cafe", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_264", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "cuisine like thai cafe pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_422", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what is a meal that the thai cafe or pizzeria juno serves", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_512", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what meal can you get at either the thai cafe or at pizzeria juno", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_531", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_876", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "thai cafe thats erves pizzeria", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1008", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what neighborhood is thai cafe or pizzeria juno in", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1059", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what neighborhood has a thai cafe or pizzeria juno", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1077", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind fo meals do thai cafe and pizzeria juno serve", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurants with similar food to thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1287", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what is the neighborhood of thai cafe or pizzeria juno", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1301", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "the neighborhood that thai cafe or pizzeria juno is in", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_test_177", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of restaurants are thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_test_192", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "thai restaurants rated 3 stars", "source": "restaurant whose star rating is 3 stars and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_29", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all 3 star rated thai restaurants", "source": "restaurant whose star rating is 3 stars and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_54", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what midtown west restaurant has a 3 star rating", "source": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what 3 star restaurant offers lunch", "source": "restaurant whose star rating is 3 stars and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_113", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what 2 dollar signs offers lunch", "source": "restaurant whose price rating is 2 dollar signs and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_117", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which thai restaurant has a 2dollarsign rating", "source": "restaurant whose price rating is 2 dollar signs and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurant which has a 3 star rating", "source": "restaurant whose star rating is 3 stars and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_246", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a restaurant rated 2 dollar signs for lunch", "source": "restaurant whose price rating is 2 dollar signs and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_248", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with 2 dollar sign rating in midtown west", "source": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_259", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurant in midtown west has a 3star rating", "source": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_303", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant has 3 stars and serves lunch", "source": "restaurant whose star rating is 3 stars and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_361", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "three star restaurants in midtown west", "source": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_387", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants rated 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_437", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what thai restaurant has a 3 star rating", "source": "restaurant whose star rating is 3 stars and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_502", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what 2 dollar signs restaurants are in the neighbor of midtown west", "source": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_587", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with 2 price rating that serve lunch", "source": "restaurant whose price rating is 2 dollar signs and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_738", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "thai restaurants that are inexpensive", "source": "restaurant whose price rating is 2 dollar signs and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_812", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some 3 star restaurants that serve lunch", "source": "restaurant whose star rating is 3 stars and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_882", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose star rating is 3 stars and whose cuisine is thai", "source": "restaurant whose star rating is 3 stars and whose cuisine is thai", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string cuisine) (string =) en.cuisine.thai))", "qid": "restaurants_train_971", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants in midtown west rated 3 stars", "source": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_996", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant which offer lunch and has a three star rating", "source": "restaurant whose star rating is 3 stars and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1030", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants that serve lunch and have a price rating of 2", "source": "restaurant whose price rating is 2 dollar signs and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_train_1138", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants with price rating of 2 in midtown west", "source": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_train_1271", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what 3star restaurants are located in midtown west", "source": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_95", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "source": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_141", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which restaurants in midtown west have a 2dollarsigns price rating", "source": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_159", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "source": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "restaurants_test_204", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurants serving lunch with price rating of 2 dollar signs", "source": "restaurant whose price rating is 2 dollar signs and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_205", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant open for lunch and has a 3 star raing", "source": "restaurant whose star rating is 3 stars and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and that serves lunch", "source": "restaurant whose price rating is 2 dollar signs and that serves lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "qid": "restaurants_test_259", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what restaurant is in the least number of neighborhoods", "source": "restaurant that has the least number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "qid": "restaurants_train_77", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "a restaurant around alot of neighborhoods", "source": "restaurant that has the most number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string neighborhood)))", "qid": "restaurants_train_126", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurant that has the most number of neighborhood", "source": "restaurant that has the most number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string neighborhood)))", "qid": "restaurants_train_130", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which restaurant offers the most variety of cuisine", "source": "restaurant that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "qid": "restaurants_train_145", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "retaurant with less number of neighbourhood", "source": "restaurant that has the least number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "qid": "restaurants_train_162", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurant that has the least number of neighborhood", "source": "restaurant that has the least number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "qid": "restaurants_train_271", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what restaurant has the smallest number of cuisines", "source": "restaurant that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string cuisine)))", "qid": "restaurants_train_413", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurants that is in the least numbers of neighborhoods", "source": "restaurant that has the least number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "qid": "restaurants_train_499", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurant that has the most number of cuisine", "source": "restaurant that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "qid": "restaurants_train_546", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which restaurant offers the fewest types of cuisine", "source": "restaurant that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string cuisine)))", "qid": "restaurants_train_681", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "this restaurant has the most amount of cuisines", "source": "restaurant that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "qid": "restaurants_train_766", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what restaurant has the more cuisine then any other", "source": "restaurant that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "qid": "restaurants_train_820", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what restaurant contains the most number of cuisines", "source": "restaurant that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "qid": "restaurants_train_863", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which restaurant chain is found in the fewest neighborhoods", "source": "restaurant that has the least number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "qid": "restaurants_train_883", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which neighborhoods have the fewest restaurants", "source": "restaurant that has the least number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "qid": "restaurants_train_890", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurants with multiple cuisines", "source": "restaurant that has the most number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "qid": "restaurants_train_932", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurant that has the least number of cuisine", "source": "restaurant that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string cuisine)))", "qid": "restaurants_train_940", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "restaurants with the most locations in the area", "source": "restaurant that has the most number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string neighborhood)))", "qid": "restaurants_train_968", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which restaurant chain is found in the most neighborhoods", "source": "restaurant that has the most number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string neighborhood)))", "qid": "restaurants_train_1004", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what restaurant is in the most number of neighborhoods", "source": "restaurant that has the most number of neighborhood", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string neighborhood)))", "qid": "restaurants_test_75", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which restaurants offer the least types of cuisines", "source": "restaurant that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string cuisine)))", "qid": "restaurants_test_283", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what restaurants serve a single type of cuisine", "source": "restaurant that has the least number of cuisine", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string cuisine)))", "qid": "restaurants_test_300", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "list all restaurants that are at least 3 stars", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_96", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what are some restaurants rated 3 dollar signs or less", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_102", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants price rated 2 dollar signs or less", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_105", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants rated less than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant with at least a 2 dollar price rating", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_136", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that are more expensive than 2 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_139", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "a restaurant that has a 4 star or higher rating", "source": "restaurant whose star rating is larger than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_150", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which resturants have a star rating smaller than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_169", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what are some restaurants rated 2 dollar signs or more", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "hotel which has a minimum of 3 star rating", "source": "restaurant whose star rating is at least 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_213", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 2 and lower price rating", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_370", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "at least 3 star restaurants", "source": "restaurant whose star rating is at least 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_379", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what restaurant has 2 or greater dollar signs as its price rating", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_472", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose star rating is smaller than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_520", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 2 stars or less", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_571", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that is cheaper than 2 dollar signs", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_573", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "3 star restraunts and under", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_581", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "hotel that has more than a three star rating", "source": "restaurant whose star rating is larger than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_597", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what restaurant has less than a 2 dollar price rating", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_659", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants at least with a 2 dollar price rating", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_691", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "find a 3 or fewer star restaurant", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_717", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with at least 3 stars rating", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_736", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose price rating is at most 2 dollar signs", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_793", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant that has at least 3 star rating", "source": "restaurant whose star rating is at least 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_828", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 3 and higher price rating", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_837", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what are some restaurants who are 4 stars or better", "source": "restaurant whose star rating is larger than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_871", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "hotel that has a price rating or more than 2 dollars", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_947", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants rated 3 stars or higher", "source": "restaurant whose star rating is at least 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_1085", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with dollar ratings less than 2", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_1121", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose price rating is smaller than 2 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_1142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what resturant has a price rating smaller than two dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_1188", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that are at least 2 dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_1233", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what are some restaurants rated higher than 3 stars", "source": "restaurant whose star rating is larger than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_test_82", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that are cheaper than 2 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_test_149", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose price rating is larger than 2 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_test_168", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant with a price rating of 2 or under", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_test_174", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant which had a maximum of 2dollar sign price rating", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_test_217", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that have ratings lower than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_test_230", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "find a restaurant with less than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_test_247", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants whose price rating is 1 dollar sign", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_test_294", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which threestar rated restaurant has outdoor seating", "source": "restaurant that has outdoor seating and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "the 3 star restaurant is good for kids", "source": "restaurant that is good for kids and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_8", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "a restaurant that has at least a two star rating and does takeout", "source": "restaurant that has take-out and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_15", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurant has waiter service", "source": "restaurant that has waiter service and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_17", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurant offers delivery", "source": "restaurant that has delivery and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_32", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find a 3 star restaurant with waiter service", "source": "restaurant that has waiter service and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that has waiter service and whose price rating is 2 dollar signs", "source": "restaurant that has waiter service and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs and also accept credit cards", "source": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant has outdoor seating and has a price rating of the 2 dollar sign", "source": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_106", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which 3 star restaurants have outdoor seating", "source": "restaurant that has outdoor seating and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_127", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what is a 3 star restaurant that is kid friendly", "source": "restaurant that has waiter service and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_203", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "2 dollar signed rated restaurants for kids", "source": "restaurant that is good for kids and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_206", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "hotel that can be booked in advance which has a price rating of 2 dollar signs", "source": "restaurant that takes reservations and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_209", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurants have waiters and a price rating of two dollar signs", "source": "restaurant that has waiter service and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_233", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "3 star restaurants that take groups", "source": "restaurant that is good for groups and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_260", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that has delivery and whose price rating is 2 dollar signs", "source": "restaurant that has delivery and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_266", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "source": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_301", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurants have a 2 dollar sign price rating and outdoor seating", "source": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_335", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that takes credit cards and whose star rating is 3 stars", "source": "restaurant that takes credit cards and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_339", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "3 stars restaurant which offers takeout", "source": "restaurant that has take-out and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_349", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three star rated restaurants that deliver", "source": "restaurant that has delivery and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_357", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 2 dollar sign restaurant contains takeout", "source": "restaurant that has take-out and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_364", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurant has a three star rating and also takes reservations", "source": "restaurant that takes reservations and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_366", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "kid friendly restaurant with a price equal to 2 dollar signs", "source": "restaurant that is good for kids and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_378", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 2 dollar signs restaurant takes reservations", "source": "restaurant that takes reservations and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_396", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that is good for groups and whose price rating is 2 dollar signs", "source": "restaurant that is good for groups and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_403", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants that take credit cards with a price rating of 2", "source": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_442", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find a restaurant i can get reservations at that has a 2 dollar price rating", "source": "restaurant that takes reservations and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_459", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with 2 price rating that is groupfriendly", "source": "restaurant that is good for groups and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_461", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with outdoor seating and a  price rating", "source": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_471", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three star restaurants that take credit cards", "source": "restaurant that takes credit cards and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_510", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurants with a 2 dollar price rating offer takeout", "source": "restaurant that has take-out and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_519", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant with a price rating of two dollar signs is a good place for a group", "source": "restaurant that is good for groups and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_524", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "3star restaurants that deliver", "source": "restaurant that has delivery and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_565", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 2 dollar signs restaurant offers delivery", "source": "restaurant that has delivery and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_608", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 2 dollar signs that take reservations", "source": "restaurant that takes reservations and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_612", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that is good for groups and whose star rating is 3 stars", "source": "restaurant that is good for groups and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_629", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "the three star restaurant has takeout food", "source": "restaurant that has take-out and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_697", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "the 3 star restaurant is good for groups", "source": "restaurant that is good for groups and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_699", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "source": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_714", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which threestar rated restaurants are amenable to kids", "source": "restaurant that is good for kids and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_771", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "hotel that offers delivery services and has a price rating of 2 dollar signs", "source": "restaurant that has delivery and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_796", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 3 stars that take credit cards", "source": "restaurant that takes credit cards and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_818", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find a 2 dollar price rating restaurant with delivery", "source": "restaurant that has delivery and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_838", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with 3stars that take reservations", "source": "restaurant that takes reservations and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_848", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that is at least 3 stars and kid friendly", "source": "restaurant that is good for kids and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_884", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurant has delivery", "source": "restaurant that has delivery and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_887", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find a 3 star restaurant that is good for groups", "source": "restaurant that is good for groups and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_903", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant with delivery that has a 2 dollar sign rating", "source": "restaurant that has delivery and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_967", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurant has waiters and a star rating of three stars", "source": "restaurant that has waiter service and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1066", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurant is good for kids", "source": "restaurant that is good for kids and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1091", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with a 2 dollar sign rating that take credit cards", "source": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1110", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what good kids restaurant has a 2 dollar price rating", "source": "restaurant that is good for kids and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1129", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "group friendly restaurants rated 3 stars", "source": "restaurant that is good for groups and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1167", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 2 dollar price rating restaurant takes credit cards", "source": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1217", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what2 dollar sign restaurant has outdoor seating", "source": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1225", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 3 stars that accept reservations", "source": "restaurant that takes reservations and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1237", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what are some 3 star restaurants that accept credit cards", "source": "restaurant that takes credit cards and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1260", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that has delivery and whose star rating is 3 stars", "source": "restaurant that has delivery and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1267", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "3 star restaurants that offer takeout", "source": "restaurant that has take-out and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1299", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 2 dollar signs restaurant is good for groups", "source": "restaurant that is good for groups and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1305", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "3 star restaurants that have outdoor seating", "source": "restaurant that has outdoor seating and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_train_1307", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurant has waiter service and a 2 dollar sign rating", "source": "restaurant that has waiter service and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_train_1323", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurant with a price rating of two dollar signs is good for children", "source": "restaurant that is good for kids and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_10", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurant offers take out", "source": "restaurant that has take-out and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_23", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which resturant has waiter service and a 3 star rating", "source": "restaurant that has waiter service and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_43", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which 3 star restaurants are good for children", "source": "restaurant that is good for kids and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_90", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which 3 star restaurants have outdoor dining areas", "source": "restaurant that has outdoor seating and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star rated restaurant takes credit cards", "source": "restaurant that takes credit cards and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_137", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 3 star restaurant has takeout", "source": "restaurant that has take-out and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_147", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "the restaurant with take out food is fairly inexpensive", "source": "restaurant that has take-out and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_157", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what restaurants with 2 price rating serve outdoors", "source": "restaurant that has outdoor seating and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_165", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three star restaurants that take reservations", "source": "restaurant that takes reservations and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_189", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant that takes reservations and whose star rating is 3 stars", "source": "restaurant that takes reservations and whose star rating is 3 stars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string star_rating) (string =) (number 3 en.star)))", "qid": "restaurants_test_197", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurant that takes reservations have a price rating of two dollar signs", "source": "restaurant that takes reservations and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_226", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which hotel has a price rating of 2 dollar signs and  waiter service facilities", "source": "restaurant that has waiter service and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_237", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which two dollar sign rated restaurants have takeout", "source": "restaurant that has take-out and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_239", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with waiters that have a price rating of 2 dollar signs", "source": "restaurant that has waiter service and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_255", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which restaurants accept credit cards and has a rating of 2 dollar signs", "source": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_285", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant with a 2dollarsigns rating that welcomes groups", "source": "restaurant that is good for groups and whose price rating is 2 dollar signs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "qid": "restaurants_test_316", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "restaurant which has waiters", "source": "restaurant that has waiter service", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)))", "qid": "restaurants_train_45", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants offer waiter service", "source": "restaurant that has waiter service", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)))", "qid": "restaurants_train_53", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that is good for groups", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_60", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that has delivery", "source": "restaurant that has delivery", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)))", "qid": "restaurants_train_92", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants accept credit cards", "source": "restaurant that takes credit cards", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)))", "qid": "restaurants_train_108", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which resturants take reservations", "source": "restaurant that takes reservations", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)))", "qid": "restaurants_train_114", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find a restaurant with waiter service", "source": "restaurant that has waiter service", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string waiter)))", "qid": "restaurants_train_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants where you can sit outside", "source": "restaurant that has outdoor seating", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)))", "qid": "restaurants_train_234", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants have takeout", "source": "restaurant that has take-out", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)))", "qid": "restaurants_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "list all restaurants offering takeout", "source": "restaurant that has take-out", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)))", "qid": "restaurants_train_362", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "delivery is avaiable", "source": "restaurant that has delivery", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)))", "qid": "restaurants_train_435", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants accepting reservations", "source": "restaurant that takes reservations", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)))", "qid": "restaurants_train_517", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find a restaurant that takes credit cards", "source": "restaurant that takes credit cards", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)))", "qid": "restaurants_train_583", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "groupfriendly restaurants", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_628", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants accommodate groups", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants with outdoor dining area", "source": "restaurant that has outdoor seating", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)))", "qid": "restaurants_train_794", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurant offers reservations", "source": "restaurant that takes reservations", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)))", "qid": "restaurants_train_799", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurant takes reservations", "source": "restaurant that takes reservations", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)))", "qid": "restaurants_train_966", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurants have outdoor dining", "source": "restaurant that has outdoor seating", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)))", "qid": "restaurants_train_997", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what is a good kids restaurant", "source": "restaurant that is good for kids", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)))", "qid": "restaurants_train_1041", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "a take out restaurant", "source": "restaurant that has take-out", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)))", "qid": "restaurants_train_1051", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which resturants are good for groups", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_1069", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which hotel is entertaining for kids", "source": "restaurant that is good for kids", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)))", "qid": "restaurants_train_1099", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants that take credit cards", "source": "restaurant that takes credit cards", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)))", "qid": "restaurants_train_1101", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which restaurants have outdoor seating", "source": "restaurant that has outdoor seating", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)))", "qid": "restaurants_train_1128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants that are group friendly", "source": "restaurant that is good for groups", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)))", "qid": "restaurants_train_1211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants that accept credit cards", "source": "restaurant that takes credit cards", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)))", "qid": "restaurants_train_1316", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "where is a good restaurant to take kids", "source": "restaurant that is good for kids", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string kids)))", "qid": "restaurants_test_222", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that takes credit cards", "source": "restaurant that takes credit cards", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)))", "qid": "restaurants_test_232", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which restaurants offer takeout", "source": "restaurant that has take-out", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)))", "qid": "restaurants_test_233", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "a delivering restaurant", "source": "restaurant that has delivery", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)))", "qid": "restaurants_test_241", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which restaurants deliver", "source": "restaurant that has delivery", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)))", "qid": "restaurants_test_261", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
