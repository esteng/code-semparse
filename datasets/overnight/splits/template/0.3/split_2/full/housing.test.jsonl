{"paraphrased": "unit with same rent as 123 sesame street", "source": "housing unit whose monthly rent is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call getProperty en.housing_unit.123_sesame_street (string rent))))", "qid": "housing_test_154", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "find housing units with the same posting date as 123 sesame street", "source": "housing unit whose posting date is posting date of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call getProperty en.housing_unit.123_sesame_street (string posting_date))))", "qid": "housing_test_181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which housing unit resembles that of 123 sesame street", "source": "housing unit whose housing type is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call getProperty en.housing_unit.123_sesame_street (string housing_type))))", "qid": "housing_train_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "apartments similar in size to 123 sesame street", "source": "housing unit whose size is size of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call getProperty en.housing_unit.123_sesame_street (string size))))", "qid": "housing_train_586", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing unit with same housing type as that of 123 sesame street", "source": "housing unit whose housing type is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call getProperty en.housing_unit.123_sesame_street (string housing_type))))", "qid": "housing_train_321", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing that costs the same as 123 sesame street", "source": "housing unit whose monthly rent is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call getProperty en.housing_unit.123_sesame_street (string rent))))", "qid": "housing_train_594", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing posted the same day as 123 sesame street", "source": "housing unit whose posting date is posting date of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call getProperty en.housing_unit.123_sesame_street (string posting_date))))", "qid": "housing_train_727", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which housing unit has the monthly rent of 123 sesame street", "source": "housing unit whose monthly rent is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call getProperty en.housing_unit.123_sesame_street (string rent))))", "qid": "housing_train_519", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing posted the same day as 123 sesame street", "source": "housing unit whose posting date is posting date of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call getProperty en.housing_unit.123_sesame_street (string posting_date))))", "qid": "housing_train_458", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing unit sizes on 123 sesame street", "source": "housing unit whose size is size of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call getProperty en.housing_unit.123_sesame_street (string size))))", "qid": "housing_train_645", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which housing unit has an area of 800 square feet", "source": "housing unit whose size is 800 square feet and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_76", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is 1500month and 800 square feet", "source": "housing unit whose monthly rent is 1500 dollars and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_739", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what housing costs 1500 dollars and is 800 square feet", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot apartment with rent at 1500 a month", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_750", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing has a monthly rent of 1500 dollars", "source": "housing unit whose monthly rent is 1500 dollars and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_263", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit with an area of 800 square feet is available fora rent of 1500 dollars per month", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_257", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing unit whose monthly rent is 1500 dollars", "source": "housing unit whose monthly rent is 1500 dollars and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_4", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot unit with rent of 1500 monthly", "source": "housing unit whose monthly rent is 1500 dollars and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units with rent as 1500 dollars", "source": "housing unit whose monthly rent is 1500 dollars and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is 800 square feet and 1500month", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_212", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "looking for housing that is either an apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find housing units of the type apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_test_142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "aparartment or condo units", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find housing units in the neighborhoods of midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_test_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartments in the midtown west or chelsea neighborhoods", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_54", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me housing in midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_364", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me apartments and condos", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_409", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit is in the area of midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_634", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_724", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "housing posted on january 2 or february 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_402", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "what housing unit was posted on jan 2 or feb 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_656", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "a housing unit posted on january 2 or february 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "what housing is posted either jan 2nd or feb 3rd", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_test_159", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "find 800 square feet sized housing in the neighborhoods of midtown west", "source": "housing unit whose size is 800 square feet and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_366", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments renting for 1500 a month", "source": "housing unit whose monthly rent is 1500 dollars and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_66", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit has apartment kind of house with an area of 800 square feet", "source": "housing unit whose size is 800 square feet and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_367", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in midtown west with 1500month rent", "source": "housing unit whose monthly rent is 1500 dollars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_70", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments in midtown west with rent at 1500", "source": "housing unit whose monthly rent is 1500 dollars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_111", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "midtown west unit with 1500 rent monthly", "source": "housing unit whose monthly rent is 1500 dollars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_351", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which midtown west housing have 800 square feet", "source": "housing unit whose size is 800 square feet and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_388", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units with 1500 dollars as rent and is near midtown west", "source": "housing unit whose monthly rent is 1500 dollars and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_461", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments for 1500", "source": "housing unit whose monthly rent is 1500 dollars and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_test_33", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "800 square feet in midtown west", "source": "housing unit whose size is 800 square feet and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_553", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing has a private room", "source": "housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)))", "qid": "housing_train_462", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing units with a private bath", "source": "housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)))", "qid": "housing_train_465", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing units with private room", "source": "housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)))", "qid": "housing_test_28", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what housing units allows dogs", "source": "housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)))", "qid": "housing_train_521", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "apartment with a master bathroom", "source": "housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)))", "qid": "housing_train_219", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what housing units allow dogs", "source": "housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)))", "qid": "housing_test_135", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing units that have a private bath", "source": "housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)))", "qid": "housing_test_107", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "apartments that allow dogs", "source": "housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)))", "qid": "housing_train_162", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what housing unit contains a private bath", "source": "housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)))", "qid": "housing_train_610", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing that accepts dogs", "source": "housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)))", "qid": "housing_train_709", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing of 800 square feet posted on january 2", "source": "housing unit whose size is 800 square feet and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_453", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what 800 square foot housing posted jan 2nd", "source": "housing unit whose size is 800 square feet and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_test_177", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing units with monthly rents of 1500 dollars that posted on january 2", "source": "housing unit whose monthly rent is 1500 dollars and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_test_95", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing with monthly rent of 1500 dollars that was posted on january 2", "source": "housing unit whose monthly rent is 1500 dollars and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_705", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing 800 sf in size posted on january 2", "source": "housing unit whose size is 800 square feet and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_test_61", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what housing unit posted on jan 2s rent is 1500 dollars", "source": "housing unit whose monthly rent is 1500 dollars and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_454", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing with monthly rent of 1500 dollars that was posted on january 2", "source": "housing unit whose monthly rent is 1500 dollars and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_test_164", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "name neighborhoods with two or more housing units", "source": "neighborhood that is neighborhood of at least two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_132", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing type of more than two available housings", "source": "housing type that is housing type of more than two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string >) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_39", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which neighborhood has two housing units maximum", "source": "neighborhood that is neighborhood of at most two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <=) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_121", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing that includes two units", "source": "housing type that is housing type of two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_719", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing of two types", "source": "housing type that is housing type of two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_44", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood that has two housing", "source": "neighborhood that is neighborhood of two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_742", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which housing consists of two units maximum", "source": "housing type that is housing type of at most two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string <=) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_345", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "apartments with at least 2 units", "source": "housing type that is housing type of at least two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string >=) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_582", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has less than two housing units", "source": "neighborhood that is neighborhood of less than two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string <) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_686", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood that has at least 2 apartments", "source": "neighborhood that is neighborhood of at least two housing unit", "target": "(call listValue (call countComparative (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string >=) (number 2) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_200", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "seeking apartments between 1500 and 2000", "source": "1500 dollars or 2000 dollars", "target": "(call listValue (call concat (number 1500 en.dollar) (number 2000 en.dollar)))", "qid": "housing_train_483", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "find housing units with rental charges between 1500 and 2000 dollars", "source": "1500 dollars or 2000 dollars", "target": "(call listValue (call concat (number 1500 en.dollar) (number 2000 en.dollar)))", "qid": "housing_test_76", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "list all housing that have the size of 800 or 1000 square feet", "source": "800 square feet or 1000 square feet", "target": "(call listValue (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))", "qid": "housing_train_623", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "either 800 or 1000 square feet", "source": "800 square feet or 1000 square feet", "target": "(call listValue (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))", "qid": "housing_train_731", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "housing units of either 800 square feet or 1000 square feet", "source": "800 square feet or 1000 square feet", "target": "(call listValue (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))", "qid": "housing_train_249", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "rent between 1500 and 2000 dollars", "source": "1500 dollars or 2000 dollars", "target": "(call listValue (call concat (number 1500 en.dollar) (number 2000 en.dollar)))", "qid": "housing_train_206", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "find housing unit with posting date between january 2nd or february 3rd", "source": "housing unit whose posting date is smaller than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_466", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing posted on or before january 2 or on or before february 3", "source": "housing unit whose posting date is at most jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_568", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that was posted after january 2 or after february 3", "source": "housing unit whose posting date is at least jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_296", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "find housing units with posting date between january 2nd and february 3rd", "source": "housing unit whose posting date is at most jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_426", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that was posted after january 2 or february 3", "source": "housing unit whose posting date is larger than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_235", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing posted before january 2 or february 3", "source": "housing unit whose posting date is smaller than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_173", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing unit posted at the latest january 2 or february 3", "source": "housing unit whose posting date is at most jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_test_171", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing unit posted after january 2 or february 3", "source": "housing unit whose posting date is larger than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_597", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing with posting dates before january 2nd and february 3rd", "source": "housing unit whose posting date is smaller than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that posted after january 2 or february 3", "source": "housing unit whose posting date is larger than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_711", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "apartments in midtown west with a private room", "source": "housing unit that has a private room and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_416", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments that permit cats", "source": "housing unit that allows cats and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_723", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments that are catfriendly", "source": "housing unit that allows cats and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_621", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "dogfriendly apartments", "source": "housing unit that allows dogs and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_test_74", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit around midtown west has a private bath", "source": "housing unit that has a private bath and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_79", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which apartment kind of housing units permits cats in it", "source": "housing unit that allows cats and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_578", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit in midtown west permits dogs", "source": "housing unit that allows dogs and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_47", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment with private bath", "source": "housing unit that has a private bath and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_96", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "need a unit with a private room in the midtown west area", "source": "housing unit that has a private room and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_725", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in midtown west with a private room", "source": "housing unit that has a private room and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_384", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "rarest housing type", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_241", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "apartment complexes with the most units available", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_77", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing types of the most units", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_225", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the most available housing", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_646", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the least amount of housing", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_107", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the most common housing type", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_504", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the most housing units", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_38", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "where are the most number of housing units found", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_355", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with the least housing units", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_736", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the fewest amount of housing units", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_4", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find housing units with a private room and has 1500 dollars as monthly rent", "source": "housing unit that has a private room and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_309", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing unit with a private bath and cost 1500 dollars rent", "source": "housing unit that has a private bath and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_573", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartment with a private room for rent at 1500", "source": "housing unit that has a private room and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_444", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 foot apartment with a private room", "source": "housing unit that has a private room and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_305", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartment with a private bath for rent at 1500", "source": "housing unit that has a private bath and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_660", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square food housing units that have private baths", "source": "housing unit that has a private room and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_657", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find cat friendly housing units that charge 1500 dollars as rent", "source": "housing unit that allows cats and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_746", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet housing units that are cat friendly", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_343", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 800 square housing allows dogs", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_516", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me housing with 800 square feet of space where cats are acceptable", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_201", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "cats permitted 1500 rent monthly", "source": "housing unit whose monthly rent is 1500 dollars and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_cats)))", "qid": "housing_test_108", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing units that are 800 square feet and have private baths", "source": "housing unit whose size is 800 square feet and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_bath)))", "qid": "housing_train_526", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "800 square foot apartment with private bathroom", "source": "housing unit whose size is 800 square feet and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_bath)))", "qid": "housing_train_217", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "catfriendly apartments with rent at 1500", "source": "housing unit whose monthly rent is 1500 dollars and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_cats)))", "qid": "housing_train_258", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which 1500monthly rentals come with private room", "source": "housing unit whose monthly rent is 1500 dollars and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_room)))", "qid": "housing_test_12", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "apartment with a private bathroom for rent at 1500", "source": "housing unit whose monthly rent is 1500 dollars and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_bath)))", "qid": "housing_train_86", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find me a housing unti that chagres 1500 for rent and has a priiiiiiat bathroom", "source": "housing unit whose monthly rent is 1500 dollars and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_room)))", "qid": "housing_train_271", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "800 square foot apartment that allows cats", "source": "housing unit whose size is 800 square feet and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_cats)))", "qid": "housing_train_404", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing with 1500 rent and allows dogs", "source": "housing unit whose monthly rent is 1500 dollars and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_dogs)))", "qid": "housing_test_127", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing with 1500 dollars rent that has a private bath", "source": "housing unit whose monthly rent is 1500 dollars and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_bath)))", "qid": "housing_train_606", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing posted on january 2 around 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_549", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit is in the same neighborhood as 123 sesame st and was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_209", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit posted on jan 2 is the same kind as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_180", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units who have a posting date of january 2nd and on 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is size of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string size)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_627", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit was posted january 2 that is the same housing type as 123 sesame st", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_469", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing like 123 sesame street that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that is size of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string size)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_205", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit posted january 2 and the same rent as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string rent)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_374", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that was posted on january 2 of 123 sesame street kind", "source": "housing unit whose posting date is jan 2 and that is posting date of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string posting_date)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_430", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit in the same neighborhood as 123 sesame street was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_602", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in 123 sesame street neighborhood that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_499", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
