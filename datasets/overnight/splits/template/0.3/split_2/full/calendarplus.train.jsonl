{"paraphrased": "does the weekly standup or annual review ends at 10 am", "source": "weekly standup or annual review whose end time is 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_432", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings at greenberg cafe on january 2nd", "source": "start time of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_116", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what is the date of the meeting attended by alice", "source": "date of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string date)))", "qid": "calendarplus_train_220", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what is the ending time of the meeting that alice is attending on january 2nd", "source": "end time of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_train_294", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "where is the meeting that alice is going to on january 2nd", "source": "location of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string location)))", "qid": "calendarplus_train_297", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "on january 2nd whats the start time of the meeting where alice is an attendee", "source": "start time of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_307", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "who went to the greenberg cafe meeting on jan 2", "source": "attendee of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_test_14", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that alice went to on jan 2 start", "source": "start time of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_test_69", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what meeting was in the same place as weekly standup", "source": "meeting whose location is location that is location of weekly standup and that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendarplus_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "all the meeting are important and endy by 10 am", "source": "number of meeting that is important and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_test_113", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what meetings do i have on jan 2 that are shorter then three hours", "source": "meeting whose date is jan 2 whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what time did the greenberg cafe meeting end", "source": "end time of meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe) (string end_time)))", "qid": "calendarplus_test_137", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how long is the meeting that either alice or bob went to", "source": "total length of meeting whose attendee is alice or bob", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call concat en.person.alice en.person.bob)) (string length))))", "qid": "calendarplus_train_352", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)) (ANON_STRING))))"}
{"paraphrased": "what meetings will be held at the same location as the meeting which ends at 10am", "source": "meeting whose location is location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))))", "qid": "calendarplus_train_111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "what meeting was in the same place as the meeting that started at 10am", "source": "meeting whose location is location that is location of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)))))", "qid": "calendarplus_train_381", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "what meeting was held in the same place as the meeting that ended at 10am", "source": "meeting whose location is location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))))", "qid": "calendarplus_test_18", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))))"}
{"paraphrased": "what meeting was in the same place as the meeting that was over three hours", "source": "meeting whose location is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_93", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "show me meetings whose length is more than three hours", "source": "meeting whose length is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_271", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what meeting started at the same time as the meeting that was over three hours", "source": "meeting whose start time is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_363", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what meeting had someone who went to an over three hour meeting attend", "source": "meeting whose attendee is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_test_26", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "show me the number of meetings that are before january 3rd", "source": "number of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_train_87", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "how many meetings do i have before january 2", "source": "number of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_train_169", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "how many meetings were after jan 3", "source": "number of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_test_135", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "what meeting start and ends at 1000 am", "source": "meeting whose start time is 10am whose end time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_52", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show meeting that starts and ends at 1000 am", "source": "meeting whose end time is 10am whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_273", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which  is the  meeting that starts earlier than 10 am", "source": "meeting whose start time is 10am whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_491", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the meetings which starts at 10 am and ends within 10 am ", "source": "meeting whose start time is 10am whose end time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_519", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting ended at 10am and started before 10am", "source": "meeting whose end time is 10am whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_8", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me meetings with a date of january 2nd or before", "source": "meeting whose date is jan 2 whose date is smaller than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what three hour meeting ended at 10am", "source": "meeting whose length is three hours whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_53", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what three hour meeting started at 10am", "source": "meeting whose length is three hours whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendarplus_train_149", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what is my 3 hour meeting that ends at 10am", "source": "meeting whose length is three hours whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me meetings that are three hours and dont end at 10am", "source": "meeting whose length is three hours whose end time is not 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string !=) (time 10 0)))", "qid": "calendarplus_train_264", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what is the average length of the 10 am jan 2 meeting", "source": "average length of meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_486", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what is the length of the meetings with alice in greenberg cafe", "source": "total length of meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_135", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meetings after jan 2 that are three hours", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings after january 2nd that are three hours long", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings that are three hours long and are no later than january 2nd", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_236", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the three hour meeting no later than jan 2", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_296", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings before jan 2 shorter than three hours", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_314", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "three hours long meeting not before jan 2", "source": "meeting whose length is three hours whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_380", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "name a three hour meeting after jan 2", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_134", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "how many meetings were three or more hours long", "source": "number of meeting whose length is at least three hours", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_61", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "show me all meetings who last at least 3 hours", "source": "number of meeting whose length is at least three hours", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_67", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what weekly standup or annual review were longer than three hours", "source": "weekly standup or annual review whose length is larger than three hours", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_186", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "weekly standup or annual review more than three hours long", "source": "weekly standup or annual review whose length is larger than three hours", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_252", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which weekly standup or annual review was three or more hours", "source": "weekly standup or annual review whose length is at least three hours", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_45", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "how long is the meeting on jan 2", "source": "total length of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_406", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "how many meetings are at least one to three hours", "source": "number of meeting whose length is at least three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_150", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings last less than 3 hours ", "source": "number of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_281", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings were three or less hours long", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_301", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings lasted between one hour or three hours at the most", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_test_33", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "what is the length of the important meeting on january 2nd", "source": "average length of meeting whose date is jan 2 and that is important", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string length))))", "qid": "calendarplus_train_113", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long is the average important meeting on jan 2", "source": "average length of meeting whose date is jan 2 and that is important", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string length))))", "qid": "calendarplus_train_232", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings which are important", "source": "total length of meeting that is important and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string is_important)) (string length))))", "qid": "calendarplus_train_483", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "location of an important meeting that ends at 10am", "source": "location of meeting whose end time is 10am and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)) (string location)))", "qid": "calendarplus_train_312", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what time did the important meeting at 10am end", "source": "end time of meeting whose start time is 10am and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_408", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "how are meetings are held on jan 2 for a duration of 3 hours", "source": "number of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2))))", "qid": "calendarplus_train_463", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what meeting had the same location as a meeting that had two locations", "source": "meeting whose location is meeting that has two location", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (number 2))))", "qid": "calendarplus_train_415", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "which meeting has less than two attendees", "source": "meeting whose location is meeting that has less than two attendee", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string <) (number 2))))", "qid": "calendarplus_test_85", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what jan 2 meeting started after 10am", "source": "meeting whose date is jan 2 whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_114", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which meeting is jan 2 before 10 am", "source": "meeting whose date is jan 2 whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "list all meetings on january 2nd which start at 10am or earlier", "source": "meeting whose date is jan 2 whose start time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_354", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting on jan 2 started at or after 10am", "source": "meeting whose date is jan 2 whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_396", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meetings are held on january 2nd starting after 10am", "source": "meeting whose date is jan 2 whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_470", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting on jan 2 started before 10am", "source": "meeting whose date is jan 2 whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_474", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show meeting for january 2 at 1000 am", "source": "meeting whose date is jan 2 whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_488", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the meeting that starts at 10am on january 2nd", "source": "meeting whose date is jan 2 whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_537", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "meeting on jan 2 that ends not before 10am", "source": "meeting whose date is jan 2 whose end time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_5", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me any meetings that are on january 2nd with an end time thats after 10am", "source": "meeting whose date is jan 2 whose end time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_61", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "a meeting on january 2nd and ends at 10am", "source": "meeting whose date is jan 2 whose end time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "location of meeting with attendee of weekly standup", "source": "location of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string location)))", "qid": "calendarplus_train_48", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "show me the location of meeting of weekly standup", "source": "location of meeting whose location is location that is location of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)) (string location)))", "qid": "calendarplus_train_127", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "where are the meetings which have an attendee who is also an attendee of the weekly standup", "source": "location of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string location)))", "qid": "calendarplus_train_216", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "where is the meeting located that shares an attendee with the weekly standup meeting", "source": "location of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string location)))", "qid": "calendarplus_train_290", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "what time does my meeting end at weekly standup", "source": "end time of meeting whose location is location that is location of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)) (string end_time)))", "qid": "calendarplus_train_353", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "start time of meeting with same location as that of weekly standup", "source": "start time of meeting whose location is location that is location of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)) (string start_time)))", "qid": "calendarplus_train_413", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "attendee of meeting with attendee of weekly standup", "source": "attendee of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string attendee)))", "qid": "calendarplus_train_455", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting with anyone in my weekly standup", "source": "length of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string length)))", "qid": "calendarplus_train_509", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "what time does the meeting start who has someone also attending the weekly standup", "source": "start time of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string start_time)))", "qid": "calendarplus_train_539", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting and weekly standup", "source": "attendee of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string attendee)))", "qid": "calendarplus_train_540", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "end time of meeting with location of weekly standup", "source": "end time of meeting whose location is location that is location of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)) (string end_time)))", "qid": "calendarplus_test_44", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "attendee of meeting location is location of weekly standup", "source": "attendee of meeting whose location is location that is location of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup)) (string attendee)))", "qid": "calendarplus_test_75", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING)))"}
{"paraphrased": "what time did the important three hour meeting end", "source": "end time of meeting whose length is three hours and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_260", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what time did the important three hour meeting end", "source": "end time of meeting whose length is three hours and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)) (string end_time)))", "qid": "calendarplus_test_124", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which meetings end at 10am or 3pm", "source": "number of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))", "qid": "calendarplus_train_92", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))"}
{"paraphrased": "how many meetings end after 3 pm ", "source": "number of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))", "qid": "calendarplus_train_218", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))"}
{"paraphrased": "how many meetings that start at 10 am or 3 pm are conducted", "source": "number of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))", "qid": "calendarplus_train_527", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))"}
{"paraphrased": "what are the number of meetings whose start time is at most 10am or 3pm", "source": "number of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))", "qid": "calendarplus_test_62", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0))))))"}
{"paraphrased": "show me the meetings on january 2nd with a length of three hours", "source": "total length of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string length))))", "qid": "calendarplus_train_431", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING))))"}
{"paraphrased": "show me who attended the 10am meeting on january 2nd", "source": "attendee of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_train_439", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time was the start of the three hour meeting on january 2", "source": "start time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_497", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "attendee of three hours meeting on jan 2", "source": "attendee of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_train_507", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting on jan 2 start", "source": "start time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_test_68", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when does the meeting on january 2nd end", "source": "end time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_test_99", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "show me meetings longer than 3 hours that started after 10 am", "source": "meeting whose length is three hours whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_168", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "three hours long meeting whose start time is larger than 10am", "source": "meeting whose length is three hours whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_184", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what three hour meeting started after 10am", "source": "meeting whose length is three hours whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_266", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me meetings that last three hours and starts at 10 am", "source": "meeting whose length is three hours whose start time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_279", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "three hours long meeting that is not after 10am", "source": "meeting whose length is three hours whose start time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_365", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "three hours long meeting that ends after 10am", "source": "meeting whose length is three hours whose end time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_458", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting that started at 10am was three hours long", "source": "meeting whose length is three hours whose start time is at least 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_499", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "how many people attended the meeting on jan 2", "source": "number of person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))))", "qid": "calendarplus_train_75", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))))"}
{"paraphrased": "location number of meeting on jan 2", "source": "number of location that is location of meeting whose date is jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))))", "qid": "calendarplus_train_224", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))))"}
{"paraphrased": "how many meeting places do i have on jan 2", "source": "number of location that is location of meeting whose date is jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))))", "qid": "calendarplus_train_504", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))))"}
{"paraphrased": "how long is the important meeting at greenberg cafe", "source": "total length of meeting that is important and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_180", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the total length of important meetings alice has attended", "source": "total length of meeting that is important and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_268", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show all meeting locations with three hour limits", "source": "meeting whose location is location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)))))", "qid": "calendarplus_train_241", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))))"}
{"paraphrased": "three hours or longer", "source": "three hours or one hour whose length is larger than three hours", "target": "(call listValue (call filter (call concat (number 3 en.hour) (number 1 en.hour)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_94", "anonymized_target": "(call listValue (call filter (call concat (ANON_NUMBER) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "how many meetings do i have on jan 2 at 10am", "source": "number of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_103", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings on jan 2 started at 10am", "source": "number of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0))))", "qid": "calendarplus_train_424", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings are conducted on jan 2 which ends at 10 am", "source": "number of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_test_9", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings are starting at 1000 am on january 2", "source": "number of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0))))", "qid": "calendarplus_test_74", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what is the total length of important three hour meetings", "source": "total length of meeting whose length is three hours and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)) (string length))))", "qid": "calendarplus_test_117", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "was the meeting three or one hour long", "source": "length of meeting whose length is three hours or one hour", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length)))", "qid": "calendarplus_train_212", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meeting that is on january 2nd and is three hours long", "source": "length of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_182", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me the meeting that lasts 3 hours that took place on jan 2", "source": "attendee of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_412", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting on jan 2 end", "source": "end time of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_test_10", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what meeting date is january 2 and lest than 3 hours long", "source": "date of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_test_138", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "number of three hours long important meeting", "source": "number of meeting that is important and whose length is three hours", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour))))", "qid": "calendarplus_train_274", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "how many important meetings were three hours long", "source": "number of meeting that is important and whose length is three hours", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour))))", "qid": "calendarplus_test_71", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what is the duration of the important meeting that is attended by alice", "source": "total length of meeting whose attendee is alice and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)) (string length))))", "qid": "calendarplus_train_183", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting that alice is attending that is important", "source": "total length of meeting whose attendee is alice and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)) (string length))))", "qid": "calendarplus_train_411", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long was the important greenberg cafe meeting", "source": "total length of meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)) (string length))))", "qid": "calendarplus_train_548", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "total length of an important meeting at greenberg cafe", "source": "total length of meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)) (string length))))", "qid": "calendarplus_test_23", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "number of meeting not before jan 2", "source": "number of meeting whose date is at least jan 2", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2)))))", "qid": "calendarplus_train_350", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2)))))"}
{"paraphrased": "how long is the average length of the 10 am meeting", "source": "average length of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_24", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meeting that started at 10am", "source": "average length of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_99", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetins i have at 10am", "source": "average length of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_228", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings that ended at 10am", "source": "average length of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_349", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that started at 10am", "source": "total length of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_451", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the average duration of the meeting that starts at 10 am", "source": "average length of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_test_108", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "end time of meeting that lasts at least three hours", "source": "end time of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string end_time)))", "qid": "calendarplus_train_194", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that was three or more hours long", "source": "attendee of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string attendee)))", "qid": "calendarplus_train_214", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "what attendee is at a meeting lasting three hours or more", "source": "attendee of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string attendee)))", "qid": "calendarplus_train_225", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "show me all meetings that are 3 hours long", "source": "length of meeting whose length is at least three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))) (string length)))", "qid": "calendarplus_train_230", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that was fewer than three hours", "source": "length of meeting whose length is smaller than three hours", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))) (string length)))", "qid": "calendarplus_train_253", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that alice went to that ended at 10am", "source": "date of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string date)))", "qid": "calendarplus_train_60", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what time does the meeting that ends at 10 am in greenberg cafe start", "source": "start time of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string start_time)))", "qid": "calendarplus_train_193", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "how long do the  meetings that start at 10 am  that are held at the greenberg cafe ", "source": "length of meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length)))", "qid": "calendarplus_train_233", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "show me meetings with alice before 10am", "source": "end time of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string end_time)))", "qid": "calendarplus_train_235", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what is the start time of the meeting ending at 10am that alice is attending", "source": "start time of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_train_267", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what time does the 10 am meeting with alice end", "source": "end time of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string end_time)))", "qid": "calendarplus_train_295", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "who went to the same meeting as alice at 10am", "source": "attendee of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string attendee)))", "qid": "calendarplus_train_355", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "show me lengths of meetings that started at 10am and alex attended", "source": "length of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string length)))", "qid": "calendarplus_train_420", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what greenberg cafe meeting ended at 10am", "source": "length of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length)))", "qid": "calendarplus_train_510", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "length of attendee alices meeting which starts at 10am", "source": "length of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string length)))", "qid": "calendarplus_train_511", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that alice went to that ended at 10am start", "source": "start time of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_train_525", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "who went to the greenberg cafe meeting that ended at 10am", "source": "attendee of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string attendee)))", "qid": "calendarplus_test_52", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what time did the 10am meeting that alice went to end", "source": "end time of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string end_time)))", "qid": "calendarplus_test_131", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "did weekly standup start on jan 2 or jan 3", "source": "jan 2 or jan 3 that is not start time of weekly standup", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (string start_time)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_train_204", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which is not the commencing date of the weekly standup meeting  jan 2 or jan 3", "source": "jan 2 or jan 3 that is not start time of weekly standup", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (string start_time)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_test_129", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the total length of the meeting which started on or before 10am", "source": "total length of meeting whose start time is at most 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_train_286", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of a meeting that ends no later than 10 am", "source": "average length of meeting whose end time is at most 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_train_327", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "show me meetings before 10am", "source": "average length of meeting whose end time is at most 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_train_471", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "show me the average length of any meetings that end no later than 10am", "source": "average length of meeting whose end time is at most 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_test_120", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings which start before 10am", "source": "average length of meeting whose start time is smaller than 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_test_121", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "show me the length of meetings with attendees of the weekly standup", "source": "length of meeting whose attendee is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call getProperty en.meeting.weekly_standup (string attendee))) (string length)))", "qid": "calendarplus_train_45", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "length of meeting that ends at start time of weekly standup", "source": "length of meeting whose end time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string length)))", "qid": "calendarplus_train_66", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started when weekly standup ended end", "source": "end time of meeting whose start time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string end_time)))", "qid": "calendarplus_train_306", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "show me the attendees of the meetings with an end time thats the same as the start of weekly standup", "source": "attendee of meeting whose end time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string attendee)))", "qid": "calendarplus_train_313", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time does the meeting end that ends at the same time as the weekly standup", "source": "end time of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string end_time)))", "qid": "calendarplus_train_341", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that ended at the same time as weekly standup start", "source": "start time of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string start_time)))", "qid": "calendarplus_train_392", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that ended at the same time as weekly standup", "source": "attendee of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string attendee)))", "qid": "calendarplus_train_401", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time do meetings end when they have attendees who also attend the weekly standup", "source": "end time of meeting whose attendee is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call getProperty en.meeting.weekly_standup (string attendee))) (string end_time)))", "qid": "calendarplus_train_460", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the end time of the meeting which starts at the same time as the weekly standup", "source": "end time of meeting whose start time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string end_time)))", "qid": "calendarplus_train_490", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how long was weekly standup", "source": "length of meeting whose length is length of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call getProperty en.meeting.weekly_standup (string length))) (string length)))", "qid": "calendarplus_test_57", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who is attending the meeting before the end of weekly standup", "source": "attendee of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string attendee)))", "qid": "calendarplus_test_89", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the date of the meeting that ends at the end time of the weekly standup", "source": "date of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string date)))", "qid": "calendarplus_test_123", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how many places has weekly standup been held", "source": "number of location that is location of weekly standup and that is location of weekly standup", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendarplus_train_46", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "list at least three hours which are not the start time of the weekly standup", "source": "three hours or one hour that is not start time of weekly standup", "target": "(call listValue (call filter (call concat (number 3 en.hour) (number 1 en.hour)) (call reverse (string start_time)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_train_33", "anonymized_target": "(call listValue (call filter (call concat (ANON_NUMBER) (ANON_NUMBER)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the ending time of the meeting on january 2nd", "source": "end time of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_train_147", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what are the start times of meetings held on january 2nd", "source": "start time of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_196", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when will the meeting of jan 2 end", "source": "end time of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_test_11", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "number of meeting which ends at 10am with alice as attendee", "source": "number of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice)))", "qid": "calendarplus_test_101", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the length of the important meeting which ends at 10am", "source": "length of meeting that is important and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_133", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "who went to the important meeting that started at 10am", "source": "attendee of meeting that is important and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string start_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_179", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how many meetings lasted three hours and ended at 10am", "source": "number of meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_95", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many attendees are there at the weekly standup or annual review meetings", "source": "number of person that is attendee of weekly standup or annual review", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_train_86", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "how many locations are there for either the weekly standup or annual review", "source": "number of location that is location of weekly standup or annual review", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_test_19", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "show me meetings with a length of three hours or less", "source": "meeting whose length is three hours whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_59", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings that are three hours long or longer", "source": "meeting whose length is three hours whose length is larger than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_104", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which meeting is three hours or less", "source": "meeting whose length is three hours whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_524", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting was three hours long", "source": "meeting whose length is three hours whose length is at least three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_531", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what was the average length of all meetings prior to jan 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings before january 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_492", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings after jan 2", "source": "average length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_501", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings held on or after january 2", "source": "average length of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_513", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that start at 10am", "source": "jan 2 or jan 3 whose end time is at most 10am", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_112", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "where is the meeting that starts at 10 am conducted", "source": "location of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_4", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what date does the meeting start and end at 1000 am", "source": "date of meeting whose end time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_20", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "is there information on the end time of the meetings beginning at 10am", "source": "end time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_22", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "length of meeting whose end time is 10am", "source": "length of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_71", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that ended at 10am start", "source": "start time of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_145", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that started at 10am", "source": "date of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_176", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "attendee of meeting whose end time is 10am", "source": "attendee of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_206", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where is my meeting at 10am", "source": "location of meeting whose end time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_215", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started at 10am end", "source": "end time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_330", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting started at 10am", "source": "length of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_356", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what meeting starts at 10am", "source": "start time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_409", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "10am is the meetings end time", "source": "end time of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_test_41", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what dates have meetings ending at 10am", "source": "date of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_test_49", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "all the attendee of meeting start by 10am  and end by 10am", "source": "attendee of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_test_100", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how many meetings end at 10 am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_444", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings do i have at 10am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_536", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how long are my combined meetings before 10am on jan 2", "source": "total length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_51", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "show me all meetings on january 2nd that start at 10 am", "source": "average length of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_292", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting on jan 2 that ends at 10 am", "source": "total length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_393", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "how long is the average meeting that started at 10am on jan 2", "source": "average length of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_434", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings ending at 10am on january 2", "source": "average length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_453", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "show me any meetings for january 2nd that end at 10am", "source": "total length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_test_66", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "on average how long are the greenberg cafe meetings that start at 10am", "source": "average length of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_117", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting that starts at 10am at the greenberg cafe", "source": "total length of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_172", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting at the greenberg cafe which ended at 10am", "source": "total length of meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_512", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of any meetings with alice that end at 10am", "source": "average length of meeting whose attendee is alice and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_530", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "how long is the meeting that was shorter than three hours", "source": "total length of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_97", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long is the average meeting shorter than three hours", "source": "average length of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_156", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long are all my meetings longer than three hours", "source": "total length of meeting whose length is larger than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_445", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "show me all meetings one hour or three or more hours long", "source": "total length of meeting whose length is at least three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_446", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that was longer than one hour", "source": "total length of meeting whose length is larger than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_452", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "which weekly standup or annual review ended at or after 10am", "source": "weekly standup or annual review whose end time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_142", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me weekly standups that ends before 10 am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_160", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standups or annual reviews start after 10 am", "source": "weekly standup or annual review whose start time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_219", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review with start time at least 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_382", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "when is the weekly standup or annual review meeting which ends at 10 am", "source": "weekly standup or annual review whose end time is at most 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_423", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review which ends before 10am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_505", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standup or annual review started at or after 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_538", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the date of the annual review that starts at 10 am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_37", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all the weekly standup and annual review that ended after 10am", "source": "weekly standup or annual review whose end time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_76", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meetings start at 10am and last three hours or less", "source": "meeting whose start time is 10am whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_81", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting ran over three hours ended at 10am", "source": "meeting whose end time is 10am whose length is larger than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_238", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting that started at 10am was three or fewer hours long", "source": "meeting whose start time is 10am whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_284", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which meetings started at 10am and lasted at least three hours", "source": "meeting whose start time is 10am whose length is at least three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_386", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "more than three hours long meeting that starts at 10am", "source": "meeting whose start time is 10am whose length is larger than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which meeting ended at 10am and was 3 hours long", "source": "meeting whose end time is 10am whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_86", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "attendee of meeting who has attended most number of meeting", "source": "meeting whose attendee is person that is attendee of the most number of meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string attendee)) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_120", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "show location for small number o meeting", "source": "meeting whose location is location that is location of the least number of meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countSuperlative (call getProperty (call singleton en.location) (string !type)) (string min) (call reverse (string location)) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_174", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "show me the meetings with a location of greenberg cafe and with an end time of 10am", "source": "end time of meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_245", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show all meetings that end at ten oclock in the morning for attendee alice", "source": "date of meeting whose attendee is alice and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_251", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "whats the commencing time of the meeting that ends at 10 am in greenberg", "source": "start time of meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_277", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings in greenberg cafe that end no later than 10am", "source": "date of meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_283", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "location of meeting whose attendee is alice that ends at 10am", "source": "location of meeting whose attendee is alice and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_287", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "the meeting at 10am is at the greenberg cafe", "source": "location of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_371", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the attendee of the meeting at the greenberg cafe that starts at 10am", "source": "attendee of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_377", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where will the meeting ending at 10am at the greenberg cafe be held", "source": "location of meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_400", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "the meeting at the greenberg cafe starts at 10am", "source": "start time of meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_test_67", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the average length of all meetings which last one hour or three hours", "source": "average length of meeting whose length is three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length))))", "qid": "calendarplus_train_320", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of all the three hour and one hour meetings", "source": "average length of meeting whose length is three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length))))", "qid": "calendarplus_test_15", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING))))"}
{"paraphrased": "location of meeting on jan 2 that starts at 10am", "source": "location of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_88", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what was the start time of the jan 2 meeting that ended at 10am", "source": "start time of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_118", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meeting which ended at 10am on january 2", "source": "length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_288", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show me new date of meeting on jan 2 which ended at 10am", "source": "date of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_323", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where was the jan 2 meeting that ended at 10am", "source": "location of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_366", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting on jan 2 that started at 10am", "source": "attendee of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_475", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how long is the 10 am jan 2 meeting", "source": "length of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_test_40", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the start time for the meeting on january 2nd which ends at 10am", "source": "start time of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_test_94", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting on jan 2 that ended at 10am", "source": "length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_test_136", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the average length of the meetings held at the greenberg cafe on january 2", "source": "average length of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_185", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "show me the length of any meetings with alice that are on january 2nd", "source": "total length of meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_311", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the greenberg cafe meetings on jan 2", "source": "average length of meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_test_34", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what meeting that alice went to was three hours or shorter", "source": "meeting whose attendee is alice whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_96", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meetings do i have at greenberg cafe shorter than three hours", "source": "meeting whose location is greenberg cafe whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_165", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which is the meeting that is attended by alice and lasts for 3 hours", "source": "meeting whose attendee is alice whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_175", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "display meeting with alice that is less than three hours", "source": "meeting whose attendee is alice whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_240", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings with attendee alice and is at least three hours", "source": "meeting whose attendee is alice whose length is at least three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_348", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meeting at greenberg cafe is longer than three hours", "source": "meeting whose location is greenberg cafe whose length is larger than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_461", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show meetings for alice over three hours long", "source": "meeting whose attendee is alice whose length is larger than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_21", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting had the same attendee as either weekly standup or annual review", "source": "meeting whose attendee is person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_train_30", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "what is the average length of the important meetings that end at 10am", "source": "average length of meeting that is important and whose end time is 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_202", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "what meetings do i have before 10am on jan 2", "source": "meeting whose end time is 10am whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendarplus_train_155", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what is the average length of meetings held in the greenberg cafe which ended at 10am", "source": "average length of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_5", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me the meetings that end at 10am and are located at greenberg cafe", "source": "total length of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_332", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting with alice that lasted until 10am", "source": "total length of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_378", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meeting length that alice is attending that starts at 10 am", "source": "total length of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_403", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that started at 10am at the greenberg cafe", "source": "average length of meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_test_84", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the duration of the meeting that is held on 2 jan with alice as the attendee", "source": "length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length)))", "qid": "calendarplus_train_469", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "list the attendees of the january 2 meeting at the greenberg cafe", "source": "attendee of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string attendee)))", "qid": "calendarplus_train_496", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "start time of meeting on jan 2 with  alice as attendee", "source": "start time of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_test_1", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "who is the person who does not attend the weekly stand up meeting", "source": "person that is attendee of weekly standup that is not attendee of weekly standup", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup) (call reverse (string attendee)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_train_43", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "how many meetings had the same attendees as weekly standup", "source": "number of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))))", "qid": "calendarplus_train_170", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))))"}
{"paraphrased": "how long is the average meeting that starts after 10am", "source": "average length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_49", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended before 3pm", "source": "total length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_146", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended at or after 10am", "source": "total length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_195", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long is the average meeting that starts before 10am", "source": "average length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_298", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that started at or before 10am", "source": "total length of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_310", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings which ended on or after 10 am", "source": "average length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_351", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "show me the length of meetings who ended later than 3pm", "source": "total length of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_418", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings that ended at or after 10am", "source": "average length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_450", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "whats the average length of my meetings at 10am or 3pm", "source": "average length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_456", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long is the meeting that started before 3pm", "source": "total length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_479", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total time for my meetings after 3pm", "source": "total length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_20", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings which started before 10am", "source": "total length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_73", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings which start before 3pm", "source": "average length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_90", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings that start between 10am and 3pm", "source": "average length of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_127", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of three hour meetings held on january 2", "source": "total length of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_58", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "average meeting length of shorter than three hours on jan 2", "source": "average length of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_421", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "which meeting s duration is greater than 3 hoursjan2 or jan 3", "source": "jan 2 or jan 3 whose length is larger than three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_429", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that lasted more than 3 hours", "source": "jan 2 or jan 3 whose length is at most three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_13", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "when is my meeting at greenberg cafe that is shorter than three hours", "source": "date of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_train_198", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when did the three hour greenberg cafe meeting end", "source": "end time of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_249", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "end time of three hours long meeting whose location is greenberg cafe", "source": "end time of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_258", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "alices meeting was 3 hours long", "source": "length of meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_459", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "on what date was the meeting held which lasted three hours and was attended by alice", "source": "date of meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_test_83", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how long is the average length of weekly standup", "source": "average length of meeting whose length is length of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call getProperty en.meeting.weekly_standup (string length))) (string length))))", "qid": "calendarplus_train_342", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "what is the average time of my meetings after weekly standup", "source": "average length of meeting whose start time is end time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string length))))", "qid": "calendarplus_train_399", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings ending at the same time as weekly standup", "source": "average length of meeting whose end time is end time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string length))))", "qid": "calendarplus_train_473", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "show me all meetings that last as long as the weekly standup meeting", "source": "average length of meeting whose length is length of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call getProperty en.meeting.weekly_standup (string length))) (string length))))", "qid": "calendarplus_train_489", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended at the same time as weekly standup", "source": "average length of meeting whose end time is end time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string length))))", "qid": "calendarplus_train_534", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that started when weekly standup ended", "source": "total length of meeting whose start time is end time of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string length))))", "qid": "calendarplus_test_70", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings which start at the end of the weekly standup", "source": "total length of meeting whose start time is end time of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string length))))", "qid": "calendarplus_test_93", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING))))"}
{"paraphrased": "show me average meeting lenghtd  that start at 10am and last for three hours", "source": "average length of meeting whose start time is 10am and whose length is three hours", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)) (string length))))", "qid": "calendarplus_train_259", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING))))"}
{"paraphrased": "end time of an important meeting on jan 2", "source": "end time of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_32", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what is the end time for the important meeting on january", "source": "end time of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_275", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "priority attendee meeting on jan 2", "source": "attendee of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string attendee)))", "qid": "calendarplus_train_316", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all locations of important meetings on january 2nd", "source": "location of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string location)))", "qid": "calendarplus_test_104", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what is the total length of the important meeting which lasts three hours", "source": "total length of meeting that is important and whose length is three hours", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string length))))", "qid": "calendarplus_train_375", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING))))"}
{"paraphrased": "show me all important meetings starting after 10am", "source": "meeting that is important whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what important meeting started before 10am", "source": "meeting that is important whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what important meeting ended at or before 10am", "source": "meeting that is important whose end time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_189", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which is the important meeting that starts earlier than 10 am", "source": "meeting that is important whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_255", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the meeting at the greenberg cafe that takes place on january 2nd", "source": "meeting whose location is greenberg cafe whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_13", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "when did the meeting that started at 3pm or earlier end", "source": "end time of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_34", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long were the meetings that ended before 10am or 3pm", "source": "length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_train_77", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me all meetings that start at 10am and end at 3 pm", "source": "start time of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_82", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that started after 3pm", "source": "attendee of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_train_91", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "daes of meetings where the finish time is 3pm the latest", "source": "date of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_122", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started at or before 3pm start", "source": "start time of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_153", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who is the attendee of the meeting which starts at 10 am or 3 pm", "source": "attendee of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_train_190", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me all meetings with a start time of at least 10am or 3pm", "source": "date of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_203", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the location of meetings with a start time before 3pm", "source": "location of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string location)))", "qid": "calendarplus_train_227", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that started at or before 3pm", "source": "date of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_229", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the start time of meetings which ended no later than 10am", "source": "start time of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_270", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the date of meetings where the end time is after 10am", "source": "date of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_280", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the end time of meeting within 10am or 3pm", "source": "end time of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_362", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what day is the meeting that ends at 10 or later", "source": "date of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_374", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the dates of any meetings that starts after 10am", "source": "date of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_387", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that started before 3pm start", "source": "start time of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_404", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show meetings that start before 300 pm", "source": "date of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_405", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meetings ending before 3pm", "source": "length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_train_416", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "where is a meeting that ends between 10am  3pm", "source": "location of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string location)))", "qid": "calendarplus_train_422", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "a meeting that starts at either 10am or 3pm what time does it end", "source": "end time of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_449", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that started at or after 10am end", "source": "end time of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_457", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who are the attendees at my 10am and 3pm meetings", "source": "attendee of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_train_515", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "which meetings start before 10am", "source": "start time of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_12", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long is the meeting which ended no later than 3pm", "source": "length of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_32", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started after 10am start", "source": "start time of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_43", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who is the attendee of the meeting which ends at 10 am or 3 pm", "source": "attendee of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_test_47", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that ended before 3pm start", "source": "start time of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_53", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that ended at or before 3pm", "source": "length of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_56", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meeting that ends at the latest at 10am or 3pm", "source": "length of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_65", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that started before 3pm", "source": "length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_88", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the start time of the meeting that ends before 10am or 3pm", "source": "start time of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_103", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the locations of meetings that start at 10am or later", "source": "location of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string location)))", "qid": "calendarplus_test_105", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "meeting start time no later than 10 am or the 3 pm meeting", "source": "start time of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_110", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the end time of meetings starting after 10am", "source": "end time of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_test_114", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the attendees of meetings that are before 3pm", "source": "attendee of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_test_125", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "on what dates were there meetings which ended before 10am", "source": "date of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_test_130", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "end time of weekly standup not before jan 2", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_17", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not after jan 2", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_102", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me the end time of weekly standup on january 2nd or later", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_151", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the length of the weekly standup that takes place on january 2nd", "source": "length of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_164", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time do the weekly standup meetings on january 2 and after start", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_248", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time did the jan 2 weekly standup end", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_462", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time was weekly standup on jan 2", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_508", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me what time the weekly meeting on january 2nd ended", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_79", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
