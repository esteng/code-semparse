{"paraphrased": "what kind of cuisine is rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_586", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "show me preparation time for rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_92", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was the rice pudding recipe posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_test_182", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cuisine of rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_449", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cook time for rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_223", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how much time it takes to cook rice pudding ", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_35", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is a cuisine of rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_715", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does it take to prepare rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_64", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_test_192", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_461", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "show me recipes not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_863", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes posted in 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_859", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "show me recipes posted in 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_369", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what is a recipe that was not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_56", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipes posting date is not in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_22", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipe was not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_train_131", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "recipe not posted in 2004", "source": "recipe whose posting date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string !=) (date 2004 -1 -1)))", "qid": "recipes_test_196", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipe was posted during 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_337", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "recipe posted in 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_test_177", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which recipe has its posting date as 2004", "source": "recipe whose posting date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)))", "qid": "recipes_train_31", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what recipe makes two types of cuisine", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_train_342", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what is a recipe from no more than two different cuisines", "source": "recipe that has at most two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string <=) (number 2)))", "qid": "recipes_train_723", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me recipes with two ingedients", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_train_293", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipes have two cuisines", "source": "recipe that has two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (number 2)))", "qid": "recipes_train_177", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipes has more than two cuisines", "source": "recipe that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "recipes_test_29", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find the recipes of multiple cuisine", "source": "recipe that has at least two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >=) (number 2)))", "qid": "recipes_train_551", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me recipes that follows two or more cuisines", "source": "recipe that has at least two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >=) (number 2)))", "qid": "recipes_train_625", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipe is found in only one cuisine", "source": "recipe that has less than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string <) (number 2)))", "qid": "recipes_train_720", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me recipe that has at least have two cuisine", "source": "recipe that has at least two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >=) (number 2)))", "qid": "recipes_train_194", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "recipe having more than two cuisine", "source": "recipe that has more than two cuisine", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string >) (number 2)))", "qid": "recipes_train_503", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which recipe has the shortest ingredient list", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_713", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipe to do a meal for a single person", "source": "recipe that is for the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_116", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe of number of ingredients", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_388", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe calls for the most ingredients", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_191", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes need the most ingrediants", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_102", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe has the longest ingredient list", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_58", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me the recipe that has the most number of requirements", "source": "recipe that requires the most number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_429", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes requiring fewest ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_202", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe has the fewest amount of ingredients", "source": "recipe that requires the least number of ingredient", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string requires) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_783", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that work for more than one meal", "source": "recipe that is for the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (string meal) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_61", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes were posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_762", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipe was posted during 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_206", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_100", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipes were posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_740", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "recipes posted in 2004 and later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_759", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe which was posted no later than 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_643", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted in or before 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_769", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show recipes whose posted date is on or before 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_184", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe posted later than 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_854", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "for what meal is rice pudding used", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_260", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for what meal is rice pudding", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_306", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "ingredients in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_489", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients does rice pudding need", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_54", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients go in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_311", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "tell me ingredients of rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_791", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients are in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_794", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for which meal is the dish rice pudding used", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_144", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal that incorporates rice pudding", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_814", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are ingredients in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_38", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a recipe that posted after 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_635", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe was posted during or before 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_test_162", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted in or before 2004 or in or before 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_686", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004 or after 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_498", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show recipes posted on dates between 2004 and 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_556", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "find recipes posted later than 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_620", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes with posting dates from 2004 or later", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_417", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes with posting date before 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_476", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_243", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "a recipe which posted no sooner than 2004 or 2010", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipes posting date is in 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_496", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "what recipe was posted in either 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_781", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "show me recipes posted during 2004 and 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_455", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "show me recipes posted in 2004 or in 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_test_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "a recipe which posted either in 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_test_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "show me recipes posted in 2004 and 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_272", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "find recipes posted in 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_280", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "what ingredients are used only for lunch", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_107", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meals have recipes that use milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_398", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredients do lunch recipes call for", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_259", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal is a recipe that requires milk for", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_579", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipe is for a lunchtime meal", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_178", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal did that recipe i used for lunch go with", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_test_43", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find meal recipes for lunch", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredient is called for by a lunch recipe", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_test_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredients do lunch recipes need", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_806", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is an ingredient found in a lunch recipe", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_654", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
