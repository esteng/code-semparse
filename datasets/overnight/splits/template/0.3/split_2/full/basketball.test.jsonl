{"paraphrased": "players who had the same number of fouls in a season that kobe bryant had", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_train_790", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player who has played as many games as kobe bryant", "source": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_games_played) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_games_played)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1222", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that tied kobe inn total scoring for the season", "source": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_points) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_points)))) (call domain (string player))) (string player)))", "qid": "basketball_test_237", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player had as many turnovers as kobe bryant", "source": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_turnovers) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers)))) (call domain (string player))) (string player)))", "qid": "basketball_test_364", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player has as much steals as kob bryant made over a season", "source": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_steals) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals)))) (call domain (string player))) (string player)))", "qid": "basketball_train_462", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player has as many blocks as kobe bryant", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_1449", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had as many blocks as kobe bryant over as season", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_train_643", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player from player kobe bryants team", "source": "player whose team is team of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string team)))) (call domain (string player))) (string player)))", "qid": "basketball_train_234", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what player had the same amount of fouls as kobe bryant", "source": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_fouls) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls)))) (call domain (string player))) (string player)))", "qid": "basketball_test_277", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players tied with kobe bryant for blocks in a season", "source": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string num_blocks) (string =) (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks)))) (call domain (string player))) (string player)))", "qid": "basketball_test_319", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING)))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had less steals than kobe bryant", "source": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1110", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had the same or more blocks than kobe bryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_281", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have made at least as many blocks as kobe bryant", "source": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_71", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had fewer rebounds in a season than kobe bryant", "source": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_test_28", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players have as many rebounds as kobe bryant over a season", "source": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_rebounds)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds))))) (call domain (string player))) (string player)))", "qid": "basketball_train_413", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "name a player with fewer assists than kobe bryant", "source": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string <) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_309", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who had at least as many fouls as kobe bryant in a season", "source": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_fouls)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_fouls))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1424", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "note those players with steals over a season equal to or more than the number of steals made by kobe bryant", "source": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_steals)) (string >=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals))))) (call domain (string player))) (string player)))", "qid": "basketball_test_183", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what players have had more assists than kobe bryant", "source": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_assists)) (string >) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists))))) (call domain (string player))) (string player)))", "qid": "basketball_test_301", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player with the same or fewer blocks per season as kobe bryant", "source": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (string num_blocks)) (string <=) (call ensureNumericEntity (call getProperty (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks))))) (call domain (string player))) (string player)))", "qid": "basketball_train_1165", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING))))) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player is not in the position of point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_379", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who are not point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_29", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players arent point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_734", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players who dont play for los angeles lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_366", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not belong to the los angeles lakers team", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_765", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who is not a los angleles laker", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_train_693", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which player does not play for the la lakers", "source": "player whose team is not los angeles lakers", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string team) (string !=) en.team.lakers)) (call domain (string player))) (string player)))", "qid": "basketball_test_321", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "player who does not play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_9", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "players that play point guard", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_test_298", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "which players are not point guards", "source": "player whose position is not point guard", "target": "(call listValue (call getProperty ((lambda s (call filter (var s) (string position) (string !=) en.position.point_guard)) (call domain (string player))) (string player)))", "qid": "basketball_train_156", "anonymized_target": "(call listValue (call getProperty ((lambda s (call filter (var s) (ANON_STRING) (ANON_STRING) ANON_ENTITY)) (call domain (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "either kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_112", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "who is better kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_705", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which team is it the la lakers or the cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_252", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which player is it kobe bryant or lebron james", "source": "kobe bryant or lebron james", "target": "(call listValue (call concat en.player.kobe_bryant en.player.lebron_james))", "qid": "basketball_train_113", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either los angeles lakers or cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_train_1106", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "player who plays position point guard or forward", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_771", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what nba teams play in cleveland or la", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_24", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either los angeles lakers or cleveland cavaliers", "source": "los angeles lakers or cleveland cavaliers", "target": "(call listValue (call concat en.team.lakers en.team.cavaliers))", "qid": "basketball_test_134", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "players who are forwards or point guards", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_293", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "name a point guard or a forward", "source": "point guard or forward", "target": "(call listValue (call concat en.position.point_guard en.position.forward))", "qid": "basketball_train_284", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "number of fouls of kobe bryant who has 3 blocks", "source": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "qid": "basketball_train_777", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe get after getting 3 assists", "source": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "qid": "basketball_train_740", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many turnovers did kobe bryant have when he made three assists", "source": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "qid": "basketball_train_1354", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what teams has kobe played for in his career", "source": "team of player kobe bryant whose number of turnovers (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "qid": "basketball_train_266", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant make in seasons where he made 3 rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_train_793", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "in the season he had 3 blocks kobe bryant was playing for what team", "source": "position of player kobe bryant whose number of blocks (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "qid": "basketball_train_292", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant play in which he made three rebounds", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_246", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many steals did kobe bryant have in season where he had only three rebounds", "source": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "qid": "basketball_train_719", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many games did kobe bryant get 3 rebounds in", "source": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "qid": "basketball_test_332", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "how many assists did kobe have in seasons when he had 3 steals in a season", "source": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "target": "(call listValue (call getProperty (call filter (call getProperty en.player.kobe_bryant (call reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "qid": "basketball_test_328", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty ANON_ENTITY (call reverse (ANON_STRING))) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
