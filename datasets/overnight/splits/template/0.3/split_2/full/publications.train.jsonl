{"paraphrased": "what article published in 2004 was cited by multivariate data analysis", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_115", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "name an article from 2004 about multivariate data analysis", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_272", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article about multivariate data analysis was published in 2004", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_337", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "an article that cites multivariate data analysis published in 2004", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_359", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article citing multivariate data analysis published in 2004", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_543", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles cited by multivariate data analysis published in 2004", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_593", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article that cites multivariate data analysis and whose publication date is 2004", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_59", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article cited by multivariate data analysis and published in 2004", "source": "article that multivariate data analysis cites and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article cites other articles about annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_50", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "any article that cites another article published in annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_81", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites articles written by efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_313", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles that cite articles written by efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_375", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article with the venue as annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_405", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites an article from annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_450", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author of article citing multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_462", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles citing efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_552", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites an efron article", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_584", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article citing an article citing multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_8", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles that cite articles published in annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_test_14", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites articles about multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_49", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles that cities articles by efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_117", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article that cites article whose author is efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_126", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles that cite multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_160", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_10", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who wrote multivariate data analysis more than once", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_28", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the author of a multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_36", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name a person who is the author of an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_65", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name someone who has written an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_77", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that multivariate data analysis cites", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_84", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article citing multivariate data analysis", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_89", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is someone who has authored articles about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_155", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by studies using multivariate data analysis", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_249", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the venue of multivariate data analysis", "source": "venue that is venue of multivariate data analysis and that is venue of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_404", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what venue can you find multivariate data analysis in", "source": "venue that is venue of multivariate data analysis and that is venue of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_411", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the author of multivariate date analysis articles", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_514", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name a person who is the author of an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_562", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article that multivariate data analysis cites", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_624", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is and author of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_633", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_47", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what publications contain multivariate data analysis", "source": "venue that is venue of multivariate data analysis and that is venue of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_103", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_154", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles published in 2004 that cite multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_11", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article discusses annals of statistics and whose publication date was 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_103", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what articles are published in annals of statistics and in the year 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_263", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "name an article about multivariate data analysis published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_268", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article whose author is efron and whose publication date is 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_278", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article that cites multivariate data analysis that is published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_279", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "find an article in annals of statistics that was published in 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_286", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was written by efron and has a publication date of 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_295", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles by efron published in 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_358", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what multivariate data analysis city articles were published after 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_456", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles that cite multivariate data analysis published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_566", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published in annals of statistics in 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_585", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article published in 2004 that cites multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_601", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which article was published in 2004 authored by efron", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_618", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article published in 2004 cited multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_68", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article published by efron in 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles that cite articles published in 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_64", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "article that cite articles published in 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_303", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "articles citing articles published in 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_452", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "find an article making a citation of a 2004 published article", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_572", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what article cites another article with a publication date of 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_test_16", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "article whose author is efron or lakoff", "source": "article whose author is efron or lakoff", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call concat en.person.efron en.person.lakoff)))", "qid": "publications_train_8", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "articles written by efron or lakoff", "source": "article whose author is efron or lakoff", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call concat en.person.efron en.person.lakoff)))", "qid": "publications_train_269", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are some articles written by efron or lakoff", "source": "article whose author is efron or lakoff", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call concat en.person.efron en.person.lakoff)))", "qid": "publications_train_273", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "articles written by efron or lakoff", "source": "article whose author is efron or lakoff", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call concat en.person.efron en.person.lakoff)))", "qid": "publications_train_515", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find an article by efron or lakoff", "source": "article whose author is efron or lakoff", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call concat en.person.efron en.person.lakoff)))", "qid": "publications_test_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what article is about a venue of annals of statistics or computational linguistics", "source": "article whose venue is annals of statistics or computational linguistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call concat en.venue.annals_of_statistics en.venue.computational_linguistics)))", "qid": "publications_test_34", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "articles published in annals of statistics or computational linguistics", "source": "article whose venue is annals of statistics or computational linguistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call concat en.venue.annals_of_statistics en.venue.computational_linguistics)))", "qid": "publications_test_69", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "articles written by efron or lakoff", "source": "article whose author is efron or lakoff", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call concat en.person.efron en.person.lakoff)))", "qid": "publications_test_96", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find an article in either annals of statistics or computational linguistics", "source": "article whose venue is annals of statistics or computational linguistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call concat en.venue.annals_of_statistics en.venue.computational_linguistics)))", "qid": "publications_test_128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "articles published in annals of statistics cited by multivariate data analysis", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_16", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article about multivariate data analysis by the author efron", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_19", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles written by efron and cited by multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_60", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article by efron that cites multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_188", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what efron article cites multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_235", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles published in annals of statistics and cited by multivariate data analysis", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article written by efron which multivariate data analysis cites", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_385", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article by efron citing multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article cited by as well as cites multivariate data analysis", "source": "article that cites multivariate data analysis and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_441", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article citing multivariate data analysis published in annals of statistics", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_473", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article citing multivariate data analysis", "source": "article that cites multivariate data analysis and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_476", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article with venue anals of statistics that multivariate data analysis cites", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_569", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles written by efron cited by multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_627", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article is in annals of statistics and is cited by multivariate data analysis", "source": "article whose venue is annals of statistics and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_20", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article discusses the multivariate data analysis of cities", "source": "article that cites multivariate data analysis and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_64", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles citing multivariate data analysis and cited by multivariate data analysis", "source": "article that cites multivariate data analysis and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_100", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what efron article was cited by multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_105", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles by efron cited in multivariate data analysis", "source": "article whose author is efron and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_143", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that was awarded", "source": "article that won an award and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (string won_award)))", "qid": "publications_train_478", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "article with publication date as 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "publications_train_431", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "earliest published article", "source": "article that has the smallest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string min) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_189", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "article that has the largest publication date", "source": "article that has the largest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string max) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_227", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "most recently published article", "source": "article that has the largest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string max) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_240", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is the article with the oldest publication date", "source": "article that has the smallest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string min) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_251", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "an article with the latest publication date", "source": "article that has the largest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string max) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_300", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what article has the oldest publication date", "source": "article that has the smallest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string min) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_356", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "first published article", "source": "article that has the smallest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string min) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_387", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is the newest published article", "source": "article that has the largest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string max) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_481", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "article published most recently", "source": "article that has the largest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string max) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_545", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is the earliest published article", "source": "article that has the smallest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string min) (call ensureNumericProperty (string publication_date))))", "qid": "publications_train_557", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "article that has the smallest publication date", "source": "article that has the smallest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string min) (call ensureNumericProperty (string publication_date))))", "qid": "publications_test_6", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "articles published most recently", "source": "article that has the largest publication date", "target": "(call listValue (call superlative (call getProperty (call singleton en.article) (string !type)) (string max) (call ensureNumericProperty (string publication_date))))", "qid": "publications_test_32", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "award winning articles cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what award winning article is cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_213", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that won awards cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_276", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "award winning article cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_325", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "awardwinning articles cited in articles using multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_419", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article cited by multivariate data analysis won an award", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_57", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writers who didnt write multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_58", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "in what publication was multivariate data analysis published", "source": "venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article is not cited in multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_110", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article that is not about multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_120", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that does not cites multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_121", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not cited by multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_186", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article not citing multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_215", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which article does not cite multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_220", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what articles are published in multivariate data analysis", "source": "article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_223", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which author did not write  multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_241", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "people who did not author multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_294", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a venue that does not have multivariate data analysis", "source": "venue that is not venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_315", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what venue is multivariate data analysis in", "source": "venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_336", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "venues other than the multivariate data analysis venue", "source": "venue that is not venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_386", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that does not cite multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_402", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "publications that do not publish multivariate data analysis", "source": "venue that is not venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_406", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "journal that did not publish multivariate data analysis", "source": "venue that is not venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_500", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name someone who is not the author of an article about multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_502", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that does not cite multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_519", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is someone that has not authored an article about multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_550", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles on multivariate data analysis", "source": "venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_565", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the author of multivariate data analysis", "source": "person that is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_626", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is an article that does not cite multivariate data analysis", "source": "article that multivariate data analysis not cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_636", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "person who has not published article in multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_1", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what person is not the author of multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_2", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writers who didnt write multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_12", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "person who is not author of multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_38", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who has not written a multivariate data analysis", "source": "person that is not author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the author of multivariate data analysis article", "source": "person that is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_120", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a venue that is not multivariate data analysis related", "source": "venue that is not venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_122", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article cited bymultivariate data analysis", "source": "article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find any article that efron didnt write", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article doesnt cite multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_135", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "all articles by efron", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_train_142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not authored by efron", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_149", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not published in the annals of statistics", "source": "article whose venue is not annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string !=) en.venue.annals_of_statistics))", "qid": "publications_train_185", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some articles unrelated to annals of statistics", "source": "article whose venue is not annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string !=) en.venue.annals_of_statistics))", "qid": "publications_train_187", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which articles author is efron", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not published in annals of statistics", "source": "article whose venue is not annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string !=) en.venue.annals_of_statistics))", "qid": "publications_train_211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article not in annals of statistics", "source": "article whose venue is not annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string !=) en.venue.annals_of_statistics))", "qid": "publications_train_232", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not written by efron", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_296", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an article in the annals of statistics venue", "source": "article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_307", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that do not cite multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_341", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article is written by efron", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_train_343", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an efron article", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_train_394", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name some articles that are not written by efron", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_489", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not written by efron", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_523", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that does not reference multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_580", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article does not cite multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_600", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "multivariate data analysis cited articles", "source": "article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_620", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that do not cite multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_test_4", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles by efron", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_test_35", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an article not in annals of statistics", "source": "article whose venue is not annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string !=) en.venue.annals_of_statistics))", "qid": "publications_test_44", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some articles about annals of statistics", "source": "article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_95", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles published on the same date as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_78", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "an article whose also authored multivariate data analysis", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_88", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "article with author of multivariate data analysis", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "find an article with the same venue as multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_191", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what article has a venue of multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_222", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what article was published on the same date as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_231", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles written by the multivariate data analysis writer", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_242", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which article has a publication date the same as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_379", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "article that cites multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_384", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "article published on date of multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_449", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles published in multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_464", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "article whose author is author of multivariate data analysis", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_586", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles published in the same publication as multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_594", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles published on the same day as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_test_28", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "how many journals are there", "source": "number of venue", "target": "(call listValue (call .size (call getProperty (call singleton en.venue) (string !type))))", "qid": "publications_train_306", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the date of the article", "source": "number of article", "target": "(call listValue (call .size (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_316", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the persons number", "source": "number of person", "target": "(call listValue (call .size (call getProperty (call singleton en.person) (string !type))))", "qid": "publications_train_363", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the venues number", "source": "number of venue", "target": "(call listValue (call .size (call getProperty (call singleton en.venue) (string !type))))", "qid": "publications_train_369", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many people", "source": "number of person", "target": "(call listValue (call .size (call getProperty (call singleton en.person) (string !type))))", "qid": "publications_train_544", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "number of publications", "source": "number of venue", "target": "(call listValue (call .size (call getProperty (call singleton en.venue) (string !type))))", "qid": "publications_test_27", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of the article", "source": "number of article", "target": "(call listValue (call .size (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_153", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "when was multivariate data analysis published", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_44", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was multivariate data analysis published", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_147", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "who wrote multivariate data analysis", "source": "author of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string author)))", "qid": "publications_train_165", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "multivariate data analysis venue", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_200", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "publications of multivariate data analysis", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_204", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "where can you see multivariate data analysis", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_238", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "publication date of multivariate data analysis", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_255", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the date of publication  for multivariate data analysis", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_342", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the publication date of a multivariate data analysis article", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_355", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what journal is multivariate data analysis published in", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_381", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what venue consists of multivariate data analysis", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_416", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "who authored multivariate data analysis", "source": "author of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string author)))", "qid": "publications_train_568", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was multivariate data analysis published", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_614", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "articles published from 2004 to 2010", "source": "article whose publication date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_143", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "article published after 2004", "source": "article whose publication date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_193", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what article was published in 2010 or earlier", "source": "article whose publication date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_309", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "articles published before 2004 or before 2010", "source": "article whose publication date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_403", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "articles published before 2010", "source": "article whose publication date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_501", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "articles published between 2004 and 2010", "source": "article whose publication date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_510", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what articles are written between 2004 and 2010", "source": "article whose publication date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_542", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "articles published after 2010", "source": "article whose publication date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_578", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "find an article published after 2004", "source": "article whose publication date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_train_613", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what article was published before 2010", "source": "article whose publication date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_test_31", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "find an article published in 2004 or later", "source": "article whose publication date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_test_50", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "articles published after 2004 or after 2010", "source": "article whose publication date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "publications_test_149", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "venue of only one article", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_6", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that mention two or more cities", "source": "article that at least two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_14", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find a venue with more than two articles in it", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_24", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues with less than two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_38", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article cited two or fewer times", "source": "article that at most two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_39", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author wrote two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_47", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author with at most two article", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_49", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_51", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who is the author of less than two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_63", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a publication with fewer than two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_66", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writers of two or fewer articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_76", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which authors have written two or more articles", "source": "person that is author of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_79", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publisher of only one article", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_85", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues of two articles or fewer", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_87", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writers of fewer than two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_91", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a person who has authored fewer than two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_92", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which publication contains two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_101", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that cite two or fewer articles", "source": "article that at most two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_102", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author wrote two or more articles", "source": "person that is author of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_116", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article has been cited less than twice", "source": "article that less than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_122", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who is the author of the two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_129", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which venue has two articles maximum", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_132", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a publication containing no more than two articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_139", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues that have published at most two articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_150", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has under two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_162", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_163", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publications with at least two articles", "source": "venue that is venue of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_168", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author with maximum two article", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_177", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue with two article published", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_178", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which author wrote two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_196", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that cite more than two article", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_212", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has two or less articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_230", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publications that have contained more than two articles", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_236", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_243", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a person who has written two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_248", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cites three or more articles", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_250", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which articles cite two or fewer articles", "source": "article that at most two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_253", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has less than two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_258", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article has two other articles cited within it", "source": "article that two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_259", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author has written more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_260", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who authored two or fewer articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_270", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name an author of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_274", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of one or two articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_285", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that at least two article cites", "source": "article that at least two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_287", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name an author of at least two articles", "source": "person that is author of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_290", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cites a single article", "source": "article that less than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_297", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles cited by two other articles", "source": "article that two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_298", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what articles cites two other articles", "source": "article that at least two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_299", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue is about at least two articles", "source": "venue that is venue of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_305", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of only one article", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_310", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which author wrote two articles maximum", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_333", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article was cited twice", "source": "article that two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_338", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_371", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which venue was venue for more than two articles publication", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_374", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name someone who has written no more than two articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_377", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues of fewer than two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_380", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a venue with fewer than two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_383", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article cites less than two other articles", "source": "article that less than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_412", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_422", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which author wrote under two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_436", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_443", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who has written more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_444", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writers of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_448", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue that is mentioned in at least  two articles", "source": "venue that is venue of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_460", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article cites more than two other articles", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_461", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writers of two articles at most", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_472", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of only one article", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_484", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has two or more articles", "source": "venue that is venue of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_505", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles cited by fewer than two articles", "source": "article that less than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_507", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a person who has written no more than two articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_508", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article cited more than twice", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_511", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writer of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_522", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of two article", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_531", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that references one or two articles", "source": "article that at most two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_532", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article is cited at least twice", "source": "article that at least two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_537", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of one or two articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_547", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that cites at least two article", "source": "article that at least two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_558", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues that have published at least two articles", "source": "venue that is venue of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_559", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues of two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_561", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues of two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_577", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of maximum two articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_590", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writers of more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_598", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of at most two articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_599", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which articles cite more than two articles", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_617", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of two articles", "source": "person that is author of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_629", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that are cited by two articles", "source": "article that two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_632", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article cited by two articles", "source": "article that two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_3", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has fewer than two articles", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_9", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which venue is of less than two article", "source": "venue that is venue of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_26", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of at most two article", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_30", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name a venue of no more than two articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_40", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the venue that is mentioned in more than two articles", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_45", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles cited by two or more articles", "source": "article that at least two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_73", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who has authored fewer than two articiles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_81", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of only one article", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_93", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which author has published at least two articles", "source": "person that is author of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_97", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of lees than two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_107", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author who have written two or more articles", "source": "person that is author of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_114", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication that two articles are published in", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_121", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue is of more than two articles", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_133", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the venue of at least two articles", "source": "venue that is venue of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_140", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author has written more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_141", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article cited by less than two articles", "source": "article that less than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_144", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "writer of fewer than two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_150", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a venue of two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_155", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find an article published in 2004", "source": "article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_3", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles not published in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_20", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article wasnt published in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_56", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles that were not published in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_317", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published except in 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_train_446", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article does not have a publication date of 2004", "source": "article whose publication date is not 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string !=) (date 2004 -1 -1)))", "qid": "publications_test_82", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_339", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article that is published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_587", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_605", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article citing article published in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_1", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article is about multivariate data analysis", "source": "venue that is venue of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_17", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_21", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites multivariate data analysis", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_26", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publications where articles by efron can be found", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_95", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an article from the annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_97", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which article cites multivariate data analysis", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_124", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue of the efron article", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_127", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find an author of an article in annals of statistics", "source": "person that is author of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_144", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited by efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what articles were written by efron", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article whose venue is annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_175", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites an annals of statistics article", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_179", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited by articles published in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_183", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue that is venue of article whose author is efron", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an article from the annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_218", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which article cites multivariate data analysis", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_221", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited in articles by efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_229", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article did the article that cited multivariate data analysis cite", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_246", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited by articles in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_256", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue that is venue of article that cites multivariate data analysis", "source": "venue that is venue of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_292", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name the author whose article has its venue as annals of statistics", "source": "person that is author of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_330", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an article by efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_331", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "writers who cited multivariate data analysis", "source": "person that is author of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_345", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who is the other author for the article written by efron", "source": "person that is author of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_347", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article whose author is efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_354", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what author wrote an article that cities multivariate data analysis", "source": "person that is author of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_362", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find a venue of an article in annals of statistics", "source": "venue that is venue of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_367", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venues that have efrons article", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_368", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who is the author of whose venue is annals of statistics", "source": "person that is author of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_396", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what author wrote about annals of statistics", "source": "person that is author of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_414", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who has coauthored articles with efron", "source": "person that is author of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_418", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name articles in annals of statistics", "source": "venue that is venue of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_445", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publications with articles authored by efron", "source": "venue that is venue of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_466", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles written by efron cites", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_496", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publications that contains articles that are also published in annals of statistics", "source": "venue that is venue of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_524", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what articles are published in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_564", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find an additional author to an efron article", "source": "person that is author of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_570", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article is cited by an article in annals of statistics", "source": "article that article whose venue is annals of statistics cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_582", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what venues cite multivariate data analysis", "source": "venue that is venue of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_596", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "person that is author of article that cites multivariate data analysis", "source": "person that is author of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_602", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited by efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_628", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article is cited by an efron article", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publications containing articles that cite multivariate data analysis", "source": "venue that is venue of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_18", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article that cites multivariate data analysis", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an article about multivariate data analysis", "source": "article that article that cites multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_46", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which authors cite multivariate data analysis in their articles", "source": "person that is author of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_58", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "the article cites that the author is efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_70", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author of the article that cites multivariate data analysis", "source": "person that is author of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_76", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who is the author of an article citing multivariate data analysis", "source": "person that is author of article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an article by the author efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_101", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article cited by article written by efron", "source": "article that article whose author is efron cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_109", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "authors of articles published in annals of statistics", "source": "person that is author of article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_test_112", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what articles are written by efron", "source": "person that is author of article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article discusses another article that won an award", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_59", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what article cites an award winning article", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_100", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "any article that mentions award winning article", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_554", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles that cite awardwinning articles", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_19", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "awarded articles", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_36", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles that have won an award", "source": "article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)))", "qid": "publications_train_62", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "award winning article", "source": "article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)))", "qid": "publications_train_357", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what article won an award", "source": "article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)))", "qid": "publications_train_453", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "article that references the least number of articles", "source": "article that cites the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_23", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article cites the most number of other articles", "source": "article that cites the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_114", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles with fewest citations", "source": "article that cites the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_228", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cites the least number of article", "source": "article that cites the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_493", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article makes the most citations", "source": "article that cites the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_516", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that cite the most articles", "source": "article that cites the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_563", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article cites the fewest articles", "source": "article that cites the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_583", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article cites the fewest articles", "source": "article that cites the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_635", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cites the most number of article", "source": "article that cites the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_13", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that references the most number of articles", "source": "article that cites the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_83", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find the article with the fewest citations", "source": "article that cites the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_108", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article cites the most articles", "source": "article that cites the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (string cites) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_113", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "an article that won award cites another article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "award winning article publication venue", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "name an article that won an award", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_70", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "find a venue of an award winning article", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_80", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles cited by award winning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_82", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "name an article that won an award", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "find the author of an award winning article", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_126", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what person wrote articles than won an award", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what article was cited by the award winning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_265", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles cited by award winning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_420", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which article cites an awardwinning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_421", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "article cited by award winning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_447", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "authors of awardwinning articles", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_465", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles cited by awardwinning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_498", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "who is the author of the article who won an award", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_555", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "article citing awardwinning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_603", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what venue is about an article that won an award", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_75", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "venue that won an award based on the article", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_129", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles that have a publication date close to the date of multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_4", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "article whose publication date is smaller than publication date of multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published contemporaneous to or after the multivariate data analysis", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_30", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published before the date of multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article was written before the publication date of articles about multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_42", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published after multivariate data analysis", "source": "article whose publication date is larger than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_53", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "article whose publication date is at most publication date of multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_75", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article has a publication date greater than that of multivariate data analysis", "source": "article whose publication date is larger than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_99", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "article published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_133", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find an article published after multivariate data analysis", "source": "article whose publication date is larger than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_321", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published after multivariate data analysis", "source": "article whose publication date is larger than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_323", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "article that has the same publication date as the multivariate data analysis article", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_340", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_346", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published contemporaneous to or before the multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_427", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article was published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_488", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article has a publication date the same as the date of multivariate data analysis", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_538", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article was published on or after multivariate data analysis was", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_579", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find an article published on or before multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_607", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_test_29", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published on or after the publication date of multivariate data analysis", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_test_43", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published after multivariate data analysis", "source": "article whose publication date is larger than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_test_124", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which author has written the most articles", "source": "person that is author of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_12", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication with the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_37", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article cited the fewest times", "source": "article that the least number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_46", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "authors of multiple articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_52", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author wrote the least number of articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_67", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who has authored the least articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_72", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who wrote the most articles", "source": "person that is author of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_111", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues that have published the most articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_145", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author with the most number of articles", "source": "person that is author of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_148", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles cited by the most articles", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_158", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article is cited by the most number of articles", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_181", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article is mentioned in most number of articles", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_234", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article is mentioned in least number of other articles", "source": "article that the least number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_366", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article makes the fewest citations", "source": "article that the least number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_392", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who has written the fewest articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_423", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue is about the most number of articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_425", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cites the fewest articles", "source": "article that the least number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_458", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has the most articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_477", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article was cited the most", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_536", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues publishing the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_539", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "journal that publishes the fewest number of articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_549", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who wrote the most articles", "source": "person that is author of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_604", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_610", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue in most of the articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_611", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that the least number of article cites", "source": "article that the least number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_622", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article has the most number of articles cited", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_0", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author with the least number of articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_65", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author has written the most articles", "source": "person that is author of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_72", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication that has included the most articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_137", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "an article that cites multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author of article that cites multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_48", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue of article that multivariate data analysis cites", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_57", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author of article cited by multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_197", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name the author of an article about multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the venue of an article cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_335", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is an article cited in a publication about multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_391", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the venue of an article that cites multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_433", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "writer of articles cited by multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_440", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who wrote an article citing multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_463", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites an article cited in multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_491", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who wrote an article about city multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_517", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venues of articles cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_530", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "writers of articles citing multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_615", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publisher of article citing multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_10", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author citing multivariate data analysis in article", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_48", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venues of articles cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_66", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an author of an article about multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name a publication containing an article about multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_119", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venue of article that cites multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what venue contains the article about city multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_148", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who is the author of an article cited by multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "either annals of statistics or computational linguistics", "source": "annals of statistics or computational linguistics", "target": "(call listValue (call concat en.venue.annals_of_statistics en.venue.computational_linguistics))", "qid": "publications_train_483", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "list articles on annals of statistics or computational linguistics", "source": "annals of statistics or computational linguistics", "target": "(call listValue (call concat en.venue.annals_of_statistics en.venue.computational_linguistics))", "qid": "publications_test_131", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "article published in 2004 or 2010", "source": "article whose publication date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "publications_train_32", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "articles with their publication dates between 2004 and 2010", "source": "article whose publication date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "publications_train_208", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "find an article published in either 2004 or 2010", "source": "article whose publication date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "publications_train_237", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "what are some articles with publications dates between 2004 and 2010", "source": "article whose publication date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "publications_test_60", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "articles published in 2004 or 2010", "source": "article whose publication date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "publications_test_99", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "articles published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_45", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article was published in 2004 or later", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_61", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which article was published after 2004", "source": "article whose publication date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_131", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published in or after 2004", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_138", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article has a publication date greater than 2004", "source": "article whose publication date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_198", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article has a publication date of at least 2004", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_214", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published in or before 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_216", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "find an article published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_226", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published in or before 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_376", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "article whose publication date is at least 2004", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_390", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article was published after 2004", "source": "article whose publication date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_451", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article was published on or before 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_455", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published before 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_467", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles that were written before 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what article has a publication date earlier than 2004", "source": "article whose publication date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_592", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published in 2004 or before", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_train_619", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "articles published 2004 or more recent", "source": "article whose publication date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_test_84", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "article whose publication date is at most 2004", "source": "article whose publication date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "publications_test_87", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "who is the author of the article that cites multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_43", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles in annals of statistics cited in multivariate data analysis", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_54", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what annals of statistics article was cited by multivariate data analysis", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_160", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles citing multivariate data analysis written by efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_169", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_173", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are the articles that multivariate data analysis cites", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_192", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is an article in annals of statistics about multivariate data analysis", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by multivariate data analysis and written by efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_202", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article cited bymultivariate data analysis whose venue is annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article citing multivariate data analysis by efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_239", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis in the annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_283", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which efron article cites multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_293", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that citesmultivariate data analysis by author efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_361", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article written by efron that is cited by multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_426", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by multivariate data analysis and published in annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_482", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by multivariate data analysis and published in annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_506", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article exchanged citations with multivariate data analysis", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_525", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that cite multivariate data analysis and are cited in multivariate data analysis", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_527", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article about multivariate data analysis in the annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_63", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article by efron cites multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_test_89", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what efron article is cited in multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_test_139", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
