{"paraphrased": "name an article published in 2004 about multivariate data analysis", "source": "article whose publication date is 2004 and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_424", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "efron articles published in 2004", "source": "article whose publication date is 2004 and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string author) (string =) en.person.efron))", "qid": "publications_test_21", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article whose publication date is 2004 and whose author is efron", "source": "article whose publication date is 2004 and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string author) (string =) en.person.efron))", "qid": "publications_train_480", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an article published in 2004 in annals of statistics", "source": "article whose publication date is 2004 and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_79", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article from 2004 cites multivariate data analysis", "source": "article whose publication date is 2004 and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_2", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles published in 2004 citing multivariate data analysis", "source": "article whose publication date is 2004 and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_401", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article with publication date as 2004 and has the venue as annals of statistics", "source": "article whose publication date is 2004 and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_428", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles written by efron published in 2004", "source": "article whose publication date is 2004 and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string author) (string =) en.person.efron))", "qid": "publications_train_526", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article about annals and statistics has a publication ate of 2004", "source": "article whose publication date is 2004 and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_106", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article published in 2004 and that cites multivariate data analysis", "source": "article whose publication date is 2004 and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_130", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by award winning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_420", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "find a venue of an award winning article", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_80", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which article cites an awardwinning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_421", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "who is the author of the article who won an award", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_555", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "article cited by award winning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_447", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles cited by awardwinning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_498", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what article was cited by the award winning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_265", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "find the author of an award winning article", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_126", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "authors of awardwinning articles", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_465", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what venue is about an article that won an award", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_75", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "article with publication date as 2004 or 2010", "source": "2004 or 2010", "target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))", "qid": "publications_train_431", "anonymized_target": "(call listValue (call concat (date 2004 -1 -1) (date 2010 -1 -1)))"}
{"paraphrased": "articles that won awards cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_276", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "awardwinning articles cited in articles using multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_419", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "award winning article cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_325", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article cited by multivariate data analysis won an award", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_57", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what award winning article is cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_213", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "award winning articles cited by multivariate data analysis", "source": "article that won an award and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis whose venue is annals of statistics", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_597", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles authored by efron", "source": "article whose author is efron and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string author) (string =) en.person.efron))", "qid": "publications_train_311", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article was written by efron and cities multivariate data analysis", "source": "article that cites multivariate data analysis and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_474", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article written by efron cites multivariate data analysis", "source": "article whose author is efron and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_486", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles written by efron and published in the annals of statistics", "source": "article whose author is efron and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_225", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an article by efron", "source": "article whose author is efron and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string author) (string =) en.person.efron))", "qid": "publications_train_430", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article citing multivariate data analysis was in annals of statistics", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_33", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles about a citys annals of statistics", "source": "article that cites multivariate data analysis and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_54", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article did efron write whose venue is annals of statistics", "source": "article whose venue is annals of statistics and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string author) (string =) en.person.efron))", "qid": "publications_train_140", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article is about annals of statistics", "source": "article whose venue is annals of statistics and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_533", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "awarded articles", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_36", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what article discusses another article that won an award", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_59", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles that cite awardwinning articles", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_19", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what article cites an award winning article", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_100", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "any article that mentions award winning article", "source": "article that cites article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_554", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what venue is about the most number of articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_425", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue in most of the articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_611", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which author has written the most articles", "source": "person that is author of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string max) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_12", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication that has included the most articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_137", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication with the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_37", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles cited by the most articles", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_158", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what venue has the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_610", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues publishing the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_539", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article was cited the most", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_536", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "journal that publishes the fewest number of articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_549", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article published in 2004 that cites multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_601", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles that cite multivariate data analysis published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_566", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what articles are published in annals of statistics and in the year 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_263", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "which article was published in 2004 authored by efron", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_618", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles by efron published in 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_358", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "name an article about multivariate data analysis published in 2004", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_268", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published in 2004 that cite multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_11", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article published in 2004 cited multivariate data analysis", "source": "article that cites multivariate data analysis and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_test_68", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles published in annals of statistics in 2004", "source": "article whose venue is annals of statistics and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_585", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was written by efron and has a publication date of 2004", "source": "article whose author is efron and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_295", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "articles that do not appear in the same publications as multivariate data analysis", "source": "article whose venue is venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_42", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article that cites article that multivariate data analysis cites", "source": "article that cites article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_457", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites an article that cites multivariate data analysis", "source": "article that cites article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_78", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article publication of multivariate data analysis", "source": "article whose venue is venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_581", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article has the same venue as multivariate data analysis", "source": "article whose venue is venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_616", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an article about multivariate data analysis", "source": "article that cites article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_154", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article whose venue is venue that is venue of multivariate data analysis", "source": "article whose venue is venue that is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_415", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article by the same author of multivariate data analysis", "source": "article whose author is person that is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_360", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles written by the writer of multivariate data analysis", "source": "article whose author is person that is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_408", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles citing articles cited by multivariate data analysis", "source": "article that cites article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venues of articles cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_530", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venues of articles cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_66", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name the author of an article about multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what venue contains the article about city multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_148", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "name an author of an article about multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is an article cited in a publication about multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_391", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "writers of articles citing multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_615", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "an article that cites multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the venue of an article that cites multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_433", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the venue of an article cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_335", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "multivariate data analysis cited articles", "source": "article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_620", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article does not cite multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_600", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which articles author is efron", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that does not reference multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_580", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find an efron article", "source": "article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron))", "qid": "publications_train_394", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles not written by efron", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_523", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles that do not cite multivariate data analysis", "source": "article that not cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string !=) en.article.multivariate_data_analysis))", "qid": "publications_train_341", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some articles about annals of statistics", "source": "article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_test_95", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are some articles unrelated to annals of statistics", "source": "article whose venue is not annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string !=) en.venue.annals_of_statistics))", "qid": "publications_train_187", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find any article that efron didnt write", "source": "article whose author is not efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string !=) en.person.efron))", "qid": "publications_train_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the publication date of a multivariate data analysis article", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_355", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was multivariate data analysis published", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_614", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what journal is multivariate data analysis published in", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_381", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what venue consists of multivariate data analysis", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_416", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "where can you see multivariate data analysis", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_238", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the date of publication  for multivariate data analysis", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_342", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "publications of multivariate data analysis", "source": "venue of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string venue)))", "qid": "publications_train_204", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was multivariate data analysis published", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_44", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was multivariate data analysis published", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_147", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "publication date of multivariate data analysis", "source": "publication date of multivariate data analysis", "target": "(call listValue (call getProperty en.article.multivariate_data_analysis (string publication_date)))", "qid": "publications_train_255", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "article that cites multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_384", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "article published on date of multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_449", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "article with author of multivariate data analysis", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "an article whose also authored multivariate data analysis", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_88", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles published on the same day as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_test_28", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what article has a venue of multivariate data analysis", "source": "article whose venue is venue of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) (call getProperty en.article.multivariate_data_analysis (string venue))))", "qid": "publications_train_222", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles published on the same date as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_78", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "articles written by the multivariate data analysis writer", "source": "article whose author is author of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) (call getProperty en.article.multivariate_data_analysis (string author))))", "qid": "publications_train_242", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what article was published on the same date as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_231", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which article has a publication date the same as multivariate data analysis", "source": "article whose publication date is publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (call getProperty en.article.multivariate_data_analysis (string publication_date))))", "qid": "publications_train_379", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
