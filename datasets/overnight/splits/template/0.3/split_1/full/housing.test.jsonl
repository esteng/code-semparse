{"paraphrased": "which housing unit with an area of 800 square feet is available fora rent of 1500 dollars per month", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_257", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units with rent as 1500 dollars", "source": "housing unit whose monthly rent is 1500 dollars and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet housing units", "source": "housing unit whose size is 800 square feet and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_test_9", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot unit with rent of 1500 monthly", "source": "housing unit whose monthly rent is 1500 dollars and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which 1500monthly rentals are 800 square feet", "source": "housing unit whose monthly rent is 1500 dollars and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_272", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet housing units with 1500 dollars as rent", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_35", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing unit whose monthly rent is 1500 dollars", "source": "housing unit whose monthly rent is 1500 dollars and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_4", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit has an area of 800 square feet", "source": "housing unit whose size is 800 square feet and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_76", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is 1500month and 800 square feet", "source": "housing unit whose monthly rent is 1500 dollars and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_739", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot apartment with rent at 1500 a month", "source": "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_750", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing with a private room rents for 1500 dollar monthly", "source": "housing unit that has a private room and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_495", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "dogfriendly hosing that is 800 square feet", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_test_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me housing with 800 square feet of space where cats are acceptable", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_201", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot dogfriendly apartment", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_715", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find cat friendly housing units that charge 1500 dollars as rent", "source": "housing unit that allows cats and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_746", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what housing unit has a price of 1500 dollars and allows dogs", "source": "housing unit that allows dogs and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_test_38", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square foot apartment with a private bath", "source": "housing unit that has a private bath and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_682", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "apartment with a private bath for rent at 1500", "source": "housing unit that has a private bath and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_660", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square feet housing that allows dogs", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_604", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find 800 square feet sized housing units with a private room", "source": "housing unit that has a private room and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_532", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit resembles that of 123 sesame street", "source": "housing unit whose housing type is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call getProperty en.housing_unit.123_sesame_street (string housing_type))))", "qid": "housing_train_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "find housing units around the neighborhoods of 123 sesame street", "source": "housing unit whose neighborhood is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call getProperty en.housing_unit.123_sesame_street (string neighborhood))))", "qid": "housing_train_563", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing in the neighborhood of 123 sesame street", "source": "housing unit whose neighborhood is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call getProperty en.housing_unit.123_sesame_street (string neighborhood))))", "qid": "housing_train_371", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing unit with the same monthly rent as 123 sesame street", "source": "housing unit whose monthly rent is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call getProperty en.housing_unit.123_sesame_street (string rent))))", "qid": "housing_train_542", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "find housing units in the same housing type of 123 sesame street", "source": "housing unit whose housing type is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call getProperty en.housing_unit.123_sesame_street (string housing_type))))", "qid": "housing_train_308", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing unit sizes on 123 sesame street", "source": "housing unit whose size is size of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call getProperty en.housing_unit.123_sesame_street (string size))))", "qid": "housing_train_645", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which housing unit is posted on the posting date of 123 sesame street", "source": "housing unit whose posting date is posting date of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call getProperty en.housing_unit.123_sesame_street (string posting_date))))", "qid": "housing_train_491", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which housing unit has the monthly rent of 123 sesame street", "source": "housing unit whose monthly rent is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call getProperty en.housing_unit.123_sesame_street (string rent))))", "qid": "housing_train_519", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "housing posted the same day as 123 sesame street", "source": "housing unit whose posting date is posting date of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call getProperty en.housing_unit.123_sesame_street (string posting_date))))", "qid": "housing_train_727", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "apartments similar in size to 123 sesame street", "source": "housing unit whose size is size of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call getProperty en.housing_unit.123_sesame_street (string size))))", "qid": "housing_train_586", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "dogfriendly housing that is 800 square feet", "source": "housing unit whose size is 800 square feet and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_dogs)))", "qid": "housing_train_342", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing units with a private bath and a 1500 dollar monthly rent", "source": "housing unit whose monthly rent is 1500 dollars and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_bath)))", "qid": "housing_test_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "800 square foot housing unit with a private room", "source": "housing unit whose size is 800 square feet and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_room)))", "qid": "housing_train_203", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing that allows cats and is 1500 a month", "source": "housing unit whose monthly rent is 1500 dollars and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_cats)))", "qid": "housing_train_617", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "housing units that are 800 square feet and have private baths", "source": "housing unit whose size is 800 square feet and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_bath)))", "qid": "housing_train_526", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "800 square foot apartment that allows cats", "source": "housing unit whose size is 800 square feet and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_cats)))", "qid": "housing_train_404", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which housing unit with an area of 800 square feet has the facility of a private room", "source": "housing unit whose size is 800 square feet and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_room)))", "qid": "housing_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "apartment with a private room that rents for 1500 a month", "source": "housing unit whose monthly rent is 1500 dollars and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_room)))", "qid": "housing_train_26", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "find me a housing unti that chagres 1500 for rent and has a priiiiiiat bathroom", "source": "housing unit whose monthly rent is 1500 dollars and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_room)))", "qid": "housing_train_271", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "which housing unit has 1500 dollars as monthly rent and also has the facility of a private bath", "source": "housing unit whose monthly rent is 1500 dollars and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_bath)))", "qid": "housing_train_530", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me the same kind of housing as 123 sesame street", "source": "housing unit whose housing type is housing type that is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_test_71", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "housing unit in the neighborhood of 123 sesame street", "source": "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_test_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find housing similar to the house located at 123 sesame street", "source": "housing unit whose housing type is housing type that is housing type of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_train_224", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "housing in the same neighborhood at 123 sesame street", "source": "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_test_161", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which housing unit is in the area of 123 sesame street", "source": "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))", "qid": "housing_train_512", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "housing that is 800 square feet or less or 1000 square feet or less", "source": "housing unit whose size is at most 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string <=) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_688", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing that is at least 1500month or at least 2000month", "source": "housing unit whose monthly rent is at least 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string >=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_158", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "find housing units with rental charges between 1500 to 2000 dollars", "source": "housing unit whose monthly rent is at least 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string >=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_695", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing that is over 800 square feet or over 1000 square feet", "source": "housing unit whose size is larger than 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_327", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "find housing units with 1500 dollars to 2000 as rent", "source": "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_114", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "apartments between 800 and 1000 square feet", "source": "housing unit whose size is at least 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >=) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_test_156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which housing unit is available for a rent of 1500 pr 2000 dollars per month", "source": "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_test_139", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing that ranges between 800 and 1000 square feet", "source": "housing unit whose size is at most 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string <=) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_56", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which housing unit is bigger  in area by 800 square feet or 1000 square feet", "source": "housing unit whose size is larger than 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string size)) (string >) (call ensureNumericEntity (call concat (number 800 en.square_feet) (number 1000 en.square_feet)))))", "qid": "housing_train_312", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "housing that is 1500month or less or 2000month or less", "source": "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string rent)) (string <=) (call ensureNumericEntity (call concat (number 1500 en.dollar) (number 2000 en.dollar)))))", "qid": "housing_train_514", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which housing unit posted jan 2nd", "source": "housing unit whose posting date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_427", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "which housing unit was not posted on jan 2", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_618", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing not posted on january 2", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_525", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "apartments posted after january 2", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_test_169", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "find housings unit posted on other dates except for january 2nd", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_63", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "which housing posted on a date other than january 2nd", "source": "housing unit whose posting date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))", "qid": "housing_train_136", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "housing unit posted after january 2 or february 3", "source": "housing unit whose posting date is larger than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_597", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that was posted on january 2 or february 3", "source": "housing unit whose posting date is at least jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_34", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that was posted on february 3", "source": "housing unit whose posting date is at least jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing posted before january 2 or february 3", "source": "housing unit whose posting date is smaller than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_173", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing posted on or before january 2 or on or before february 3", "source": "housing unit whose posting date is at most jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_568", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "which housing unit is posted before jan 2", "source": "housing unit whose posting date is smaller than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_556", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that was posted after january 2 or february 3", "source": "housing unit whose posting date is larger than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_235", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing with posting dates before january 2nd and february 3rd", "source": "housing unit whose posting date is smaller than jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "find housing units with posting date between january 2nd and february 3rd", "source": "housing unit whose posting date is at most jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_426", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "housing that was posted after january 2 or after february 3", "source": "housing unit whose posting date is at least jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))", "qid": "housing_train_296", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 2 3)))))"}
{"paraphrased": "find housing units of the type apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_test_142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me apartments and condos", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_409", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "aparartment or condo units", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_634", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit is in the area of midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartments in the midtown west or chelsea neighborhoods", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_54", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "looking for housing that is either an apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me housing in midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_364", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find housing units in the neighborhoods of midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_test_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find housing with rental charges between 1500 and 2000 dollars", "source": "housing unit whose monthly rent is 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call concat (number 1500 en.dollar) (number 2000 en.dollar))))", "qid": "housing_train_418", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "housing unit with size of either 800 or 1000 square feet", "source": "housing unit whose size is 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call concat (number 800 en.square_feet) (number 1000 en.square_feet))))", "qid": "housing_train_233", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "housing unit that costs 1500 or 200 dollars in rent", "source": "housing unit whose monthly rent is 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call concat (number 1500 en.dollar) (number 2000 en.dollar))))", "qid": "housing_test_92", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "housing unit that is 800 or 1000 square feet", "source": "housing unit whose size is 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call concat (number 800 en.square_feet) (number 1000 en.square_feet))))", "qid": "housing_train_69", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "housing that is 1500month or 2000month", "source": "housing unit whose monthly rent is 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call concat (number 1500 en.dollar) (number 2000 en.dollar))))", "qid": "housing_train_434", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "apartment with rent between 1500 and 2000", "source": "housing unit whose monthly rent is 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call concat (number 1500 en.dollar) (number 2000 en.dollar))))", "qid": "housing_train_665", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "which housing unit has  an area of 800 or 1000 square feet", "source": "housing unit whose size is 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call concat (number 800 en.square_feet) (number 1000 en.square_feet))))", "qid": "housing_train_751", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "find housing between 800 and 1000 square feet", "source": "housing unit whose size is 800 square feet or 1000 square feet", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string size) (string =) (call concat (number 800 en.square_feet) (number 1000 en.square_feet))))", "qid": "housing_train_484", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "unit with rent between 15002000 dollars", "source": "housing unit whose monthly rent is 1500 dollars or 2000 dollars", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string rent) (string =) (call concat (number 1500 en.dollar) (number 2000 en.dollar))))", "qid": "housing_train_672", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "find apartments posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_251", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in midtown west that posted on january 2", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_124", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit in west midtown posted on january 2", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an apartment that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_318", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_187", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in midtown west that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_87", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit posted on jan 2 is in midtown west", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_167", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units with a posting date of january 2nd that are located in midtown west", "source": "housing unit whose posting date is jan 2 and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment housing that was posted on january 2", "source": "housing unit whose posting date is jan 2 and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_502", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units far from midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_304", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that is not an apartment", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_328", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing units are in midtown west", "source": "housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_149", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find all units available midtown east", "source": "housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_539", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units that are apartments", "source": "housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are the  units that  do  not belong to the area around midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_166", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me housing units that arent apartments", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_496", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "exclude apartments from midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_741", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units that is not an apartment", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_58", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing not in midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_335", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments in midtown west", "source": "housing unit whose neighborhood is midtown west and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_test_60", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "looking for apartments", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_260", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit has houses of apartment kind", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_30", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find apartments in the neighborhoods of midtown west", "source": "housing unit whose neighborhood is midtown west and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_730", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all apartments in midtown west", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_734", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units in the midtown west area", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_52", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment in midtown west", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_141", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit is available in the area around mid town west", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_361", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments in the midtown west neighborhood", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_738", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments in the midtown west neighborhood", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_474", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of housing is 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_365", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhoods in 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is 900 mission ave and 123 sesame street", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_681", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_90", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing types like 123 sesame street or 900 mission avenue", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_130", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing unit that is the same as the ones on 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing in the neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street and 900 mission avenue", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_624", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit resembles 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_398", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me apartments with a private room", "source": "housing unit whose housing type is apartment and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_room)))", "qid": "housing_train_693", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "apartments that allow dogs", "source": "housing unit whose housing type is apartment and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string allows_dogs)))", "qid": "housing_train_95", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "show me housing in midtown west where dogs are welcome", "source": "housing unit whose neighborhood is midtown west and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string allows_dogs)))", "qid": "housing_train_477", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing unit with a private room in midtown west", "source": "housing unit whose neighborhood is midtown west and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_room)))", "qid": "housing_train_449", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing unit which is an apartment housing type with a private room", "source": "housing unit whose housing type is apartment and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_room)))", "qid": "housing_train_569", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing unit in midtown west and allows dogs", "source": "housing unit whose neighborhood is midtown west and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string allows_dogs)))", "qid": "housing_train_256", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "private bath in midtown west", "source": "housing unit whose neighborhood is midtown west and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_bath)))", "qid": "housing_test_185", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "apartment with a private bathroom", "source": "housing unit whose housing type is apartment and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_bath)))", "qid": "housing_train_218", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing units that allow cats in midtown west", "source": "housing unit whose neighborhood is midtown west and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string allows_cats)))", "qid": "housing_train_557", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "housing apartments with a private bath", "source": "housing unit whose housing type is apartment and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_bath)))", "qid": "housing_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
