{"paraphrased": "restaurant that takes credit cards and that has takeout", "source": "restaurant that takes credit cards and that has take-out", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string takeout)))", "qid": "restaurants_train_755", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurant takes reservations and accepts credit cards", "source": "restaurant that takes credit cards and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string reserve)))", "qid": "restaurants_test_81", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurant that has outdoor seating and that takes reservations", "source": "restaurant that has outdoor seating and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string outdoor)) (string reserve)))", "qid": "restaurants_test_1", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants that take credit cards and reservations", "source": "restaurant that takes credit cards and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string reserve)))", "qid": "restaurants_train_305", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurant has delivery", "source": "restaurant that has delivery and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string delivery)) (string delivery)))", "qid": "restaurants_train_1144", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants for groups with delivery", "source": "restaurant that is good for groups and that has delivery", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string groups)) (string delivery)))", "qid": "restaurants_train_706", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which restaurants accept reservations", "source": "restaurant that takes reservations and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string reserve)) (string reserve)))", "qid": "restaurants_train_291", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find restaurant with waiter service that takes credit cards", "source": "restaurant that takes credit cards and that has waiter service", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string waiter)))", "qid": "restaurants_train_118", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what restaurant takes credit cards and is kid friendly", "source": "restaurant that takes credit cards and that is good for kids", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string credit)) (string kids)))", "qid": "restaurants_train_46", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which resturants with takeout take reservations", "source": "restaurant that has take-out and that takes reservations", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string takeout)) (string reserve)))", "qid": "restaurants_test_245", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "restaurants with similar food to thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1287", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "cuisine that is like thai cafe or pizzeria juno", "source": "cuisine that is cuisine of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_20", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "restaurants in the same neighborhood as thai cafe", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_264", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "thai cafe thats erves pizzeria", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1008", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what is the neighborhood of thai cafe or pizzeria juno", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1301", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "the neighborhood that thai cafe or pizzeria juno is in", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_test_177", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what is a meal that the thai cafe or pizzeria juno serves", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_512", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind fo meals do thai cafe and pizzeria juno serve", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what meal can you get at either the thai cafe or at pizzeria juno", "source": "meal that thai cafe or pizzeria juno serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_531", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what neighborhood is thai cafe or pizzeria juno in", "source": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "qid": "restaurants_train_1059", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "5 stars or 3 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_train_223", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "what restaurants have at least 30 or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_177", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "has a 2 or 3 dollar sign rating", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_train_674", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 35 stars", "source": "3 stars or 5 stars", "target": "(call listValue (call concat (number 3 en.star) (number 5 en.star)))", "qid": "restaurants_test_314", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with between 30 and 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_1124", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "30 reviews or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_332", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "list all restaurants that have a price rating of 2 dollar signs or 3 star dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_36", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants rated 2 or 3 dollar signs", "source": "2 dollar signs or 3 dollar signs", "target": "(call listValue (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "qid": "restaurants_test_171", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants that have between 30 and 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_976", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurants with at least 30 or 40 reviews", "source": "30 reviews or 40 reviews", "target": "(call listValue (call concat (number 30 en.review) (number 40 en.review)))", "qid": "restaurants_train_509", "anonymized_target": "(call listValue (call concat (ANON_NUMBER) (ANON_NUMBER)))"}
{"paraphrased": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_1082", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that have at least 3 star or 5 star ratings", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_704", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant with 5 stars or 3 stars rating", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_test_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants with star ratings of 3 or 5", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_1296", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "which restaurants are rated 3 or 5 stars", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_1021", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "hotel which has a price rating of 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_369", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant whose star rating is 3 stars or 5 stars", "source": "restaurant whose star rating is 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string star_rating) (string =) (call concat (number 3 en.star) (number 5 en.star))))", "qid": "restaurants_train_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants in the 2 or 3 dollar sign price range", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurant with a 2 or 3 dollar price rating", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_894", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 2 or 3 price rating", "source": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string price_rating) (string =) (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "qid": "restaurants_train_874", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "hotel that serves the minimum number of meals", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_61", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant has the smallest menu", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_281", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which restaurants serve the least number of meals", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_552", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a restaurant with alot of meals", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_660", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what restaurant has the largest menu", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_311", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants with the most options", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1028", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which resturants serve the least number of meals", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_119", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants that are better for takeout", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_train_1253", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurant that serves the least number of meal", "source": "restaurant that serves the least number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string min) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_145", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which hotel offers the most number of meals", "source": "restaurant that serves the most number of meal", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.restaurant) (string !type)) (string max) (string meals) (call getProperty (call singleton en.food) (string !type))))", "qid": "restaurants_test_14", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which resturants have a price rating of at most two or three dollar signs", "source": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_849", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "hotels that have a higher rating than 3 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_test_5", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurants with price ratings between 2 and 3", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_1133", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is larger than 3 stars or 5 stars", "source": "restaurant whose star rating is larger than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string >) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_107", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what restaurant has less than 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_556", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "which restaurants have a price rating of 2 to3 dollar signs", "source": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_409", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is smaller than 3 stars or 5 stars", "source": "restaurant whose star rating is smaller than 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1204", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose star rating is at most 3 stars or 5 stars", "source": "restaurant whose star rating is at most 3 stars or 5 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (call concat (number 3 en.star) (number 5 en.star)))))", "qid": "restaurants_train_1173", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "hotel which has a price rating of more than 2dollar or 3 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_train_886", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "source": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (call concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "qid": "restaurants_test_37", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what cuisine type is most common", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_315", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meal that the least number of restaurant serves", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_1080", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the least amount of restaurants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_432", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal is served in the most restaurants", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_643", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the least served meal at restaurants", "source": "meal that the least number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string min) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_243", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the least number of restaurants", "source": "neighborhood that is neighborhood of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_525", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the cuisine of the most restaurants", "source": "cuisine that is cuisine of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string max) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_729", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "cuisine that is cuisine of the least number of restaurant", "source": "cuisine that is cuisine of the least number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.cuisine) (string !type)) (string min) (call reverse (string cuisine)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_131", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what same meals do all the other restaurants serve", "source": "meal that the most number of restaurant serves", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.food) (string !type)) (string max) (call reverse (string meals)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_train_602", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which neighborhood has the most restaurants", "source": "neighborhood that is neighborhood of the most number of restaurant", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.restaurant) (string !type))))", "qid": "restaurants_test_66", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "restaurants with dollar ratings less than 2", "source": "restaurant whose price rating is smaller than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_1121", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "list all restaurants that are more expensive than 2 dollar signs", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_139", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurant which had a maximum of 2dollar sign price rating", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_test_217", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with at least 3 stars rating", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_736", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 2 stars or less", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_571", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants with 3 and higher price rating", "source": "restaurant whose price rating is larger than 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_837", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants at least with a 2 dollar price rating", "source": "restaurant whose price rating is at least 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string >=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_691", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "restaurants price rated 2 dollar signs or less", "source": "restaurant whose price rating is at most 2 dollar signs", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string price_rating)) (string <=) (call ensureNumericEntity (number 2 en.dollar_sign))))", "qid": "restaurants_train_105", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "find a 3 or fewer star restaurant", "source": "restaurant whose star rating is at most 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <=) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_train_717", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "find a restaurant with less than 3 stars", "source": "restaurant whose star rating is smaller than 3 stars", "target": "(call listValue (call filter (call getProperty (call singleton en.restaurant) (string !type)) (call ensureNumericProperty (string star_rating)) (string <) (call ensureNumericEntity (number 3 en.star))))", "qid": "restaurants_test_247", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "a neighborhood similar to thai cafes", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_657", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what cuisine does the thai cafe have", "source": "cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1228", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what places serve food that is not thai", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_614", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of meals does thai cafe serve", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_544", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a neighborhood that doesnt have a thai cafe", "source": "neighborhood that is not neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_test_248", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what cuisine does the thai cafe not have", "source": "cuisine that is not cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "qid": "restaurants_train_342", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood that is neighborhood of thai cafe", "source": "neighborhood that is neighborhood of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1156", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal served by the thai cafe", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_228", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all restaurants that are similar to thai cafe", "source": "cuisine that is cuisine of thai cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meal can you get at the thai cafe", "source": "meal that thai cafe serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_1111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which cuisines match that of the thai cafe", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_94", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal served at the thai cafe", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_450", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a thai cafe in the neighborhood", "source": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_960", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_218", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "source": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_429", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals does thai cafe serve", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_617", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what type of dishes does the thai cafe offer", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_212", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "in which neighborhood is thai cafe", "source": "neighborhood that is neighborhood of thai cafe and that is neighborhood of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe) (call reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_train_777", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals do the thai cafe serve", "source": "meal that thai cafe serves and that thai cafe serves", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) en.restaurant.thai_cafe) (call reverse (string meals)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of cuisine is thai cafe", "source": "cuisine that is cuisine of thai cafe and that is cuisine of thai cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe) (call reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "qid": "restaurants_test_15", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what kind of cuisine is found at the restaurants that serve lunch", "source": "cuisine that is cuisine of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_742", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what neighborhood contains restaurants that offer lunch", "source": "neighborhood that is neighborhood of restaurant that serves lunch", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_888", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "thai restaurant cuisine", "source": "meal that restaurant whose cuisine is thai serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_1106", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meals do lunch serving restaurants serve", "source": "meal that restaurant that serves lunch serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "qid": "restaurants_train_1086", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what are the types of cuisine available in the midtown west neighborhood", "source": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.cuisine) (string !type)) (call reverse (string cuisine)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which neighborhoods have thai restaurants", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_367", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants that are in midtown west", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_1137", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which is the thai restaurant in this neighbourhood", "source": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "qid": "restaurants_train_834", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal does the midtown west restaurant serve", "source": "meal that restaurant whose neighborhood is midtown west serves", "target": "(call listValue (call filter (call getProperty (call singleton en.food) (string !type)) (call reverse (string meals)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_217", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "restaurants that are in the neighborhood of midtown west", "source": "neighborhood that is neighborhood of restaurant whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "restaurants_train_1181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
