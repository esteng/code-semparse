{"paraphrased": "where are the meetings ending at 10am going to be held", "source": "location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_train_336", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "who is attending the 10 am meeting", "source": "person that is attendee of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_417", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "location is same as location of meeting ends at 10 am", "source": "location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_train_578", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what location is the meeting that ends at 10am", "source": "location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_train_284", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "location of meetings that start at 10am", "source": "location that is location of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_test_163", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "what person is attending a meeting that ends at 10am", "source": "person that is attendee of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_test_129", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "person who attends the meeting that ends at 10 am", "source": "person that is attendee of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_train_256", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "who is attending the 10sm meeting", "source": "person that is attendee of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_test_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "locations of meetings that end at 10am", "source": "location that is location of meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))", "qid": "calendar_test_87", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "show me all attendees of meetings beginning at 10 am", "source": "person that is attendee of meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))", "qid": "calendar_train_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "where is the threehour long meeting", "source": "location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_627", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what location is the three hour meeting", "source": "location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_test_50", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "person attending three hour meeting", "source": "person that is attendee of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_537", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "who is attending the three hour meeting", "source": "person that is attendee of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_test_92", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "show me the locations of all meetings three hours in length", "source": "location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_640", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "locations of meetings that are three hours long", "source": "location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_521", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "location is same as the location of three hours long meeting", "source": "location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "people that attend three hour long meetings", "source": "person that is attendee of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_358", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "show me all attendees of meetings three hours long", "source": "person that is attendee of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_107", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "show me who is attending three hour meetings", "source": "person that is attendee of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))", "qid": "calendar_train_135", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "meetings on january 2 that end at 10am", "source": "meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_99", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings on january 2nd ending at 10 am", "source": "meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_209", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting on jan 2 which ends at 10 am", "source": "meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_test_95", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show all meetings that end at 10am on jan 2", "source": "meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_621", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting is on jan 2 at 10am", "source": "meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_489", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting which starts at 10 am on jan 2", "source": "meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_453", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me the meeting that starts at 10 am on january 2", "source": "meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_239", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings on january 2nd beginning at 10 am", "source": "meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_222", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "create a meeting for jan 2nd until 10am", "source": "meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_test_103", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what is the location of the jan 2 meeting", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_458", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "location is same as the location of meeting on jan 2", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_test_63", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "which people are attending meetings on january 2", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_test_33", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "person attending jan 2nd meeting", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_27", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me the locations of all meetings on january 2", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_106", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me all attendees of meetings on january 2nd", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_32", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "show me the attendees for all meetings on jan 2", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "locations that house meetings on january 2", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "where is my jan 2 meeting", "source": "location that is location of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_597", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "who is attending the meeting on jan 2", "source": "person that is attendee of meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))", "qid": "calendar_train_405", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what meeting ends at 10am on january second", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_126", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting starts at 10am on jan 2", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_459", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that end at 10am on jan 2", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_615", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings on january 2nd which end at 10 am", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_195", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meeting on january 2nd at 10am", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_129", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me any meetings on january 2 beginning at 10 am", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_404", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that start at 10am on jan 2", "source": "meeting whose start time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_421", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting has an end time of 10am on jan2", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_470", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meetings on january 2 end at 10am", "source": "meeting whose end time is 10am and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_162", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings ending at 10 am that are three hours long", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_243", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings three hours long which end at 10 am", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_520", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all three hour meetings that begin at 10am", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_test_9", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me meetings that take 3 hours and start at 10am", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_test_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings lasting three hours beginning at 10 am", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_73", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting that starts at 10am and ends at 1pm", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_554", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all three hour meetings that end at 10am", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_371", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting starts at 700 am and ends at 000 am", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_415", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting is not on jan 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_353", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me meetings for jan 2", "source": "meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_580", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings that are not on january 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_471", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me meetings not on jan 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_192", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show the meeting on jan 2", "source": "meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_636", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings happening on days other than january 2nd", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_666", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that fall before or after jan 2", "source": "meeting whose date is not jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))", "qid": "calendar_train_659", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meetings on january 2", "source": "meeting whose date is jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_646", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me any meetings that are either the weekly standup or annual review", "source": "weekly standup or annual review", "target": "(call listValue (call concat en.meeting.weekly_standup en.meeting.annual_review))", "qid": "calendar_train_279", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "when is weekly standup or annual review", "source": "weekly standup or annual review", "target": "(call listValue (call concat en.meeting.weekly_standup en.meeting.annual_review))", "qid": "calendar_train_588", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me all meetings happening at greenberg cafe or central office", "source": "greenberg cafe or central office", "target": "(call listValue (call concat en.location.greenberg_cafe en.location.central_office))", "qid": "calendar_test_90", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me any meetings that alice or bob have attended", "source": "alice or bob", "target": "(call listValue (call concat en.person.alice en.person.bob))", "qid": "calendar_train_609", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "location is greenberg cafe or central office", "source": "greenberg cafe or central office", "target": "(call listValue (call concat en.location.greenberg_cafe en.location.central_office))", "qid": "calendar_train_509", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me all meetings that are either weekly standup or annual review", "source": "weekly standup or annual review", "target": "(call listValue (call concat en.meeting.weekly_standup en.meeting.annual_review))", "qid": "calendar_train_352", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me all meetings alice has attended marked as important", "source": "meeting whose attendee is alice and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)))", "qid": "calendar_test_111", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "show me all important meetings that alice is attending", "source": "meeting whose attendee is alice and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)))", "qid": "calendar_train_524", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "important meeting alice is attending", "source": "meeting whose attendee is alice and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)))", "qid": "calendar_train_400", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what important meeting is located at greenberg cafe", "source": "meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)))", "qid": "calendar_train_174", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what important meetings are attended by alice", "source": "meeting whose attendee is alice and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)))", "qid": "calendar_train_163", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "show me important meetings at greenberg cafe", "source": "meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)))", "qid": "calendar_test_57", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what important meeting is alice attending", "source": "meeting whose attendee is alice and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)))", "qid": "calendar_train_367", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "which meetings are scheduled to end at 10am", "source": "meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_456", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting which starts at 10 am", "source": "meeting whose start time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_33", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings not beginning at 10 am", "source": "meeting whose start time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string !=) (time 10 0)))", "qid": "calendar_train_19", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting that does not end at 10am", "source": "meeting whose end time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string !=) (time 10 0)))", "qid": "calendar_train_529", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "which meetings dont start at 10am", "source": "meeting whose start time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string !=) (time 10 0)))", "qid": "calendar_train_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meetings that do not end at 10am", "source": "meeting whose end time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string !=) (time 10 0)))", "qid": "calendar_train_125", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meetings that do not start at 10am", "source": "meeting whose start time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string !=) (time 10 0)))", "qid": "calendar_train_375", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meetings that end at 10am", "source": "meeting whose end time is 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting does not start at 10am", "source": "meeting whose start time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string !=) (time 10 0)))", "qid": "calendar_train_212", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting does not start at 10am", "source": "meeting whose start time is not 10am", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string !=) (time 10 0)))", "qid": "calendar_train_619", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what are the areas where two or more meetings take place", "source": "location that is location of at least two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >=) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_658", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "people that attend at least two meetings", "source": "person that is attendee of at least two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string >=) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_510", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me all people who have attended more than two meetings", "source": "person that is attendee of more than two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_176", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what person is an attendee of at least two meetings", "source": "person that is attendee of at least two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string >=) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_258", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who are the people attending at least two different meetings", "source": "person that is attendee of at least two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string >=) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_test_139", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me all locations which have had at least two meetings", "source": "location that is location of at least two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >=) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_21", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which people will attend two or more meetings", "source": "person that is attendee of more than two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_647", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me all locations that are used for more than two meetings", "source": "location that is location of more than two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_633", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what location has more than two meetings", "source": "location that is location of more than two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_178", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "people that attend more than two meetings", "source": "person that is attendee of more than two meeting", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type))))", "qid": "calendar_train_389", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "important meetings that are three hours long", "source": "meeting whose length is three hours and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)))", "qid": "calendar_train_283", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what important meeting has a length of three hours", "source": "meeting whose length is three hours and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)))", "qid": "calendar_train_313", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings three hours long which are marked as important", "source": "meeting whose length is three hours and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)))", "qid": "calendar_train_269", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me all three hour meetings that are important", "source": "meeting whose length is three hours and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)))", "qid": "calendar_train_583", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "three hours long important meeting", "source": "meeting whose length is three hours and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)))", "qid": "calendar_train_197", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "where is the weekly standup", "source": "location that is location of weekly standup and that is location of weekly standup", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup) (call reverse (string location)) (string =) en.meeting.weekly_standup))", "qid": "calendar_train_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what person attended weekly standup", "source": "person that is attendee of weekly standup and that is attendee of weekly standup", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))", "qid": "calendar_train_469", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the person attending the weekly stand up meeting", "source": "person that is attendee of weekly standup and that is attendee of weekly standup", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))", "qid": "calendar_train_155", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what person is attending weekly standup", "source": "person that is attendee of weekly standup and that is attendee of weekly standup", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))", "qid": "calendar_train_362", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the location of weekly startup", "source": "location that is location of weekly standup and that is location of weekly standup", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup) (call reverse (string location)) (string =) en.meeting.weekly_standup))", "qid": "calendar_train_364", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings that are three hours long or less", "source": "meeting whose length is at most three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_346", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meetings that are shorter than three hours", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_220", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meetings are scheduled to run for 3 hours", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_550", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meeting is at least 3 hours long", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_482", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting is at least three hours", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_476", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings scheduled to run for 3 hours", "source": "meeting whose length is at most three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_381", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting has a length smaller than three hours", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_test_73", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meetings that are three hours or longer", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_207", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meeting that has duration of lesser than three hour", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_test_2", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings shorter than three hours", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_467", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting ends at 10am in which alice is attending", "source": "meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_311", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show meetings that start at 10am in greenberg cafe", "source": "meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all metings in greenberg cafe that end at 10am", "source": "meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_219", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings alice has attended which begin at 10 am", "source": "meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_241", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings at greenberg cafe that end a 10am", "source": "meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_180", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me the meeting alice will attend which ends at 10am", "source": "meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_230", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meeting which starts at 1000 am at greenberg cafe", "source": "meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_512", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all 10am meetings that alice is attending", "source": "meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_296", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting has a start time at 10am at greenberg cafe", "source": "meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_337", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me meetings ending at 10am in greenberg cafe", "source": "meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_576", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings on january 2 that alice attends", "source": "meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_454", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "jan 2nd meeting with alice as attendee", "source": "meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_600", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting has a date of jan 2 and has alice attending", "source": "meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_427", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me any meetings alice has attended on january 2nd", "source": "meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_159", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings in greenberg cafe on jan 2", "source": "meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_36", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me meetings on jan 2 in greenberg cafe", "source": "meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_374", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which january 2nd meetings is alice attenting", "source": "meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice))", "qid": "calendar_test_51", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting has a date of jan 2 at greenberg cafe", "source": "meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_538", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings on january 2nd at the greenberg cafe", "source": "meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_540", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which person is attending an important meeting", "source": "person that is attendee of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_359", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "locations of important meetings", "source": "location that is location of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_187", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the location of the important meeting", "source": "location that is location of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_566", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "person who attends important meeting", "source": "person that is attendee of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_490", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "where is the important meeting being held", "source": "location that is location of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_477", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "show me locations of all meetings which are marked as important", "source": "location that is location of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_132", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "people that attend important meetings", "source": "person that is attendee of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_test_99", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "show me all attendees of meetings marked important", "source": "person that is attendee of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_226", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the location of the important meeting", "source": "location that is location of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_288", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "who will be attending important meetings", "source": "person that is attendee of meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important))))", "qid": "calendar_train_224", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what person is attending the meeting at greenberg cafe", "source": "person that is attendee of meeting whose location is greenberg cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe)))", "qid": "calendar_train_384", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who are the attendees for fo the meetings in greenberg cafe", "source": "person that is attendee of meeting whose location is greenberg cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe)))", "qid": "calendar_train_641", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me everyone who attended meetings also attended by alice", "source": "person that is attendee of meeting whose attendee is alice", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))", "qid": "calendar_train_154", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me meeting locations with alice", "source": "location that is location of meeting whose attendee is alice", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))", "qid": "calendar_train_582", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who is attending the same meeting as alice", "source": "person that is attendee of meeting whose attendee is alice", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))", "qid": "calendar_train_589", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "people attending meetings that alice attends", "source": "person that is attendee of meeting whose attendee is alice", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))", "qid": "calendar_train_152", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who is attending the greenberg cafe for the meeting", "source": "person that is attendee of meeting whose location is greenberg cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe)))", "qid": "calendar_train_414", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the location of the meeting that alice is attending", "source": "location that is location of meeting whose attendee is alice", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))", "qid": "calendar_train_259", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me all attendees of meetings at the greenberg cafe", "source": "person that is attendee of meeting whose location is greenberg cafe", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe)))", "qid": "calendar_train_297", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me the location of all meetings attended by alice", "source": "location that is location of meeting whose attendee is alice", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))", "qid": "calendar_train_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
