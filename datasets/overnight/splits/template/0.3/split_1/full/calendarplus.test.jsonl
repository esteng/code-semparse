{"paraphrased": "where was the meeting that was before jan 2 held", "source": "location of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string location)))", "qid": "calendarplus_train_50", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "what was the length of a meeting after jan 3rd", "source": "length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length)))", "qid": "calendarplus_train_359", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting after jan 3", "source": "date of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string date)))", "qid": "calendarplus_test_116", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "how long did the meeting on or before jan 3 last", "source": "length of meeting whose date is at most jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length)))", "qid": "calendarplus_train_336", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "show me the end time of meetings that are on january 2nd or 3rd", "source": "end time of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string end_time)))", "qid": "calendarplus_test_2", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that was after jan 3", "source": "length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length)))", "qid": "calendarplus_test_30", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING)))"}
{"paraphrased": "what is the average length of all meetings which last one hour or three hours", "source": "average length of meeting whose length is three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length))))", "qid": "calendarplus_train_320", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of all the three hour and one hour meetings", "source": "average length of meeting whose length is three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))) (string length))))", "qid": "calendarplus_test_15", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))) (ANON_STRING))))"}
{"paraphrased": "what meeting started at the same time as the meeting that was over three hours", "source": "meeting whose start time is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_363", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what meeting was in the same place as the meeting that was over three hours", "source": "meeting whose location is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_93", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "show me meetings whose length is more than three hours", "source": "meeting whose length is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_271", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what meeting had someone who went to an over three hour meeting attend", "source": "meeting whose attendee is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_test_26", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what is the total length of important meetings alice has attended", "source": "total length of meeting that is important and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_268", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long is the important meeting at greenberg cafe", "source": "total length of meeting that is important and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_180", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meeting s duration is greater than 3 hoursjan2 or jan 3", "source": "jan 2 or jan 3 whose length is larger than three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_429", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that lasted more than 3 hours", "source": "jan 2 or jan 3 whose length is at most three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_13", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "how many meetings had the same attendees as weekly standup", "source": "number of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))))", "qid": "calendarplus_train_170", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))))"}
{"paraphrased": "how many meetings were after jan 3", "source": "number of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_test_135", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "show me the number of meetings that are before january 3rd", "source": "number of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_train_87", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "how many meetings do i have before january 2", "source": "number of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_train_169", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "what meeting was in the same place as weekly standup", "source": "meeting whose location is location that is location of weekly standup and that is location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) en.meeting.weekly_standup) (call reverse (string location)) (string =) en.meeting.weekly_standup)))", "qid": "calendarplus_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the duration of the meeting that ends at 10 am ", "source": "total length of meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_300", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "how long was the average meeting that had people from weekly standup attend", "source": "average length of meeting whose attendee is person that is attendee of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup)) (string length))))", "qid": "calendarplus_train_143", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)) (ANON_STRING))))"}
{"paraphrased": "which is the meeting that ends at 10 am  and does not begin at 10 am", "source": "meeting whose end time is 10am whose start time is not 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string !=) (time 10 0)))", "qid": "calendarplus_train_331", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting ended at 10am and didnt start at 10am", "source": "meeting whose end time is 10am whose start time is not 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string !=) (time 10 0)))", "qid": "calendarplus_train_247", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me any meetings with an end time of 10am", "source": "meeting whose end time is 10am whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_441", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "number of meeting which ends at 10am with alice as attendee", "source": "number of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice)))", "qid": "calendarplus_test_101", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the length of the important meeting on january 2nd", "source": "average length of meeting whose date is jan 2 and that is important", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string length))))", "qid": "calendarplus_train_113", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long is the average important meeting on jan 2", "source": "average length of meeting whose date is jan 2 and that is important", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string length))))", "qid": "calendarplus_train_232", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "total length of meeting on jan 2 with alice as attendee", "source": "total length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_test_82", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "average length of meeting on jan 2 at greenberg cafe", "source": "average length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_188", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting on january 2nd at the greenberg cafe", "source": "total length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_265", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the average length of a meeting on january 2 that alice attended", "source": "average length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_256", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting at the greenberg cafe on jan 2", "source": "average length of meeting whose date is jan 2 and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_test_3", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me all meetings on january 2nd where alice is attending", "source": "total length of meeting whose date is jan 2 and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_test_64", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long is the meeting that either alice or bob went to", "source": "total length of meeting whose attendee is alice or bob", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call concat en.person.alice en.person.bob)) (string length))))", "qid": "calendarplus_train_352", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended before 3pm", "source": "total length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_146", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "whats the average length of my meetings at 10am or 3pm", "source": "average length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_456", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings which ended on or after 10 am", "source": "average length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_351", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings that start between 10am and 3pm", "source": "average length of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_127", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings which start before 3pm", "source": "average length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_90", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended at or after 10am", "source": "total length of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_195", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "how long is the meeting that started before 3pm", "source": "total length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_479", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "show me the length of meetings who ended later than 3pm", "source": "total length of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_train_418", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total time for my meetings after 3pm", "source": "total length of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_20", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of meetings which started before 10am", "source": "total length of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length))))", "qid": "calendarplus_test_73", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING))))"}
{"paraphrased": "what is my 3 hour meeting that ends at 10am", "source": "meeting whose length is three hours whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what three hour meeting started at 10am", "source": "meeting whose length is three hours whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendarplus_train_149", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what three hour meeting ended at 10am", "source": "meeting whose length is three hours whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendarplus_train_53", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me meetings that are three hours and dont end at 10am", "source": "meeting whose length is three hours whose end time is not 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string !=) (time 10 0)))", "qid": "calendarplus_train_264", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "how long is the average meeting shorter than three hours", "source": "average length of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_156", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that was longer than one hour", "source": "total length of meeting whose length is larger than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_452", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long is the meeting that was shorter than three hours", "source": "total length of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_97", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "how long are all my meetings longer than three hours", "source": "total length of meeting whose length is larger than three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_445", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "show me all meetings one hour or three or more hours long", "source": "total length of meeting whose length is at least three hours or one hour", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))) (string length))))", "qid": "calendarplus_train_446", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))) (ANON_STRING))))"}
{"paraphrased": "what meeting had the same attendee as either weekly standup or annual review", "source": "meeting whose attendee is person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_train_30", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "is there information on the end time of the meetings beginning at 10am", "source": "end time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_22", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that ended at 10am start", "source": "start time of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_145", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "attendee of meeting whose end time is 10am", "source": "attendee of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_206", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started at 10am end", "source": "end time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_330", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "all the attendee of meeting start by 10am  and end by 10am", "source": "attendee of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_test_100", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where is the meeting that starts at 10 am conducted", "source": "location of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_4", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "length of meeting whose end time is 10am", "source": "length of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_71", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting started at 10am", "source": "length of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_356", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what meeting starts at 10am", "source": "start time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_409", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where is my meeting at 10am", "source": "location of meeting whose end time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_215", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the average length of meetings held on or after january 2", "source": "average length of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_513", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of the meetings after jan 2", "source": "average length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_501", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings before january 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_492", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what was the average length of all meetings prior to jan 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what meeting ended at 10am and started before 10am", "source": "meeting whose end time is 10am whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_8", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the meetings which starts at 10 am and ends within 10 am ", "source": "meeting whose start time is 10am whose end time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_519", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what meeting start and ends at 1000 am", "source": "meeting whose start time is 10am whose end time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_52", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show meeting that starts and ends at 1000 am", "source": "meeting whose end time is 10am whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_273", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which  is the  meeting that starts earlier than 10 am", "source": "meeting whose start time is 10am whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_491", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what is the attendee of the meeting that is important that lasts three hours", "source": "attendee of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_18", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show me meeting locations that are 3 hours", "source": "location of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string location)))", "qid": "calendarplus_train_25", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "meeting attendees are important and length not more than three hours", "source": "attendee of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string attendee)))", "qid": "calendarplus_train_546", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "show priority three hour meeting", "source": "length of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_8", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when do my important three hour meetings end", "source": "end time of meeting that is important and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_440", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "all the meeting are important and endy by 10 am", "source": "number of meeting that is important and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_test_113", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "show me meetings with a length of three hours or less", "source": "meeting whose length is three hours whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_59", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "which meeting is three hours or less", "source": "meeting whose length is three hours whose length is smaller than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_524", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings that are three hours long or longer", "source": "meeting whose length is three hours whose length is larger than three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_104", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting was three hours long", "source": "meeting whose length is three hours whose length is at least three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_531", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what is the total length of the important meeting which lasts three hours", "source": "total length of meeting that is important and whose length is three hours", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)) (string length))))", "qid": "calendarplus_train_375", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of important three hour meetings", "source": "total length of meeting whose length is three hours and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)) (string length))))", "qid": "calendarplus_test_117", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what meetings do i have on jan 2 that are shorter then three hours", "source": "meeting whose date is jan 2 whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings with a date of january 2nd or before", "source": "meeting whose date is jan 2 whose date is smaller than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_102", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings that have a ending time within a week", "source": "number of meeting whose end time is smaller than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_364", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings were as long or longer than weekly standup", "source": "number of meeting whose length is at most length of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string length))))))", "qid": "calendarplus_test_96", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings ended after weekly standup", "source": "number of meeting whose end time is larger than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_74", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "weekly standup meeting whose start time is smaller than end time", "source": "number of meeting whose start time is smaller than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_291", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings have a starting time that is smaller than the ending time of the weekly standup", "source": "number of meeting whose start time is smaller than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_68", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "number of meeting not longer than weekly standup", "source": "number of meeting whose length is at most length of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string length))))))", "qid": "calendarplus_train_90", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings end earlier than the commencing time of the weekly standup meeting", "source": "number of meeting whose end time is smaller than start time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time))))))", "qid": "calendarplus_train_141", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "meeting number that ends after the weekly standup end time", "source": "number of meeting whose end time is larger than end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_12", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings ended at or after the start time of weekly standup", "source": "number of meeting whose end time is at least start time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time))))))", "qid": "calendarplus_train_480", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings end on or before the end time of the weekly standup", "source": "number of meeting whose start time is at most end time of weekly standup", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time))))))", "qid": "calendarplus_train_129", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING))))))"}
{"paraphrased": "how many meetings were held on january 2", "source": "number of meeting whose date is jan 2 and whose date is jan 2", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2))))", "qid": "calendarplus_train_464", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "what is the length of the weekly standup that takes place on january 2nd", "source": "length of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_164", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not after jan 2", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_102", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me the end time of weekly standup on january 2nd or later", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_151", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me what time the weekly meeting on january 2nd ended", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_79", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time do the weekly standup meetings on january 2 and after start", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_248", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not before jan 2", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_17", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time was weekly standup on jan 2", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_508", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time did the jan 2 weekly standup end", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_462", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings before jan 2 shorter than three hours", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_314", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "name a three hour meeting after jan 2", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_134", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings that are three hours long and are no later than january 2nd", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_236", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings after january 2nd that are three hours long", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings after jan 2 that are three hours", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "three hours long meeting not before jan 2", "source": "meeting whose length is three hours whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_380", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the three hour meeting no later than jan 2", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_296", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the start time of meetings which ended no later than 10am", "source": "start time of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_train_270", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "meeting start time no later than 10 am or the 3 pm meeting", "source": "start time of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_110", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what day is the meeting that ends at 10 or later", "source": "date of meeting whose end time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_374", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "a meeting that starts at either 10am or 3pm what time does it end", "source": "end time of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_449", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the attendees of meetings that are before 3pm", "source": "attendee of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_test_125", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "which meetings start before 10am", "source": "start time of meeting whose start time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_12", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that started at or before 3pm", "source": "date of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_229", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that ended at or before 3pm", "source": "length of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_56", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meetings ending before 3pm", "source": "length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_train_416", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the date of meetings where the end time is after 10am", "source": "date of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_280", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the meetings on january 2nd with a length of three hours", "source": "total length of meeting whose date is jan 2 and whose length is three hours", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)) (string length))))", "qid": "calendarplus_train_431", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that start at 10am", "source": "jan 2 or jan 3 whose end time is at most 10am", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_112", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "how many meetings are at least one to three hours", "source": "number of meeting whose length is at least three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_150", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings lasted between one hour or three hours at the most", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_test_33", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings last less than 3 hours ", "source": "number of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_281", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings were three or less hours long", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_301", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "what is the end time for the important meeting on january", "source": "end time of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_275", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all locations of important meetings on january 2nd", "source": "location of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string location)))", "qid": "calendarplus_test_104", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "priority attendee meeting on jan 2", "source": "attendee of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string attendee)))", "qid": "calendarplus_train_316", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "end time of an important meeting on jan 2", "source": "end time of meeting whose date is jan 2 and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_32", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)) (ANON_STRING)))"}
