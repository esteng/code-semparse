{"paraphrased": "articles on multivariate data analysis that won an award", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_test_146", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "award winning article cited bymultivariate data analysis", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_410", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "articles cited by multivariate data analysis and that won awards", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_609", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "articles cited by multivariate data analysis that won awards", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_257", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what award winning article was cited by multivariate data analysis", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_86", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "name an article about multivariate data analysis that has won an award", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_409", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "awardwinning articles cited in multivariate data analysis", "source": "article that multivariate data analysis cites and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string won_award)))", "qid": "publications_train_454", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what article has two other articles cited within it", "source": "article that two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_259", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article cites more than two other articles", "source": "article that more than two article cites", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_461", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of two article", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_531", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publications that have contained more than two articles", "source": "venue that is venue of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_236", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of one or two articles", "source": "person that is author of at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_285", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who is the author of less than two articles", "source": "person that is author of less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_63", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue that is mentioned in at least  two articles", "source": "venue that is venue of at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_460", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "author of more than two articles", "source": "person that is author of more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_243", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication that two articles are published in", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_121", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venue of two articles", "source": "venue that is venue of two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_371", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article is mentioned in least number of other articles", "source": "article that the least number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string min) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_366", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article has the most number of articles cited", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_0", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication that has included the most articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_test_137", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "publication with the fewest articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_37", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "who has authored the least articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_72", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "journal that publishes the fewest number of articles", "source": "venue that is venue of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string min) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_549", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what author wrote the least number of articles", "source": "person that is author of the least number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.person) (string !type)) (string min) (call reverse (string author)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_67", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "venues that have published the most articles", "source": "venue that is venue of the most number of article", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.venue) (string !type)) (string max) (call reverse (string venue)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_145", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles cited by the most articles", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_158", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which article is cited by the most number of articles", "source": "article that the most number of article cites", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.article) (string !type)) (string max) (call reverse (string cites)) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_181", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_339", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "what article was published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_605", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "article that is published in 2004", "source": "article whose publication date is 2004 and whose publication date is 2004", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string publication_date) (string =) (date 2004 -1 -1)))", "qid": "publications_train_587", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)))"}
{"paraphrased": "author of article citing multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_462", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites articles written by efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_313", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles citing efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_train_552", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article citing an article citing multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_8", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "any article that cites another article published in annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_81", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article that cites article whose author is efron", "source": "article that cites article whose author is efron", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string author) (string =) en.person.efron)))", "qid": "publications_test_126", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites an article from annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_450", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles that cite multivariate data analysis", "source": "article that cites article that cites multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_160", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article cites other articles about annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_50", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "article with the venue as annals of statistics", "source": "article that cites article whose venue is annals of statistics", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string venue) (string =) en.venue.annals_of_statistics)))", "qid": "publications_train_405", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what article was published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_488", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_346", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published after multivariate data analysis", "source": "article whose publication date is larger than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_test_124", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "article whose publication date is smaller than publication date of multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published before the date of multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article has a publication date the same as the date of multivariate data analysis", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_538", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published on or after the publication date of multivariate data analysis", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_test_43", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published contemporaneous to or after the multivariate data analysis", "source": "article whose publication date is at least publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string >=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_30", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles that have a publication date close to the date of multivariate data analysis", "source": "article whose publication date is at most publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <=) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_train_4", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "articles published before multivariate data analysis", "source": "article whose publication date is smaller than publication date of multivariate data analysis", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call ensureNumericProperty (string publication_date)) (string <) (call ensureNumericEntity (call getProperty en.article.multivariate_data_analysis (string publication_date)))))", "qid": "publications_test_29", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what article cites another article with a publication date of 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_test_16", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "article that cite articles published in 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_303", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "articles citing articles published in 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_452", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "find an article making a citation of a 2004 published article", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_572", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "articles that cite articles published in 2004", "source": "article that cites article whose publication date is 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1))))", "qid": "publications_train_64", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "name an author of an article about multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what venue contains the article about city multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_148", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who wrote an article about city multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_517", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is an article cited in a publication about multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_391", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "venues of articles cited by multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_530", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author citing multivariate data analysis in article", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_48", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "author of article cited by multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_197", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "publisher of article citing multivariate data analysis", "source": "venue that is venue of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_test_10", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "an article that cites multivariate data analysis", "source": "article that article that multivariate data analysis cites cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "who wrote an article citing multivariate data analysis", "source": "person that is author of article that multivariate data analysis cites", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis)))", "qid": "publications_train_463", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "articles cited by multivariate data analysis and published in annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_482", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what article by efron cites multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_test_89", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis in the annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_283", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles citing multivariate data analysis written by efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_169", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article citing multivariate data analysis by efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_239", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that cites multivariate data analysis", "source": "article that multivariate data analysis cites and that cites multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string cites) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_173", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what efron article is cited in multivariate data analysis", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_test_139", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is an article in annals of statistics about multivariate data analysis", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that citesmultivariate data analysis by author efron", "source": "article that multivariate data analysis cites and whose author is efron", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string author) (string =) en.person.efron))", "qid": "publications_train_361", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "articles cited by multivariate data analysis and published in annals of statistics", "source": "article that multivariate data analysis cites and whose venue is annals of statistics", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (string venue) (string =) en.venue.annals_of_statistics))", "qid": "publications_train_506", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name a person who is the author of an article about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_65", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_47", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name an article citing multivariate data analysis", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_89", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who wrote multivariate data analysis more than once", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_28", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is the author of multivariate date analysis articles", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_514", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is someone who has authored articles about multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_125", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "article that multivariate data analysis cites", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_84", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is and author of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_633", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "writer of multivariate data analysis", "source": "person that is author of multivariate data analysis and that is author of multivariate data analysis", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) en.article.multivariate_data_analysis) (call reverse (string author)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_test_154", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "an article that multivariate data analysis cites", "source": "article that multivariate data analysis cites and that multivariate data analysis cites", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis) (call reverse (string cites)) (string =) en.article.multivariate_data_analysis))", "qid": "publications_train_624", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "award winning articles published in 2004", "source": "article whose publication date is 2004 and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string won_award)))", "qid": "publications_train_407", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "articles published in 2004 that won awards", "source": "article whose publication date is 2004 and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string won_award)))", "qid": "publications_train_90", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "what article has a publication date of 2003 and won an award", "source": "article whose publication date is 2004 and that won an award", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.article) (string !type)) (string publication_date) (string =) (date 2004 -1 -1)) (string won_award)))", "qid": "publications_train_439", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING)))"}
{"paraphrased": "award winning article publication venue", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "article citing awardwinning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_603", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what article was cited by the award winning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_265", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "who is the author of the article who won an award", "source": "person that is author of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string author)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_555", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "an article that won award cites another article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what venue is about an article that won an award", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_test_75", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which article cites an awardwinning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_421", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "articles cited by award winning articles", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_420", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "article cited by award winning article", "source": "article that article that won an award cites", "target": "(call listValue (call filter (call getProperty (call singleton en.article) (string !type)) (call reverse (string cites)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_447", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "find a venue of an award winning article", "source": "venue that is venue of article that won an award", "target": "(call listValue (call filter (call getProperty (call singleton en.venue) (string !type)) (call reverse (string venue)) (string =) (call filter (call getProperty (call singleton en.article) (string !type)) (string won_award))))", "qid": "publications_train_80", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "this article cites 2 other articles", "source": "article that cites two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_209", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles with less than two references", "source": "article that cites less than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string <) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_33", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles citing two articles", "source": "article that cites two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string =) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_571", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "articles that mention three or more cities", "source": "article that cites more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_438", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what article cites other articles", "source": "article that cites more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_574", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cite at least two articles", "source": "article that cites at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_350", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that refernces a single article", "source": "article that cites at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_606", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find an article that makes two or fewer citations", "source": "article that cites at most two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string <=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_289", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "article that cites two or more articles", "source": "article that cites at least two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string >=) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_112", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find an article that cites more than two articles", "source": "article that cites more than two article", "target": "(call listValue (call countComparative (call getProperty (call singleton en.article) (string !type)) (string cites) (string >) (number 2) (call getProperty (call singleton en.article) (string !type))))", "qid": "publications_train_171", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
