{"paraphrased": "show me recipes posted in 2004 and 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_272", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "find recipes posted in 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_280", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "show me recipes posted during 2004 and 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_455", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "what recipes posting date is in 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_496", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "what recipe was posted in either 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_train_781", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "a recipe which posted either in 2004 or 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_test_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "show me recipes posted in 2004 or in 2010", "source": "recipe whose posting date is 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))", "qid": "recipes_test_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2004 -1 -1) (date 2010 -1 -1))))"}
{"paraphrased": "show me recipes with a preparation time equal to or greater than the cooking time of rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_1", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe can be prepped in less time than rice pudding can be cooked", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_8", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes posting date is at least the same as rice pudding", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_10", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is at least the preparation time of rice pudding", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_20", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes longer to cook than rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_29", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with cooking time greater than preparation time for rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_40", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that take less time to prepare than rice pudding", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that posted no later than the rice pudding recipe", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_53", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes takes more time to prepare than rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_78", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe with cooking time not more than that of rice pudding", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_79", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes less time to cook than rice pudding does to prepare", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_94", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe was posted at the posting date of rice pudding", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_99", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find recipes that were posted before the recipe for rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_101", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take less time to prepare than to cook rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes same or less time to prepare rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_122", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe cooks in less time than rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes less time to prep than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_129", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that have a shorter preparation time than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_137", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes no longer to prepare than rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_138", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with preparation times longer than cooking time of rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_148", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show recipes that take at least the preparation time of rice pudding to be done", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe can you prepare in the same or less time than it takes to cook rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_154", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "a recipe which takes longer to cook than the preparation time for rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_158", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe cooks for equal or less time than rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_160", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted before rice puddings recipe", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_163", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted after rice puddings recipe", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_164", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe has less cooking time like rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_184", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe requires less prep time than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_186", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show recipes posted on the same date or later than rice pudding", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_192", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe takes longer to cook than rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_197", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is greater than that of rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe has a cooking time as that of rice pudding", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_203", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is lesser than the cooking time of rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_205", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes can be prepared faster than rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_220", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe cooked in preparation time of rice pudding or more", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_238", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "a recipe which takes at least as long to cook as rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_245", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe needs more time than rice pudding preparation", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_247", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is at the greatest the cooking time of rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_250", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe with posting date not after posting date of rice pudding", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_253", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes require the same time or than rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_258", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is no more than the cooking time of rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_266", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe prepared in more time than cooking time of rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_273", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe  s cooking time is equal to that of rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_274", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted before or on the same day as rice pudding", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_283", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes have a cooking time that is at least as long as rice puddings preparation time", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_297", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take longer to cook than rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_298", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes posting date is lesser than that of rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_315", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show recipes posted before rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_316", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that require cooking time thats more than rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_319", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe is posted after the posting date of rice pudding", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_320", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is at least that of rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_323", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "name the recipe with a cooking time with at least the cooking time of rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_327", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe has a prep time no greater than the prep time for rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_330", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what is a recipe that takes no more time to cook than rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_332", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with preparation time equal to or longer than rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_346", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find a recipe which has a longer cooking time than rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_353", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe has a cook time less than the cook time of rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_356", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes posted before rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_368", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe is cooked in less time than rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_384", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes  are prepared in less time tan rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_395", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes at least as long to prepare as rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_404", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that have the same or longer preparation time as rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_406", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes that requires the same or more time to prepare as rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_411", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes were posted before rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_416", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe has a larger cooking time than the preparation time needed for rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_421", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show recipes that requires lesser preparation than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_422", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is greater than that of rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_426", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take longer to cook than to prepare rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_438", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes equal or more time to cook than rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_439", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes that require less or same time than the time taken to prepare rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_441", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that require lesser cooking time than rice pudding", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_443", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes posted before any posting for rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_444", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes posting date is greater than that of rice pudding", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_447", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes longer to cook than rice pudding takes to prep", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_451", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that require longer time to cook than rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_459", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with cooking times greater than cooking time of rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_472", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show recipes that require at the most time as rice pudding preparation", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_478", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe has a cooking time lower than that of rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_484", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what is a recipe with a prep time less than the cooking time of rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_486", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes posted at the same date as rice pudding", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_491", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipe that require longer time to cook than rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_501", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe takes less time to prepare than rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_511", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe cooks for less time than rice pudding takes to prep", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_519", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with a preparation time greater than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_522", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted no later than the rice pudding recipe", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_529", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes posted with or after posting rice pudding", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_533", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe has the cooking time of rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_535", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe requires less cooking time than rice pudding preparation", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_544", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes with more preparation time than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_562", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes posted the same day as rice pudding or before", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_565", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes were posted when rice pudding was posted", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_577", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that take as long to prepare as rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_580", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes posted till rice pudding is posted", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_589", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes whose preparation time is a most the cooking time of rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_592", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that have a preparation time less than the cooking time of rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_595", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted before rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_596", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe is prepared using the same amount of time as that of rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_608", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take as long as prepare rice pudding", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_613", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes longer to prep than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_617", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that whose preparation time is shorter than rice puddings cooking time", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_626", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes have the same or longer preparation time as rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_627", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes that require lesser time to prepare than rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_638", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what is a recipe that takes at least as long to make as rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_641", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe is cooked faster than rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_648", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is at lowest that of rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_656", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe whose posting date is at least rice puddings posting date", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_662", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is lower than the preparation time of rice pudding", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_667", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "preparation time of recipe  not more than that of rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_669", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes take more time to prepare than rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_670", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe do you cook for less time than rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_676", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes equal or less time to cook than rice pudding takes to prep", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_677", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with cooking time less than the preparation time for rice pudding", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_680", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that have shorter cooking times than rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_681", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe is prepared in preparation time of rice pudding or earlier", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_684", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes posting date is no greater than that of rice pudding", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_697", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe requires more prep time than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_699", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take less or as long to prepare as rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_700", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show recipes that requires at most the preparation time of rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_702", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes take the same amount of time or less to cook as rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_708", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with a cooking time greater or equal to the preparation time for rice pudding", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_716", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes posted before rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_719", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes posted before rice pudding", "source": "recipe whose posting date is smaller than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_725", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe can you prep in the same or more time as it takes to cook rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_727", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe can you prep in the same or longer amount of time as rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_729", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe can be prepped in equal or less time than rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_741", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe needs longer preparation time than that of rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_746", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes have the same or less preparation time as rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_748", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes posted the same day as rice pudding or after", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_749", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "name a recipe with a prep time no longer than the cook time for rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_750", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find recipes that can be prepared sooner than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_754", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes that have cooking time less than cooking time of rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_755", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes were posted after rice pudding", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_763", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe whose cooking time is not more than rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_788", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe prepare in less or same time to cook rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_789", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes more time to prepare than rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_797", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted after or on the same day as rice pudding", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_800", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that take the same amount of time or more to cook as rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_801", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe cooks in more or the same time as rice pudding takes to prep", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_813", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "name a recipe which was posted on or later than the posting date of the rice pudding recipe", "source": "recipe whose posting date is at least posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_train_816", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe cooked in less time than rice pudding preparation", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_818", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that take less time to cook than it takes to prepare rice pudding", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_825", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is no more than the preparation time of rice pudding", "source": "recipe whose preparation time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_829", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is longer than that of rice pudding", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_train_838", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with cooking time equal to or greater than cooking time for rice pudding", "source": "recipe whose cooking time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_train_843", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe has a lesser preparation time than that of rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_3", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe takes longer to prep than rice pudding takes to cook", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_8", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe requires no more cooking time than rice pudding", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_10", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with preparation time less than cooking time for rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_17", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with preparation time equal to or less than cooking time for rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_28", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with cooking times shorter than cooking time of rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_38", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted after the date  rice pudding", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_test_39", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take at most as long to cook as rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_45", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take longer to cook than rice pudding does to prepare", "source": "recipe whose cooking time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_48", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes take less time to cook than rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_57", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with a preparation time that is longer than rice puddings cooking time", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_60", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes posted after posting rice pudding recipe", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_test_62", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes cooking time is at most that of rice puddings preparation time", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_65", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with preparation time less than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_70", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe has a prep time at least as long as the cooking time of rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_73", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe is for a dish that takes longer to cook than does rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_79", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with longer preparation times than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_86", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that take longer to cook than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_87", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe cooked in preparation time of rice pudding or less", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_93", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe with more preparation time than rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_97", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes that require greater time to prepare than rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_101", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe needs a longer preparation time than rice pudding", "source": "recipe whose cooking time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_112", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe requires a cooking time at least as long as rice pudding", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_114", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take less time to cook than to prepare rice pudding", "source": "recipe whose cooking time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_122", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that take as long to cook as it takes to prepare rice pudding or quicker", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_125", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipes prepare in same or less time for cooking rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_134", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipe was posted later than rice pudding", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_test_135", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with cooking time equal to or less than the preparation time for rice pudding", "source": "recipe whose cooking time is at most preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_139", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take less time to prepare than rice pudding", "source": "recipe whose preparation time is smaller than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe takes longer to prepare rice pudding", "source": "recipe whose preparation time is larger than preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_146", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipes take less time to cook than rice pudding", "source": "recipe whose cooking time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_148", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes that require a maximum cooking time as rice pudding", "source": "recipe whose cooking time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_151", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "which recipe needs less time to cook than rice pudding", "source": "recipe whose preparation time is smaller than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_158", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe with preparation time not less than that of rice pudding", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_161", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes prep time is longer than the cook time for rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_163", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes takes as long to cook as rice pudding", "source": "recipe whose preparation time is at most cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_167", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes were posted at or before rice pudding", "source": "recipe whose posting date is at most posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_test_179", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is greater than the cooking time for rice pudding", "source": "recipe whose preparation time is larger than cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_198", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what recipes preparation time is no lesser than the cooking time for rice pudding", "source": "recipe whose preparation time is at least cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string cooking_time)))))", "qid": "recipes_test_200", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "recipe whose posting date is after that of rice pudding", "source": "recipe whose posting date is larger than posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string posting_date)))))", "qid": "recipes_test_201", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "what is the minimum time required to prepare rice pudding", "source": "recipe whose cooking time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string cooking_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_203", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "show me recipes with a preparation time equal to or greater than rice pudding", "source": "recipe whose preparation time is at least preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string preparation_time)) (string >=) (call ensureNumericEntity (call getProperty en.recipe.rice_pudding (string preparation_time)))))", "qid": "recipes_test_212", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))))"}
{"paraphrased": "find a recipe that takes the same time to cook as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_13", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show recipes with the preparation time as the cooking time of rice pudding", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_39", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes cooking time is the same as rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_44", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "recipes prepared in rice puddings cooking time", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_46", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that have a cooking time equal to the preparation time of rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_146", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes share the cuisine of rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_152", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe was posted the same date as the rice pudding recipe", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_train_169", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "recipes that require same time to prepare than rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_179", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes are cooked in same time as rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_187", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me a recipe with the same prep time as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_191", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe has a cuisine including rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_241", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipe which take as much time as rice pudding", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_254", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that require the cooking time of rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_271", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that take the same time to prepare as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_287", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that take the same amount of time to prepare as rice pudding does to cook", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_305", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes with cooking time equal to rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_308", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes from the same cuisine as rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_310", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which recipe has the same cooking time of rice pudding", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_322", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes cooking time is the preparation time of rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_341", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which recipe was posted on the same date as that of rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_train_348", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what time can be prepped in the same time as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_396", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes preparation time is the same as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_437", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes have the same cooking time as rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_467", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe has the same cooking time as rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_481", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes with cooking time equal to preparation time for rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_538", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which recipe belongs to the cuisine of rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_548", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe has a cook time equal to the prep time of rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_550", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show recipes whose cooking time is same as that of rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_558", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what is a recipe from the same cuisine as rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_576", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe was posted the same day as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_train_581", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "find the recipes for same cuisine as rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_585", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what is a recipe whose cooking time is the same as rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_600", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes with a preparation time equal to the cooking time of rice pudding", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_619", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that have the same preparation time as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_621", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which recipes were posted at the same time as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_train_664", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which recipes have a preparation time as long as the cooking time of rice pudding", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_671", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that fall under the same cuisine as rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_688", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes with a cooking time equal to the preparation time for rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_698", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show recipes posted on the same date as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_train_735", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes posted on the same day as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_train_737", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes with cooking times equal to cooking time of rice pudding", "source": "recipe whose cooking time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_train_779", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "recipe of cuisine of rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_train_820", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which  recipe takes as much time to prepare as rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_train_849", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "which recipes prep time is the same as the cook time of rice pudding", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_test_9", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes posting date is the same as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_test_31", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe takes the same time to cook as rice pudding takes to prep", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_test_41", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe makes the same type of cuisine as rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_test_44", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipe can be prepped in the same time as rice pudding can be cooked", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_test_61", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "recipe with posting date same as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_test_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes posted on the same day as rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_test_120", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show me recipes that are the same cuisine as rice pudding", "source": "recipe whose cuisine is cuisine of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cuisine) (string =) (call getProperty en.recipe.rice_pudding (string cuisine))))", "qid": "recipes_test_131", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "recipe posted on the same date of posting of rice pudding", "source": "recipe whose posting date is posting date of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (call getProperty en.recipe.rice_pudding (string posting_date))))", "qid": "recipes_test_152", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes preparation time is the same as rice puddings cooking time", "source": "recipe whose preparation time is cooking time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string cooking_time))))", "qid": "recipes_test_154", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "recipe prepared in preparation time of rice pudding", "source": "recipe whose preparation time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_test_204", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "what recipes are prepared in cooking time of rice pudding", "source": "recipe whose cooking time is preparation time of rice pudding", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time) (string =) (call getProperty en.recipe.rice_pudding (string preparation_time))))", "qid": "recipes_test_213", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))))"}
{"paraphrased": "show the recipe that takes the longest time to cook", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_67", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "recipe that first posted", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_71", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe takes the longest time to prep", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_85", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what is the newest recipe", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_102", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe is the oldest", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_105", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me recipes with the longest cooking time", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_135", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe was posted the earliest", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_217", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me the recipe that has the shortest cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_239", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe takes most time to cook", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_246", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe takes the maximum preparation time", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_303", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show the first recipe posted", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_314", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe was posted most recently", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_321", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which is the last posted recipe", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_339", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me the recipe that has the largest preperation time", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_357", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe was posted the earliest", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_358", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe has the least amount of prep time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_376", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the least prep time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_390", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me recipes with the most preparation time", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_397", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe requires the least cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_436", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the smallest preparation time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_460", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe is fastest cooked", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_479", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me recipes with the least cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_488", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe requires the lowest cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_502", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe takes the longest to prepare", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_515", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me the oldest recipe", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_517", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe takes the shortest time to cook", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_521", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe has the shortest preparation time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_531", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe needs the longest preparation tome", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_546", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the greatest cooking time", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_547", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe is most recent", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_561", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the shortest cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_602", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe can be prepared at the earliest", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_604", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe takes the longest to prepare", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_630", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe was posted the latest", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_642", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe takes the least amount of time to prepare", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_645", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe takes the longest to cook", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_train_675", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe was posted first", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_695", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which is the recipe that was posted last", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_760", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe was posted the earliest", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_785", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe has the least preparation time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_817", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me recipes that requires the most time to prepare the dish", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_train_823", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the latest date posted", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_844", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe was posted last", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_train_847", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the least posting date", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_test_19", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "recipe with largest posting date", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_test_22", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me recipes with the most cooking time", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_test_34", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show the recipes with smallest preparation time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_test_36", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe is fastest prepared ", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_test_46", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe needs the shortest cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_test_54", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe requires the longest cooking time", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_test_63", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the longest preparation time", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_test_77", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the longest cooking time", "source": "recipe that has the largest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_test_89", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "recipe that with smallest preparation time", "source": "recipe that has the smallest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_test_133", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipes preparation time is the greatest", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_test_136", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me the recipe that takes the least time to prepare", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_test_165", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe takes the longest to prepare", "source": "recipe that has the largest preparation time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string preparation_time))))", "qid": "recipes_test_181", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which recipe was posted first", "source": "recipe that has the smallest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_test_189", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "what recipe has the smallest cooking time", "source": "recipe that has the smallest cooking time", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string min) (call ensureNumericProperty (string cooking_time))))", "qid": "recipes_test_211", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "which is the latest recipe posted", "source": "recipe that has the largest posting date", "target": "(call listValue (call superlative (call getProperty (call singleton en.recipe) (string !type)) (string max) (call ensureNumericProperty (string posting_date))))", "qid": "recipes_test_214", "anonymized_target": "(call listValue (call superlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call ensureNumericProperty (ANON_STRING))))"}
{"paraphrased": "show me recipes posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_100", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show recipes whose posted date is on or before 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "find a recipe that was posted  by 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_171", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipe was posted during 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_206", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "recipes posted till 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_236", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "find recipes posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_237", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted no earlier than 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_286", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_362", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipes posting date is at the greatest in 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_377", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "find recipes posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_402", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted during or before 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_414", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipes were posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_554", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipes posting date is greater than 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_584", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_588", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted 2004 and earlier", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_590", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe which was posted no later than 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_643", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "recipes posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_652", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipes were posted up to 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_655", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "recipes posted after 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_731", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipes were posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_740", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_752", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "recipes posted in 2004 and later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_759", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipes were posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_762", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipe was posted before 2004", "source": "recipe whose posting date is smaller than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_768", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted in or before 2004", "source": "recipe whose posting date is at most 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_769", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what is a recipe posted later than 2004", "source": "recipe whose posting date is larger than 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_854", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me a recipe that has a posting date of at least 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_train_857", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "which recipes were posted by 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_111", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_147", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "what recipes posting date is at least in 2004", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_173", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "a recipe which posted in 2004 or later", "source": "recipe whose posting date is at least 2004", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2004 -1 -1))))", "qid": "recipes_test_184", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2004 -1 -1))))"}
{"paraphrased": "how many ingredients does that require", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_6", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many recipes are there", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_9", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me the total number of recipes", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_112", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many ingredients", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_120", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the total number of recipes", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_224", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many recipes", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_263", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many total recipes are there", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_302", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many meals do we have everyday", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_366", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many total meals are there", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_434", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many ingredients are needed", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_480", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many meals are there", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_532", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many ingredients are used", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_594", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many total ingredients are used in all the recipes", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_644", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many meals does this make", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_679", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many total recipes are there", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_706", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of ingredients for that recipe", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_742", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many ingredients are there", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_770", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many total recipes are listed", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_799", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many recipes are there", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_811", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me total number of meals", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_7", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many recipes are there", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_80", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many meals are there", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_128", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of recipes", "source": "number of recipe", "target": "(call listValue (call .size (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_159", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many total meals are there", "source": "number of meal", "target": "(call listValue (call .size (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_168", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many ingredients are in this recipe", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_185", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the number of ingredients in total", "source": "number of ingredient", "target": "(call listValue (call .size (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_187", "anonymized_target": "(call listValue (call .size (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the meal that rice pudding goes with", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_19", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are ingredients in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_38", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients does rice pudding need", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_54", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for which meal is the dish rice pudding used", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_144", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for what meal is rice pudding used", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_260", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for what meal is rice pudding", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_306", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients go in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_311", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "ingredients in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_489", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "tell me ingredients of rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_791", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients are in rice pudding", "source": "ingredient that rice pudding requires and that rice pudding requires", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_794", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal that incorporates rice pudding", "source": "meal that rice pudding is for and that rice pudding is for", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_814", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the total cooking time of the recipe", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_55", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average preparation time for a recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_66", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average preparation time of that recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_68", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the mean cooking time for the recipe", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_95", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "cooking time of recipe", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_104", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average cooking time for that dish", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_113", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total cooking time of the recipe", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_119", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long is the average preparation time for the recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_130", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the preparation time for that recipe", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_142", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how much time is needed to cook this dish", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_161", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average cooking time for that recipe", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_190", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average time needed for the preparation of the dish", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_218", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the usual time required to finish the recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_225", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total time required for preparing the dish", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_318", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long does the recipe take to prep", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_349", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "whats the average preparation time of a recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_367", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long does this recipe take to cook", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_373", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "recipes total preparation time", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_409", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average prep time for the recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_413", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average preparation time across all recipes", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_453", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "recipes cooking time", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_465", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "show me the average cooking time for all recipes", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_477", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how much time it takes to prepare recipe", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_514", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long does the recipe take to prepare", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_516", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total preparation time of all the recipes", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_526", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total prep time for the recipes", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_train_539", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average cooking time of recipe", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_571", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "average cooking time", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_747", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long does the recipe take to cook", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_753", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the cooking time of recipe", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_train_852", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "on average how long does the recipe take to cook", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_test_2", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "on average how long is the prep time of the recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_test_5", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total prep time of the recipe", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_test_58", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average cooking time of this recipe", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_test_66", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total cooking time summed across all recipes", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_test_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the average cooking time across all recipes", "source": "average cooking time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_test_121", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total time taken to prepare the dish", "source": "total preparation time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_test_123", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the cooking time for this recipe", "source": "total cooking time of recipe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string cooking_time))))", "qid": "recipes_test_164", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long does it take to prepare the recipe", "source": "average preparation time of recipe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call getProperty (call singleton en.recipe) (string !type)) (string preparation_time))))", "qid": "recipes_test_180", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which recipes were posted up to 2004 or 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_69", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "find all recipes posted after 2004", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_88", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted before 2004 or before 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_96", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted before 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_124", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "find recipes that were posted before 2004 or 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_157", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "a recipe which posted no sooner than 2004 or 2010", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_195", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "which recipes were posted after 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_234", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_243", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me all the recipes posted after 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_328", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes with posting dates from 2004 or later", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_417", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipes posting date is at most 2004 or 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_445", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "which recipe has a posting date smaller than 2004 or 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_469", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes with posting date before 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_476", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004 or after 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_498", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipes posting date is greater than 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_545", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show recipes posted on dates between 2004 and 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_556", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what are the recipes posted in2004 or 2010", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_559", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "which recipe was posted in 2004 or 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_568", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted in or after 2004 or in or after 2010", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_572", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_583", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe was posted no later than 2004 or 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_610", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "find recipes posted later than 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_620", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "recipes posted after 2003", "source": "recipe whose posting date is at least 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_623", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "a recipe that posted after 2004 or 2010", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_635", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe was posted before 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_657", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted in or before 2004 or in or before 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_686", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "which recipes were posted before 2004 or 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_802", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me recipes posted after 2004", "source": "recipe whose posting date is larger than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_train_848", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe posted before 2004 or 2010", "source": "recipe whose posting date is smaller than 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_test_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "what recipe was posted during or before 2010", "source": "recipe whose posting date is at most 2004 or 2010", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))", "qid": "recipes_test_162", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2004 -1 -1) (date 2010 -1 -1)))))"}
{"paraphrased": "show me lunch recipes", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me lunch recipes that require milk", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_16", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a lunch recipe", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_49", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe requiring milk makes a lunch meal", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_52", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a lunch recipe that is prepared with milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_121", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe makes something for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_127", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe has milk as an ingredient", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_134", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what lunch recipe requires milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_166", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes requiring milk", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_248", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a recipe that needs milk for its preparation", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_257", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me lunch recipes that need milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_275", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe needs milk and is for lunch", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_354", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what are the recipes for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_370", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what lunch recipe uses milk as an ingredient", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_372", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "tell recipes with milk for lunch", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_427", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name the recipe that is prepared for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_428", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name the recipe used for lunch prepared with milk", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_504", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what lunch recipes contain milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_606", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_631", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipes require milk and are for lunch", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_683", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which lunch recipe requires milk for its preparation", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_710", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name lunch recipes", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_718", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list the lunch recipes contains milk", "source": "recipe that is for lunch and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_728", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show recipes that has milk as its ingredient", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_739", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipes require milk", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_744", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a recipe for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_775", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes that need milk", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_795", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find the recipes for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_803", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all recipes require milk", "source": "recipe that requires milk and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_test_18", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipe has milk as its ingredient for lunch", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_26", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipes are for lunch", "source": "recipe that is for lunch and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_49", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe calling for milk makes something for lunch", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me lunch recipes that use milk", "source": "recipe that requires milk and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_113", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the used milk or spinach", "source": "milk or spinach", "target": "(call listValue (call concat en.ingredient.milk en.ingredient.spinach))", "qid": "recipes_train_57", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "spinach or milk", "source": "milk or spinach", "target": "(call listValue (call concat en.ingredient.milk en.ingredient.spinach))", "qid": "recipes_train_82", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "recipes for lunch or dinner menus", "source": "lunch or dinner", "target": "(call listValue (call concat en.meal.lunch en.meal.dinner))", "qid": "recipes_train_170", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what is a recipe using milk or spinach as an ingredient", "source": "milk or spinach", "target": "(call listValue (call concat en.ingredient.milk en.ingredient.spinach))", "qid": "recipes_train_240", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "recipes for rice pudding or quice", "source": "rice pudding or quiche", "target": "(call listValue (call concat en.recipe.rice_pudding en.recipe.quiche))", "qid": "recipes_train_324", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what to prefer rice pudding or quiche", "source": "rice pudding or quiche", "target": "(call listValue (call concat en.recipe.rice_pudding en.recipe.quiche))", "qid": "recipes_train_389", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me recipes for rice pudding or quiche", "source": "rice pudding or quiche", "target": "(call listValue (call concat en.recipe.rice_pudding en.recipe.quiche))", "qid": "recipes_train_430", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what recipes need milk or spinach", "source": "milk or spinach", "target": "(call listValue (call concat en.ingredient.milk en.ingredient.spinach))", "qid": "recipes_train_541", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "quiche or rice pudding", "source": "rice pudding or quiche", "target": "(call listValue (call concat en.recipe.rice_pudding en.recipe.quiche))", "qid": "recipes_train_624", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "is the recipe for lunch or dinner", "source": "lunch or dinner", "target": "(call listValue (call concat en.meal.lunch en.meal.dinner))", "qid": "recipes_train_689", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "either lunch or dinner", "source": "lunch or dinner", "target": "(call listValue (call concat en.meal.lunch en.meal.dinner))", "qid": "recipes_train_809", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which recipe requires milk or spinach", "source": "milk or spinach", "target": "(call listValue (call concat en.ingredient.milk en.ingredient.spinach))", "qid": "recipes_train_810", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "show me recipes for lunch or dinner", "source": "lunch or dinner", "target": "(call listValue (call concat en.meal.lunch en.meal.dinner))", "qid": "recipes_train_850", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "what is a recipe for rice pudding or quiche", "source": "rice pudding or quiche", "target": "(call listValue (call concat en.recipe.rice_pudding en.recipe.quiche))", "qid": "recipes_test_186", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "is it the recipe for rice pudding or quiche", "source": "rice pudding or quiche", "target": "(call listValue (call concat en.recipe.rice_pudding en.recipe.quiche))", "qid": "recipes_test_208", "anonymized_target": "(call listValue (call concat ANON_ENTITY ANON_ENTITY))"}
{"paraphrased": "which ingredient is needed in the least number of recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_30", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "for what meal can maximum recipes be found", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_34", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me the most required ingredient in recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_65", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "ingredient required by least number of recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_75", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "for what meal are there the fewest number of recipes", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_91", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is there in less recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_93", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me ingredients required for the most recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_174", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has the least recipes", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_176", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is used for the least amount of recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_226", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name the ingredient in most recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_270", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is most used", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_333", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingrediant is used in the fewest recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_345", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal most recipes made for", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_378", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires the least ingredients", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_380", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal with the most number of recipes", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_407", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredients are used least in recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_463", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which ingredient is needed by many recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_483", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which is the most used ingredient in recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_507", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has the most number of recipes", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_520", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the most ingredient that this recipe requires", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_534", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has the least recipes dedicated to it", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_560", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with the least recipes", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_593", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is called for by the most recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_647", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with the most recipes", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_649", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals for one", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_685", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has least number of recipes", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_709", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has the least number of recipes", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_732", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is an ingredient required by the most recipes", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_745", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the most commonly used ingredient", "source": "ingredient that the most number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string max) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_836", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has the least recipes available", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_20", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is an ingredient found in the fewest recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_50", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has the most recipes for it", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_52", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has the most number of recipes", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_78", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is used by the least number of recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_98", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has the most number of recipes", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_117", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has the least number of recipes", "source": "meal that the least number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string min) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_127", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is required by the least recipes", "source": "ingredient that the least number of recipe requires", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.ingredient) (string !type)) (string min) (call reverse (string requires)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_149", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has the most recipes for it", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_150", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has the most number of recipes", "source": "meal that the most number of recipe is for", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meal) (string !type)) (string max) (call reverse (string meal)) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_193", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "ingredients in recipe posted in 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_42", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what are ingredients required by the recipe posted in 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_89", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what is an ingredient found in a recipe that was posted in 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what does the recipe posted in 2004 require", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_172", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what meal can be made by the recipe posted in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_284", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "ingredient required by recipe whose posting date is 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_294", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what are the ingredients needed for recipes posted in 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_365", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what meal is the recipe posted in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_375", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what ingredient is called for by a recipe posted in 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_433", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "for which meal is that recipe with post date in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_510", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what ingredients do recipes posted in 2004 call for", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_574", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "find a meal recipe posted in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_591", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "show me recipes that were posted later than 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_618", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what is a meal with a recipe posted in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_637", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "show me ingredients required by recipes posted in 2004", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_674", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what recipes posting date is in 2004 and what ingredients does it require", "source": "ingredient that recipe whose posting date is 2004 requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_682", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "which meals are recipes posted in 2004 for", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_821", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what recipes posting date is in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_train_837", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what is the meal of a recipe posted in 2004", "source": "meal that recipe whose posting date is 2004 is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1))))", "qid": "recipes_test_76", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1))))"}
{"paraphrased": "what meal has two or fewer recipes designated for it", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_0", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is in two or less recipes", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_3", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what two ingredients does that recipe require", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_5", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes share ingredients", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_18", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name ingredients used in more than one recipe", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_21", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me ingredients that two recipes require", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_27", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "ingredients required in less than three recipes", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_48", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is an ingredient found in fewer than two recipes", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_70", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has two or more recipes", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_74", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has less than two recipes", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_90", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes share at least two ingredients", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_110", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has more than two recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_117", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal is for only one recipe", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_133", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal can be made by two recipes", "source": "meal that two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_145", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name the ingredient required by at least two recipes", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_156", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me ingredients required by at least two recipes", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_202", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is used by two recipes", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_208", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "ingredient of two recipes", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_211", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has two or less recipes", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_212", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which ingredient is needed in less than two recipes ", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_214", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has two or more recipes", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_221", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for a meal for two", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_227", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has over two recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_229", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find a meal with two recipes", "source": "meal that two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_235", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that require less than two ingredients", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_242", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which ingredient is needed in more than one recipes", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_244", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meals have two recipes", "source": "meal that two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_276", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with fewer than two recipes", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_281", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has maximum recipes", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_288", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me two recipes for a meal", "source": "meal that two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_317", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which is the food item that is needed in two recipes", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_335", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is in than two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_350", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name ingredients used only in one or two recipes", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_351", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is required in only one recipe", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_363", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name an ingredient required by two different recipes", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_383", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is needed for fewer than two recipes", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_387", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meal with more than two recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_392", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal can you find at least two recipes for", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_399", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is required in two or more recipes", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_412", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal has two recipes designated for it", "source": "meal that two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_457", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name an ingredient required in more than two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_462", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredients are used by at least two recipes", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_464", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "name ingredients that is required in  three or more recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_495", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "an ingredient required by at least two recipes", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_512", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has two or more recipes", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_524", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is an ingredient found in no more than two recipes", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_537", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has fewer than two recipes to make it", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_542", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me ingredients required by more than two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_552", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is an ingredient used in more than two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_567", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is used only in a single recipe", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_587", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is in over two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_612", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find two meal recipes", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_614", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with more than two recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_632", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me ingredients required for two recipes at most", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_636", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with at least two recipes", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_650", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredients are required in two recipes", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_665", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me a meal that has more than two recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_717", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meal with less than two recipe", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_733", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require two or more ingredients", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_738", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me ingredients required for fewer than two recipes", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_764", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal with no more than two recipes", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_766", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "for what meals require less than two recipes", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_778", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with two recipes", "source": "meal that two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_784", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which meal had two recipes or more", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_792", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal for which there are fewer than two recipes", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_812", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me meals with two or fewer recipes", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_830", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "for what meals share two or more recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_839", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has at least two recipes for it", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_840", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which food item is needed in  two recipes or more", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_841", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has less than two recipes for it", "source": "meal that less than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_train_855", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which ingredient is used for at most two recipes", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_47", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meal has more than two recipes for it", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_75", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which ingredients are used in more than two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_82", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is called for in two recipes", "source": "ingredient that two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_95", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is needed for more than two recipes", "source": "ingredient that more than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_104", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meals have at least two recipes", "source": "meal that at least two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_105", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredients does both recipes share", "source": "ingredient that at least two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string >=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_107", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes are required by two recipes or less", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_118", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which ingredient is used for less than two recipes", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_124", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what ingredient is used by less than two recipes", "source": "ingredient that less than two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_176", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what meals are at most two recipes for", "source": "meal that at most two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_195", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "tell me recipethat at most require two ingredients", "source": "ingredient that at most two recipe requires", "target": "(call listValue (call countComparative (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string <=) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_206", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a meal for which you can find more than two recipes", "source": "meal that more than two recipe is for", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string >) (number 2) (call getProperty (call singleton en.recipe) (string !type))))", "qid": "recipes_test_210", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what type of cuisine is rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_12", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how much time it takes to cook rice pudding ", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_35", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is cuisine for rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_59", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does it take to prepare rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_64", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_83", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the prep time for rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_87", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "show me preparation time for rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_92", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does rice pudding take to prep", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_103", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what type of cuisine is rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_106", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was the recipe for rice pudding posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_114", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how much time it takes to prepare rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_149", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was rice pudding recipe posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_200", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cook time for rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_223", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "to which cuisine does rice pudding belong", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_232", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does rice pudding take to cook", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_279", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was the rice pudding recipe posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_295", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_344", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cuisine of rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_381", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the posting date for rice pudding", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_446", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cuisine of rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_449", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_461", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time for rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_490", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "a recipe for rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_492", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does it take to  make rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_train_500", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the posting date of rice pudding", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_508", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what day was rice pudding posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_523", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what kind of cuisine is rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_586", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was rice pudding posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_597", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is a cuisine of rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_train_715", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when is rice pudding recipe posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_751", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the preparation of rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_train_851", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was the rice pudding recipe posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_train_856", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the preparation time of rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_test_11", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what cuisine is rice pudding", "source": "cuisine of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cuisine)))", "qid": "recipes_test_71", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "show me cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_test_116", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the preparation time of rice pudding", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_test_132", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does rice pudding take to prepare", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_test_138", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "how long does rice pudding take to prepare", "source": "preparation time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string preparation_time)))", "qid": "recipes_test_156", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "when was the rice pudding recipe posted", "source": "posting date of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string posting_date)))", "qid": "recipes_test_182", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "what is the cooking time of rice pudding", "source": "cooking time of rice pudding", "target": "(call listValue (call getProperty en.recipe.rice_pudding (string cooking_time)))", "qid": "recipes_test_192", "anonymized_target": "(call listValue (call getProperty ANON_ENTITY (ANON_STRING)))"}
{"paraphrased": "which food item is not needed in rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_32", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a meal without rice pudding", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_81", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me ingredients not required for rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_97", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients does rice pudding not need", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_182", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meal doesnt call for rice pudding", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_213", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me the ingredients for rice pudding", "source": "ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_215", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what food items are needed to make rice pudding", "source": "ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_216", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name ingredients that is not required for rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_326", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal other than rice pudding", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_334", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is an ingredient found in rice pudding", "source": "ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_338", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meals does rice pudding not go with", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_355", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meal than rice pudding is not taken", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_458", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredient is not required to make rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_474", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for which meal is rice pudding had", "source": "meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_482", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "for what meal is rice pudding used for", "source": "meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_493", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is an ingredient not found in rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_570", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "name the ingredient not required in rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_575", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me meals including rice pudding", "source": "meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_607", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list  the ingredients of rice pudding", "source": "ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_694", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "ingredients not required to prepare rice pudding", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_722", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a meal with rice pudding as a dish", "source": "meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding))", "qid": "recipes_train_743", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what ingredients are not in the rice pudding recipe", "source": "ingredient that rice pudding not requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_790", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meal is rice pudding not used for", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_train_796", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "in which meal rice pudding cannot be used as part ", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_test_84", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which meals is rice pudding not intended for", "source": "meal that rice pudding not is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string !=) en.recipe.rice_pudding))", "qid": "recipes_test_190", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "the lunch recipe  posting date is 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_15", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find  lunch recipes posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_41", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipes posting date is 2004 and requires milk", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_73", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes posted in 2004 that use milk", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_181", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what lunch recipe was posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_183", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe calling for milk was posted in 2004", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_209", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe posted in 2004 makes a lunch meal", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_210", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me lunch recipes that posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_249", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe posted in 2004 requires milk as an ingredient", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_289", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find the lunch recipes posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_360", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show recipes with milk as an ingredient and is posted in 2004", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_385", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me recipes posted in 2004 requiring milk", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_432", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a lunch recipe from 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_train_452", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe was posted in 2004 and needs milk", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_563", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "a recipe with milk posted in 2004", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_train_704", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipe  that uses milk for its preparation was posted in 2004", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_test_4", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipe posted in 2004 requires milk", "source": "recipe whose posting date is 2004 and that requires milk", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string requires) (string =) en.ingredient.milk))", "qid": "recipes_test_69", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what recipe has a posting date of 2004 and is lunch", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_119", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me lunch recipes posted in 2004", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_166", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which recipe was posted in 2004 and is for lunch", "source": "recipe whose posting date is 2004 and that is for lunch", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.recipe) (string !type)) (string posting_date) (string =) (date 2004 -1 -1)) (string meal) (string =) en.meal.lunch))", "qid": "recipes_test_197", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2004 -1 -1)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is a recipe that is good for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_47", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "list the recipes for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_77", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what recipe requires milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_115", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes that require milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_136", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what recipe uses milk or spinach as an ingredient", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_151", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which recipes are intended for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_261", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes for lunch or supper", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_269", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what recipe needs spinach or milk for its preparation", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_312", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find a recipe that is good for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_374", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which recipes are for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_471", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what recipe calls for either milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_646", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show recipes for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes requiring milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_808", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which recipes require milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_train_835", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me recipes that require milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_test_35", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find me all recipes requires milk or spinach", "source": "recipe that requires milk or spinach", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call concat en.ingredient.milk en.ingredient.spinach)))", "qid": "recipes_test_64", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what recipe can be used for a lunch or dinner meal", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_test_90", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "name a recipe for lunch or dinner", "source": "recipe that is for lunch or dinner", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call concat en.meal.lunch en.meal.dinner)))", "qid": "recipes_test_178", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find a recipe thatll feed two people", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_2", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes make at least 2 meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_4", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show recipes that could be used in any meal", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_11", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that required two or more ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_26", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a recipe used for fewer than two meals", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_28", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes for two meals at most", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_60", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires fewer than two ingredients", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_62", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires three or more ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_72", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes requiring one ingredient", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_84", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is designed for more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_132", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a recipe requiring fewer than two ingredients", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_141", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe can make fewer than two meals", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_147", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "the receipe is for two meal", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_159", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipe for two meals", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_175", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes with fewer than two ingredients", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_180", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe calls for fewer than two ingredients", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_196", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes can make two meals", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_204", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires at the least two ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_219", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe of less than two meal", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_230", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what are the recipe that at most use two ingredients ", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_251", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe for only one meal", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_255", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes require no more than two ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_262", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me a recipe that requires only two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_264", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that use two ingredients or less", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_267", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe needs more than two ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_290", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes are for less than two meals", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_291", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require at least two ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_296", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes for more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_309", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe calls for over two ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_347", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is a recipe that is for more than two different meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_359", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipes with just two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_382", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a recipe that uses two or more ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_391", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe calls for two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_418", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that call for more than two ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_419", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for no more than two meals", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_420", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is recipe for a meal", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_425", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe can be used for at least two meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_431", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that need at least three ingrediants", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_440", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe needs less than two food items for its preparation", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_456", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes requiring two or fewer ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_475", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes need two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_497", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes require at leas two ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_506", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how many recipes use more than two ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_530", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes need three or more ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_553", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipes for less than three meals", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_555", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe requires at least two ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_569", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes for at least two meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_573", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes are for two meals at most", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_582", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes for fewer than two meals", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_599", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe for three or more meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_611", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe requires less than three ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_616", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes with two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_634", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipes that can be used for  more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_651", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "this receipe requires more than two ingredient", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_659", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes require one or two ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_660", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require at most two ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_661", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe can be used for two or more meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_668", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipes for two meal", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_690", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for two meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_696", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for less than two people", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_701", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipes that need two ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_712", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for two or fewer meals", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_724", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe requires two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_765", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "single ingredient recipe", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_780", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for two", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_786", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is found in two different meals", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_793", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that use less than two ingredients", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_804", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that require two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_805", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that involve two or more ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_807", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes designed for two meals", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_822", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require more than two ingredients", "source": "recipe that requires more than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_833", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe with only one ingredient", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_834", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe needs a minimum of two ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_845", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that can be used for two meals", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_846", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes good for at least two meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_train_858", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe calls for two or less ingredients", "source": "recipe that requires at most two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_861", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find me the recipes need more than one ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_train_862", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipes are for for two or more meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_6", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes serve more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_12", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe need two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_13", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes that could be used for one or two meals", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_23", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes are for less than two meals", "source": "recipe that is for less than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_24", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes for meals for two", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_42", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe is for more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_53", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe for at least two meal", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_100", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_110", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "recipe for more than two meals", "source": "recipe that is for more than two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_130", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipe is for two meals", "source": "recipe that is for two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_141", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "show me recipes designed for two meals or less", "source": "recipe that is for at most two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string <=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_143", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires two or more ingredients", "source": "recipe that requires at least two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string >=) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_160", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe can make two or more meals", "source": "recipe that is for at least two meal", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string >=) (number 2) (call getProperty (call singleton en.meal) (string !type))))", "qid": "recipes_test_169", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which recipes require only a single ingredient", "source": "recipe that requires less than two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string <) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_170", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "find recipes that are made with two ingredients", "source": "recipe that requires two ingredient", "target": "(call listValue (call countComparative (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (number 2) (call getProperty (call singleton en.ingredient) (string !type))))", "qid": "recipes_test_207", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what recipe requires the ingredients of rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_109", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredient is found in rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_256", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipe requires the same ingredient as rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_336", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me meal recipes including rice pudding", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_340", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal is the recipe rice pudding for", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_454", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me recipes for rice pudding meals", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_473", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me recipes requiring an ingredient from rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_536", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipes require the same ingredients as rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_540", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipes are for the same meal as rice pudding", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_730", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipes require the same ingredients as rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_758", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show recipes for the meal as the same for rice pudding", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_train_842", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipe calls for the same ingredients as rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_test_16", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is a recipe for a meal with rice pudding", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_test_59", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipes have a common ingredient in rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_test_67", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal is the rice pudding recipe", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_test_88", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what are ingredients of rice pudding", "source": "recipe that requires ingredient that rice pudding requires", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_test_157", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "recipe for meal same as rice pudding", "source": "recipe that is for meal that rice pudding is for", "target": "(call listValue (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) en.recipe.rice_pudding)))", "qid": "recipes_test_209", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipe requires milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_25", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me meals requiring milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_37", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredients are used only for lunch", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_107", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "for which meal is that recipe that has milk as one of its ingredients", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_126", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipe is for a lunchtime meal", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_178", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredients do lunch recipes call for", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_259", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me ingredients required by recipes that require milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_265", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me recipes requiring the ingredient milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_292", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meals are recipes for lunch for", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_299", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipes ingredient does this lunch require", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_301", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "a recipe with milk as an ingredient", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_361", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meals have recipes that use milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_398", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what recipe is a recipe for lunch", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_408", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "find meal recipes for lunch", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredients are needed for lunch recipes", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_525", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show me ingredients required by lunch recipes", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_557", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipes require milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_566", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal is a recipe that requires milk for", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_579", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "meal with milk recipe", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_603", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "list recipes that require milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_609", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what other ingredients do recipes that use milk require", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_train_628", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is an ingredient found in a lunch recipe", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_654", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "show ingredients for lunch recipes", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_678", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredients do lunch recipes need", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_train_806", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal has a recipe requiring milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_27", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what meal did that recipe i used for lunch go with", "source": "meal that recipe that is for lunch is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_test_43", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredient is called for in the same recipe as milk", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which meal recipe requires milk for preparation", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_83", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is a recipe requiring milk", "source": "meal that recipe that requires milk is for", "target": "(call listValue (call filter (call getProperty (call singleton en.meal) (string !type)) (call reverse (string meal)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_109", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "which recipe needs milk for  its preparation", "source": "ingredient that recipe that requires milk requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string requires) (string =) en.ingredient.milk)))", "qid": "recipes_test_140", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what ingredient is called for by a lunch recipe", "source": "ingredient that recipe that is for lunch requires", "target": "(call listValue (call filter (call getProperty (call singleton en.ingredient) (string !type)) (call reverse (string requires)) (string =) (call filter (call getProperty (call singleton en.recipe) (string !type)) (string meal) (string =) en.meal.lunch)))", "qid": "recipes_test_194", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
