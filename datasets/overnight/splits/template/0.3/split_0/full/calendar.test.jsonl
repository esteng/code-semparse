{"paraphrased": "what meeting did alice attend at the greenberg cafe", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_543", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings attended by alice in greenberg cafe", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_test_48", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings at greenberg cafe attended by alice", "source": "meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_42", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting is located at greenberg cafe and alice will be attending", "source": "meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_264", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings in greenberg cafe that alice is attending", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_3", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting is at greenberg cafe and alice is attending", "source": "meeting whose location is greenberg cafe and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_498", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meetings take place in greenbug cafe", "source": "meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings alice has attended at the greenberg cafe", "source": "meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_66", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meetings are located at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_24", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find the meeting with alice at greenberg cafe", "source": "meeting whose attendee is alice and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_53", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings lasting three hours beginning at 10 am", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_73", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting that starts at 10am and ends at 1pm", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_554", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me meetings that take 3 hours and start at 10am", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_test_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings three hours long which end at 10 am", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_520", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all three hour meetings that begin at 10am", "source": "meeting whose length is three hours and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))", "qid": "calendar_test_9", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting starts at 700 am and ends at 000 am", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_415", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all three hour meetings that end at 10am", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_371", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meetings ending at 10 am that are three hours long", "source": "meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_243", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting has a length smaller than three hours", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_test_73", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meetings that are three hours long or less", "source": "meeting whose length is at most three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_346", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings shorter than 3 hours", "source": "meeting whose length is at most three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_test_49", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings at least three hours long", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_214", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meetings that are three hours or longer", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_207", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting is at least three hours", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_476", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings shorter than three hours", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_467", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings scheduled to run for 3 hours", "source": "meeting whose length is at most three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_381", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "find me a meeting shorter than three hours", "source": "meeting whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "meeting is at least 3 hours long", "source": "meeting whose length is at least three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendar_train_482", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what location is weekly standup and annual review", "source": "location that is location of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_525", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "people that attend the weekly standup meeting or the annual review meeting", "source": "person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_test_22", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "locations of the weekly standup meeting or annual review meeting", "source": "location that is location of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_656", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "who is at the weekly standup or annual review", "source": "person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_61", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me all people attending either the weekly standup meeting or annual review", "source": "person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_445", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "person is attendee of weekly standup or annual review", "source": "person that is attendee of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_206", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "location same as weekly meeting or annual review", "source": "location that is location of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_test_77", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "where will weekly standup and annual review take place", "source": "location that is location of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_495", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me where the weekly standup and annual review is happening", "source": "location that is location of weekly standup or annual review", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review)))", "qid": "calendar_train_536", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me all meetings which are exactly one hour or exactly three hours long", "source": "meeting whose length is three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))))", "qid": "calendar_train_565", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "show me all meetings that run either three hours or one hour", "source": "meeting whose length is three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))))", "qid": "calendar_test_125", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "meetings that are three hours long or one hour long", "source": "meeting whose length is three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))))", "qid": "calendar_train_332", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "what meeting lasts from one to three hours", "source": "meeting whose length is three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call concat (number 3 en.hour) (number 1 en.hour))))", "qid": "calendar_test_109", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (ANON_NUMBER) (ANON_NUMBER))))"}
{"paraphrased": "what person is attending weekly startup", "source": "person that is attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))", "qid": "calendar_train_51", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what person is not attending the weekly standup meeting", "source": "person that is not attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_112", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what location does not hold the weekly standup meeting", "source": "location that is not location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_553", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "people that do not attend the weekly standup meeting", "source": "person that is not attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_127", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what location is not the same as weekly standup", "source": "location that is not location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_452", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me who is not at the weekly standup", "source": "person that is not attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_140", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "location different from location of weekly standup", "source": "location that is not location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_500", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all attendees of the weekly standup meeting", "source": "person that is attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) en.meeting.weekly_standup))", "qid": "calendar_test_149", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all locations which do not host the weekly standup", "source": "location that is not location of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_147", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "who is not an attendee of weekly standup", "source": "person that is not attendee of weekly standup", "target": "(call listValue (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string !=) en.meeting.weekly_standup))", "qid": "calendar_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what meeting is at greenberg cafe and ends at 10am", "source": "meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)))", "qid": "calendar_test_83", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings at greenberg cafe ending at 10 am", "source": "meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)))", "qid": "calendar_test_61", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings attended by alice beginning at 10 am", "source": "meeting whose attendee is alice and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string start_time) (string =) (time 10 0)))", "qid": "calendar_test_42", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting which starts at 10 am at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_330", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meeting at greenberg cafe ends at 1000 am", "source": "meeting whose location is greenberg cafe and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)))", "qid": "calendar_test_158", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting has a location at greenberg cafe and starts at 10am", "source": "meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_455", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "meetings at greenberg cafe that start at 10am", "source": "meeting whose location is greenberg cafe and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_113", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting has alice attending and starts at 10am", "source": "meeting whose attendee is alice and whose start time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string start_time) (string =) (time 10 0)))", "qid": "calendar_train_198", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "what meeting ending at 10am is alice attending", "source": "meeting whose attendee is alice and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_391", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings ending at 10am that alice is attending", "source": "meeting whose attendee is alice and whose end time is 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)))", "qid": "calendar_train_217", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (time 10 0)))"}
{"paraphrased": "show me all meetings labeled as important that start at 10 am", "source": "meeting whose start time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_train_82", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what important meetings start at 10am", "source": "meeting whose start time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_train_170", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "which important meeting starts at 10 in the morning", "source": "meeting whose start time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_test_151", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "important meetings that end at 10am", "source": "meeting whose end time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_train_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what meetings are imporant and start at 10am", "source": "meeting whose start time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_train_503", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what important meeting has an end time of 10am", "source": "meeting whose end time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_test_120", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings marked important which end at 10 am", "source": "meeting whose end time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_train_395", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what important meeting has a start time at 10am", "source": "meeting whose start time is 10am and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)))", "qid": "calendar_test_160", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings on january 2nd happening at the greenberg cafe", "source": "meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_604", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meetings take place on jan 2 in greenberg cafe", "source": "meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_110", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting has alice attending on jan 2", "source": "meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_test_110", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "meeting on jan 2nd with alice as attendee", "source": "meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_393", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me meetings on jan 2 with alice", "source": "meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_324", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what meeting has a location at greeberg cafe on jan 2", "source": "meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_544", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings that alice is attending on jan 2", "source": "meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_test_117", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me meetings at greenberg cafe on jan 2", "source": "meeting whose location is greenberg cafe and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_446", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "show me all meetings alice attended on january 2nd", "source": "meeting whose attendee is alice and whose date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)))", "qid": "calendar_train_645", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "which meetings are important", "source": "meeting that is important and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string is_important)))", "qid": "calendar_train_574", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings marked important", "source": "meeting that is important and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string is_important)))", "qid": "calendar_train_137", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me important meetings", "source": "meeting that is important and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string is_important)))", "qid": "calendar_train_590", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "select all important meetings", "source": "meeting that is important and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string is_important)))", "qid": "calendar_train_92", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what is an important meeting", "source": "meeting that is important and that is important", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string is_important)))", "qid": "calendar_train_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all 10am meetings that alice is attending", "source": "meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_296", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings at greenberg cafe that end a 10am", "source": "meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_180", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me the meeting alice will attend which ends at 10am", "source": "meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_230", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings at the greenberg cafe ending at 10 am", "source": "meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_196", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings which alice has attended that end at 10 am", "source": "meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_307", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meeting at greenberg cafe which ends at 10 am", "source": "meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_475", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meetings in greenberg cafe that start at 10am", "source": "meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_test_10", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "meeting featuring alice as attendee starting at 10am", "source": "meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_607", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show meetings that start at 10am in greenberg cafe", "source": "meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))", "qid": "calendar_train_262", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me all meetings alice has attended which begin at 10 am", "source": "meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))", "qid": "calendar_train_241", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which meetings in greenberg cafe will last three hours", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_508", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meetings attended by alice that are three hours long", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_657", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what three hour meeting has alice attending", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_145", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what three hour meeting is at greenberg cafe", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all three hour meetings that alice is attending", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_test_167", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings three hours long happening at the greenberg cafe", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_451", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three hour meeting with alice as attendee", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_181", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three hour long meeting at greenberg", "source": "meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_321", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings attended by alice which are three hours long", "source": "meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_585", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meetings held in the most locations", "source": "meeting that has the most number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string location)))", "qid": "calendar_train_179", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show me the meetings with the most attendees", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_test_74", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with fewest locations", "source": "meeting that has the least number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string location)))", "qid": "calendar_test_147", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which meeting has the most people scheduled to attend", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_test_128", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with largest number of attendees", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_train_611", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "what meeting had the fewest people show up", "source": "meeting that has the least number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string attendee)))", "qid": "calendar_train_23", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which meeting is attended by the most people", "source": "meeting that has the most number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string attendee)))", "qid": "calendar_train_299", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with largest number of locations", "source": "meeting that has the most number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string location)))", "qid": "calendar_train_334", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "show me meetings with the most locations", "source": "meeting that has the most number of location", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string max) (string location)))", "qid": "calendar_train_592", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "meeting with least attendees", "source": "meeting that has the least number of attendee", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.meeting) (string !type)) (string min) (string attendee)))", "qid": "calendar_train_584", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING)))"}
{"paraphrased": "which meetings are significant", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_443", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what are some important meetings", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_test_93", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "important meeting", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_460", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "important meetings", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_620", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings marked as important", "source": "meeting that is important", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)))", "qid": "calendar_train_221", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me all meetings that have two attendees", "source": "meeting that has two attendee", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (number 2)))", "qid": "calendar_train_31", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what meeting has less than two locations", "source": "meeting that has less than two location", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string <) (number 2)))", "qid": "calendar_test_165", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings that have at most two locations", "source": "meeting that has at most two location", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string <=) (number 2)))", "qid": "calendar_train_169", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings which has no more than two attendees", "source": "meeting that has at most two attendee", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string <=) (number 2)))", "qid": "calendar_train_223", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me meetings that have two attendees", "source": "meeting that has two attendee", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (number 2)))", "qid": "calendar_train_29", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what meeting has two attendees or less", "source": "meeting that has at most two attendee", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string <=) (number 2)))", "qid": "calendar_train_466", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings with at least two people attending", "source": "meeting that has at least two attendee", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string >=) (number 2)))", "qid": "calendar_train_6", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meeting which has minimum two attendees", "source": "meeting that has at least two attendee", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string >=) (number 2)))", "qid": "calendar_train_87", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meetings held in less than two locations", "source": "meeting that has less than two location", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string <) (number 2)))", "qid": "calendar_test_119", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what meeting has two locations", "source": "meeting that has at most two location", "target": "(call listValue (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string <=) (number 2)))", "qid": "calendar_train_271", "anonymized_target": "(call listValue (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "three hour meeting", "source": "meeting whose length is three hours and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_401", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me meetings that take 3 hours", "source": "meeting whose length is three hours and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_22", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings lasting for three hours", "source": "meeting whose length is three hours and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_7", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "show me all meetings scheduled for three hourse", "source": "meeting whose length is three hours and whose length is three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))", "qid": "calendar_train_388", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "meeting longer than one or three hours", "source": "meeting whose length is larger than three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_90", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what meeting is one hour or longer", "source": "meeting whose length is at least three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_247", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what meeting was shorter than three hours", "source": "meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_173", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "meetings that are shorter than three hours or shorter than one hour", "source": "meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_210", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "she me all meetings with a duration between 1 and 3 hours", "source": "meeting whose length is at most three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "meetings that are three hours or longer or an hour or longer", "source": "meeting whose length is at least three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_128", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "what meeting is no greater than one to three hours", "source": "meeting whose length is at most three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_293", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "show me meetings shorter than three hours", "source": "meeting whose length is at most three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_test_15", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "show me all meetings at least one hour or three hours long", "source": "meeting whose length is at least three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_551", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "show me all meetings scheduled to be less than three hours or less than one hour", "source": "meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour)))))", "qid": "calendar_train_47", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER)))))"}
{"paraphrased": "meetings on or before january 2", "source": "meeting whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_177", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "meetings held later than january 2", "source": "meeting whose date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_49", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings after january 2nd", "source": "meeting whose date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_test_67", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting has a date no later than jan 2", "source": "meeting whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_625", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "meetings held before january 2", "source": "meeting whose date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_486", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings happening after jan 2nd", "source": "meeting whose date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_215", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "meeting before jan 2", "source": "meeting whose date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_158", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting will take place no later than jan 2", "source": "meeting whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_335", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings happening on or before january 2nd", "source": "meeting whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_328", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what meeting has an earlier date than jan 2", "source": "meeting whose date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendar_train_253", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
