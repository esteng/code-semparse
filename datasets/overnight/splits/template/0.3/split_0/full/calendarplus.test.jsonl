{"paraphrased": "how many locations are there for either the weekly standup or annual review", "source": "number of location that is location of weekly standup or annual review", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_test_19", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "how many attendees are there at the weekly standup or annual review meetings", "source": "number of person that is attendee of weekly standup or annual review", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string =) (call concat en.meeting.weekly_standup en.meeting.annual_review))))", "qid": "calendarplus_train_86", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY))))"}
{"paraphrased": "all the attendee of meeting start by 10am  and end by 10am", "source": "attendee of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_test_100", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "length of meeting whose end time is 10am", "source": "length of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_71", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what dates have meetings ending at 10am", "source": "date of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_test_49", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where is the meeting that starts at 10 am conducted", "source": "location of meeting whose start time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_4", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that ended at 10am start", "source": "start time of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_145", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what date does the meeting start and end at 1000 am", "source": "date of meeting whose end time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_20", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "10am is the meetings end time", "source": "end time of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_test_41", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "is there information on the end time of the meetings beginning at 10am", "source": "end time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_22", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started at 10am end", "source": "end time of meeting whose start time is 10am and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)) (string end_time)))", "qid": "calendarplus_train_330", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "attendee of meeting whose end time is 10am", "source": "attendee of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_206", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting that ended at or before 3pm", "source": "length of meeting whose end time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_test_56", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that started after 3pm", "source": "attendee of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_train_91", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "who is the attendee of the meeting which starts at 10 am or 3 pm", "source": "attendee of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string attendee)))", "qid": "calendarplus_train_190", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what day was the meeting that started at or before 3pm", "source": "date of meeting whose start time is at most 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_229", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "show me the dates of any meetings that starts after 10am", "source": "date of meeting whose start time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string date)))", "qid": "calendarplus_train_387", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how long were the meetings that ended before 10am or 3pm", "source": "length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_train_77", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that ended before 3pm start", "source": "start time of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string start_time)))", "qid": "calendarplus_test_53", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "where is a meeting that ends between 10am  3pm", "source": "location of meeting whose end time is larger than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string location)))", "qid": "calendarplus_train_422", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting that started at or after 10am end", "source": "end time of meeting whose start time is at least 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string end_time)))", "qid": "calendarplus_train_457", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meetings ending before 3pm", "source": "length of meeting whose end time is smaller than 10am or 3pm", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (string length)))", "qid": "calendarplus_train_416", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (time 10 0) (time 15 0)))) (ANON_STRING)))"}
{"paraphrased": "how are meetings are held on jan 2 for a duration of 3 hours", "source": "number of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2))))", "qid": "calendarplus_train_463", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2))))"}
{"paraphrased": "list at least three hours which are not the start time of the weekly standup", "source": "three hours or one hour that is not start time of weekly standup", "target": "(call listValue (call filter (call concat (number 3 en.hour) (number 1 en.hour)) (call reverse (string start_time)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_train_33", "anonymized_target": "(call listValue (call filter (call concat (ANON_NUMBER) (ANON_NUMBER)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the duration of the important meeting that is attended by alice", "source": "total length of meeting whose attendee is alice and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)) (string length))))", "qid": "calendarplus_train_183", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "how long was the important greenberg cafe meeting", "source": "total length of meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)) (string length))))", "qid": "calendarplus_train_548", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "total length of an important meeting at greenberg cafe", "source": "total length of meeting whose location is greenberg cafe and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)) (string length))))", "qid": "calendarplus_test_23", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting that alice is attending that is important", "source": "total length of meeting whose attendee is alice and that is important", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)) (string length))))", "qid": "calendarplus_train_411", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what meetings do i have on jan 2 that are shorter then three hours", "source": "meeting whose date is jan 2 whose length is at most three hours", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_148", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what time did the important three hour meeting end", "source": "end time of meeting whose length is three hours and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)) (string end_time)))", "qid": "calendarplus_train_260", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what time did the important three hour meeting end", "source": "end time of meeting whose length is three hours and that is important", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)) (string end_time)))", "qid": "calendarplus_test_124", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "how many meetings end at 10 am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_444", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "how many meetings do i have at 10am", "source": "number of meeting whose end time is 10am and whose end time is 10am", "target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0))))", "qid": "calendarplus_train_536", "anonymized_target": "(call listValue (call .size (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) (time 10 0))))"}
{"paraphrased": "on what date was the meeting held which lasted three hours and was attended by alice", "source": "date of meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_test_83", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when is my meeting at greenberg cafe that is shorter than three hours", "source": "date of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string date)))", "qid": "calendarplus_train_198", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "alices meeting was 3 hours long", "source": "length of meeting whose attendee is alice and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)) (string length)))", "qid": "calendarplus_train_459", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "end time of three hours long meeting whose location is greenberg cafe", "source": "end time of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_258", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "when did the three hour greenberg cafe meeting end", "source": "end time of meeting whose location is greenberg cafe and whose length is three hours", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)) (string end_time)))", "qid": "calendarplus_train_249", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING)))"}
{"paraphrased": "what is the duration of the meeting that ends at 10 am ", "source": "total length of meeting whose length is three hours and whose end time is 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)) (string length))))", "qid": "calendarplus_train_300", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING))))"}
{"paraphrased": "show me all meetings after january 2nd that are three hours long", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_208", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "three hours long meeting not before jan 2", "source": "meeting whose length is three hours whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_380", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me meetings after jan 2 that are three hours", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_199", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings before jan 2 shorter than three hours", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_314", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me all meetings that are three hours long and are no later than january 2nd", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_236", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "name a three hour meeting after jan 2", "source": "meeting whose length is three hours whose date is larger than jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_134", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the three hour meeting no later than jan 2", "source": "meeting whose length is three hours whose date is at most jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_296", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which meeting has less than two attendees", "source": "meeting whose location is meeting that has less than two attendee", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string <) (number 2))))", "qid": "calendarplus_test_85", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "what meeting had the same location as a meeting that had two locations", "source": "meeting whose location is meeting that has two location", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (number 2))))", "qid": "calendarplus_train_415", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER))))"}
{"paraphrased": "show me the meeting at the greenberg cafe that takes place on january 2nd", "source": "meeting whose location is greenberg cafe whose date is at least jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_13", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not after jan 2", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_102", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time did the jan 2 weekly standup end", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_462", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me the end time of weekly standup on january 2nd or later", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_151", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time was weekly standup on jan 2", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_508", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what is the length of the weekly standup that takes place on january 2nd", "source": "length of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_164", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "end time of weekly standup not before jan 2", "source": "end time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_17", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "what time do the weekly standup meetings on january 2 and after start", "source": "start time of weekly standup whose date is at least jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_train_248", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me what time the weekly meeting on january 2nd ended", "source": "end time of weekly standup whose date is at most jan 2", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "calendarplus_test_79", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me who attended the 10am meeting on january 2nd", "source": "attendee of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_train_439", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when does the meeting on january 2nd end", "source": "end time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_test_99", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "attendee of three hours meeting on jan 2", "source": "attendee of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string attendee)))", "qid": "calendarplus_train_507", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time was the start of the three hour meeting on january 2", "source": "start time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_497", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting on jan 2 start", "source": "start time of meeting whose length is three hours and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_test_68", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what meeting started at the same time as the meeting that was over three hours", "source": "meeting whose start time is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_363", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "show me meetings whose length is more than three hours", "source": "meeting whose length is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_271", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what meeting had someone who went to an over three hour meeting attend", "source": "meeting whose attendee is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_test_26", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what meeting was in the same place as the meeting that was over three hours", "source": "meeting whose location is meeting whose length is larger than three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour)))))", "qid": "calendarplus_train_93", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER)))))"}
{"paraphrased": "what is the average length of a meeting that ends no later than 10 am", "source": "average length of meeting whose end time is at most 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_train_327", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "what is the total length of the meeting which started on or before 10am", "source": "total length of meeting whose start time is at most 10am", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_train_286", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "show me meetings before 10am", "source": "average length of meeting whose end time is at most 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_train_471", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "show me the average length of any meetings that end no later than 10am", "source": "average length of meeting whose end time is at most 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_test_120", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings which start before 10am", "source": "average length of meeting whose start time is smaller than 10am", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))) (string length))))", "qid": "calendarplus_test_121", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING))))"}
{"paraphrased": "weekly standup or annual review which ends before 10am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_505", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "when is the weekly standup or annual review meeting which ends at 10 am", "source": "weekly standup or annual review whose end time is at most 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_423", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standup or annual review ended at or after 10am", "source": "weekly standup or annual review whose end time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_142", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me the date of the annual review that starts at 10 am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_37", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "weekly standup or annual review with start time at least 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_382", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me weekly standups that ends before 10 am", "source": "weekly standup or annual review whose end time is smaller than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_160", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standup or annual review started at or after 10am", "source": "weekly standup or annual review whose start time is at least 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_538", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all the weekly standup and annual review that ended after 10am", "source": "weekly standup or annual review whose end time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_test_76", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which weekly standups or annual reviews start after 10 am", "source": "weekly standup or annual review whose start time is larger than 10am", "target": "(call listValue (call filter (call concat en.meeting.weekly_standup en.meeting.annual_review) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_219", "anonymized_target": "(call listValue (call filter (call concat ANON_ENTITY ANON_ENTITY) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "where was the meeting that ended at or before 10am", "source": "location of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string location)))", "qid": "calendarplus_test_48", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "end time of meeting that starts not after 10am", "source": "end time of meeting whose start time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string end_time)))", "qid": "calendarplus_train_543", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what is the start time of the meeting that ends at the latest at 10am", "source": "start time of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string start_time)))", "qid": "calendarplus_train_343", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "show me the meeting whose end time is at most 10am", "source": "length of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length)))", "qid": "calendarplus_train_430", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what meetings end at 10am at the latest", "source": "start time of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string start_time)))", "qid": "calendarplus_train_272", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "list the attendees of meetings which ended at 10am or before", "source": "attendee of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string attendee)))", "qid": "calendarplus_train_481", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meeting that begins at 10am at the latest", "source": "length of meeting whose start time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length)))", "qid": "calendarplus_train_223", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "where are the meetings held whose end times are no later than 10am", "source": "location of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string location)))", "qid": "calendarplus_train_217", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "the meetings starts at the most by 10am", "source": "length of meeting whose start time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string length)))", "qid": "calendarplus_test_78", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "what is the location of the meeting that ends at the latest at 10am", "source": "location of meeting whose end time is at most 10am", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))) (string location)))", "qid": "calendarplus_train_105", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))) (ANON_STRING)))"}
{"paraphrased": "how many meetings do i have before january 2", "source": "number of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_train_169", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "show me the number of meetings that are before january 3rd", "source": "number of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_train_87", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "how many meetings were after jan 3", "source": "number of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))", "qid": "calendarplus_test_135", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3))))))"}
{"paraphrased": "which meeting s duration is greater than 3 hoursjan2 or jan 3", "source": "jan 2 or jan 3 whose length is larger than three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_429", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me meetings from january 2nd to january 3rd that lasted more than 3 hours", "source": "jan 2 or jan 3 whose length is at most three hours", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_13", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "how long was the meeting that was on the same day as or after weekly standup", "source": "total length of meeting whose date is at least date of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string date)))) (string length))))", "qid": "calendarplus_train_254", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings that end before the start time of weekly standup", "source": "average length of meeting whose end time is smaller than start time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string length))))", "qid": "calendarplus_train_360", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that ended after weekly standup", "source": "total length of meeting whose end time is larger than end time of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string end_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length))))", "qid": "calendarplus_test_4", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "average length of meeting that starts after end time of weekly standup", "source": "average length of meeting whose start time is larger than end time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length))))", "qid": "calendarplus_train_437", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "on average how long are the meetings that start at the same time or after weekly standup ends", "source": "average length of meeting whose start time is at least end time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length))))", "qid": "calendarplus_train_414", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "how long are all my meetings before weekly standup", "source": "total length of meeting whose start time is at most start time of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string length))))", "qid": "calendarplus_train_309", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings which start at or before the start time of the weekly standup", "source": "average length of meeting whose start time is at most start time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <=) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string start_time)))) (string length))))", "qid": "calendarplus_train_435", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "total length of meeting that starts after end time of weekly standup", "source": "total length of meeting whose start time is larger than end time of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length))))", "qid": "calendarplus_train_318", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "average length of meeting that starts before end time of weekly standup", "source": "average length of meeting whose start time is smaller than end time of weekly standup", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length))))", "qid": "calendarplus_train_391", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "show me lengths of meetings that started before the start time of the weekly roundup", "source": "total length of meeting whose start time is smaller than end time of weekly standup", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (call getProperty en.meeting.weekly_standup (string end_time)))) (string length))))", "qid": "calendarplus_train_433", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call getProperty ANON_ENTITY (ANON_STRING)))) (ANON_STRING))))"}
{"paraphrased": "where is the important meeting on jan 2", "source": "location of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string location)))", "qid": "calendarplus_train_472", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "where was the important meeting on jan 2", "source": "location of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string location)))", "qid": "calendarplus_train_358", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "when did the important meeting on jan 2 start", "source": "start time of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_373", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what is important is the end time and date jan 2 of the meeting", "source": "end time of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string end_time)))", "qid": "calendarplus_train_467", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "on jan 2nd what was the start time of the meeting marked important", "source": "start time of meeting that is important and whose date is jan 2", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string start_time)))", "qid": "calendarplus_train_319", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what time did the three or more hour weekly standup start", "source": "start time of weekly standup whose length is at least three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_523", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "start time of weekly standup that is smaller than three hours", "source": "start time of weekly standup whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_test_63", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "end time of weekly standup not more than three hours long", "source": "end time of weekly standup whose length is at most three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_482", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "length of weekly standup is not more than three hours", "source": "length of weekly standup whose length is at most three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string length)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_39", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what time did the three hour or longer weekly standup end", "source": "end time of weekly standup whose length is at least three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_398", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what is the end time of the weekly standup which lasted three hours or less", "source": "end time of weekly standup whose length is at most three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_167", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what is the end time of the weekly standup that lasts as least three hours long", "source": "end time of weekly standup whose length is at least three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string end_time)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_282", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what weekly standup events are shorter then three hours", "source": "start time of weekly standup whose length is smaller than three hours", "target": "(call listValue (call filter (call getProperty en.meeting.weekly_standup (string start_time)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_154", "anonymized_target": "(call listValue (call filter (call getProperty ANON_ENTITY (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "show me the meetings that end at 10am and are located at greenberg cafe", "source": "total length of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_332", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting that started at 10am at the greenberg cafe", "source": "average length of meeting whose start time is 10am and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_test_84", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings held in the greenberg cafe which ended at 10am", "source": "average length of meeting whose end time is 10am and whose location is greenberg cafe", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe) (string length))))", "qid": "calendarplus_train_5", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "meeting length that alice is attending that starts at 10 am", "source": "total length of meeting whose start time is 10am and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_403", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "how long was the meeting with alice that lasted until 10am", "source": "total length of meeting whose end time is 10am and whose attendee is alice", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice) (string length))))", "qid": "calendarplus_train_378", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "which is not the commencing date of the weekly standup meeting  jan 2 or jan 3", "source": "jan 2 or jan 3 that is not start time of weekly standup", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (string start_time)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_test_129", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "did weekly standup start on jan 2 or jan 3", "source": "jan 2 or jan 3 that is not start time of weekly standup", "target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (string start_time)) (string !=) en.meeting.weekly_standup))", "qid": "calendarplus_train_204", "anonymized_target": "(call listValue (call filter (call concat (date 2015 1 2) (date 2015 1 3)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "how long is the 10 am jan 2 meeting", "source": "length of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_test_40", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "how long was the meeting on jan 2 that ended at 10am", "source": "length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_test_136", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the start time for the meeting on january 2nd which ends at 10am", "source": "start time of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_test_94", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting on jan 2 that started at 10am", "source": "attendee of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string attendee)))", "qid": "calendarplus_train_475", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "location of meeting on jan 2 that starts at 10am", "source": "location of meeting whose date is jan 2 and whose start time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_88", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what was the start time of the jan 2 meeting that ended at 10am", "source": "start time of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string start_time)))", "qid": "calendarplus_train_118", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "show me new date of meeting on jan 2 which ended at 10am", "source": "date of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string date)))", "qid": "calendarplus_train_323", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "where was the jan 2 meeting that ended at 10am", "source": "location of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string location)))", "qid": "calendarplus_train_366", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the length of the meeting which ended at 10am on january 2", "source": "length of meeting whose date is jan 2 and whose end time is 10am", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)) (string length)))", "qid": "calendarplus_train_288", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (time 10 0)) (ANON_STRING)))"}
{"paraphrased": "what is the date of the meeting that ends at the end time of the weekly standup", "source": "date of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string date)))", "qid": "calendarplus_test_123", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that started when weekly standup ended end", "source": "end time of meeting whose start time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string end_time)))", "qid": "calendarplus_train_306", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time do meetings end when they have attendees who also attend the weekly standup", "source": "end time of meeting whose attendee is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call getProperty en.meeting.weekly_standup (string attendee))) (string end_time)))", "qid": "calendarplus_train_460", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the end time of the meeting which starts at the same time as the weekly standup", "source": "end time of meeting whose start time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string start_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string end_time)))", "qid": "calendarplus_train_490", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "how long was weekly standup", "source": "length of meeting whose length is length of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call getProperty en.meeting.weekly_standup (string length))) (string length)))", "qid": "calendarplus_test_57", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time does the meeting end that ends at the same time as the weekly standup", "source": "end time of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string end_time)))", "qid": "calendarplus_train_341", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "who went to the meeting that ended at the same time as weekly standup", "source": "attendee of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string attendee)))", "qid": "calendarplus_train_401", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "show me the length of meetings with attendees of the weekly standup", "source": "length of meeting whose attendee is attendee of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call getProperty en.meeting.weekly_standup (string attendee))) (string length)))", "qid": "calendarplus_train_45", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what time did the meeting that ended at the same time as weekly standup start", "source": "start time of meeting whose end time is end time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string end_time))) (string start_time)))", "qid": "calendarplus_train_392", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "length of meeting that ends at start time of weekly standup", "source": "length of meeting whose end time is start time of weekly standup", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (string end_time) (string =) (call getProperty en.meeting.weekly_standup (string start_time))) (string length)))", "qid": "calendarplus_train_66", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call getProperty ANON_ENTITY (ANON_STRING))) (ANON_STRING)))"}
{"paraphrased": "what is the average length of the meetings after jan 2", "source": "average length of meeting whose date is larger than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_501", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings before january 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_492", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what is the average length of meetings held on or after january 2", "source": "average length of meeting whose date is at least jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_513", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "what was the average length of all meetings prior to jan 2", "source": "average length of meeting whose date is smaller than jan 2 or jan 3", "target": "(call listValue (call aggregate (string avg) (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string <) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (string length))))", "qid": "calendarplus_train_106", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (date 2015 1 2) (date 2015 1 3)))) (ANON_STRING))))"}
{"paraphrased": "three hours or longer", "source": "three hours or one hour whose length is larger than three hours", "target": "(call listValue (call filter (call concat (number 3 en.hour) (number 1 en.hour)) (call ensureNumericProperty (string length)) (string >) (call ensureNumericEntity (number 3 en.hour))))", "qid": "calendarplus_train_94", "anonymized_target": "(call listValue (call filter (call concat (ANON_NUMBER) (ANON_NUMBER)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (ANON_NUMBER))))"}
{"paraphrased": "what meeting was in the place where two or fewer meetings were held", "source": "meeting whose location is location that is location of at most two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string <=) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_333", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "show me the length of meetings with people whove been to less than two meetings", "source": "meeting whose length is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_372", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meetings have a location that is the location of two meetings", "source": "meeting whose location is location that is location of two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_518", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "meeting with location of two meetings", "source": "meeting whose date is location that is location of two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_62", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meeting was in two places", "source": "meeting whose location is location that is location of two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_533", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meetings do i have that have multiple sessions", "source": "meeting whose location is location that is location of more than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string >) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_84", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meeting was in a place where no other meetings were", "source": "meeting whose location is location that is location of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call countComparative (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_train_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "what meeting has an attendee present who attended fewer than two meetings", "source": "meeting whose attendee is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_test_118", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "when is the meeting that shares an attendee conducted", "source": "meeting whose date is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string date) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_test_77", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "meeting with attendee who has attended less than two meetings", "source": "meeting whose attendee is person that is attendee of less than two meeting", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string attendee) (string =) (call countComparative (call getProperty (call singleton en.person) (string !type)) (call reverse (string attendee)) (string <) (number 2) (call getProperty (call singleton en.meeting) (string !type)))))", "qid": "calendarplus_test_46", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call countComparative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (ANON_NUMBER) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)))))"}
{"paraphrased": "total length of an important meeting on jan 2", "source": "total length of meeting that is important and whose date is jan 2", "target": "(call listValue (call aggregate (string sum) (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)) (string length))))", "qid": "calendarplus_train_2", "anonymized_target": "(call listValue (call aggregate (ANON_STRING) (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING))))"}
{"paraphrased": "what important meeting started before 10am", "source": "meeting that is important whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_131", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show me all important meetings starting after 10am", "source": "meeting that is important whose start time is larger than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string start_time)) (string >) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_80", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "what important meeting ended at or before 10am", "source": "meeting that is important whose end time is at most 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string end_time)) (string <=) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_189", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "which is the important meeting that starts earlier than 10 am", "source": "meeting that is important whose start time is smaller than 10am", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string is_important)) (call ensureNumericProperty (string start_time)) (string <) (call ensureNumericEntity (time 10 0))))", "qid": "calendarplus_train_255", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (time 10 0))))"}
{"paraphrased": "show all meeting locations with three hour limits", "source": "meeting whose location is location that is location of meeting whose length is three hours", "target": "(call listValue (call filter (call getProperty (call singleton en.meeting) (string !type)) (string location) (string =) (call filter (call getProperty (call singleton en.location) (string !type)) (call reverse (string location)) (string =) (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)))))", "qid": "calendarplus_train_241", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))))"}
{"paraphrased": "how many meetings are at least one to three hours", "source": "number of meeting whose length is at least three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string >=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_150", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings were three or less hours long", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_301", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings lasted between one hour or three hours at the most", "source": "number of meeting whose length is at most three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <=) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_test_33", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how many meetings last less than 3 hours ", "source": "number of meeting whose length is smaller than three hours or one hour", "target": "(call listValue (call .size (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string length)) (string <) (call ensureNumericEntity (call concat (number 3 en.hour) (number 1 en.hour))))))", "qid": "calendarplus_train_281", "anonymized_target": "(call listValue (call .size (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (call concat (ANON_NUMBER) (ANON_NUMBER))))))"}
{"paraphrased": "how long are the meetings from jan 2 onwards", "source": "length of meeting whose date is at least jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string length)))", "qid": "calendarplus_train_108", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "end time of meeting of jan 2", "source": "end time of meeting whose date is at least jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string end_time)))", "qid": "calendarplus_train_526", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "length of meeting not after jan 2", "source": "length of meeting whose date is at least jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string length)))", "qid": "calendarplus_train_101", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "when did the meeting on or after jan 2 start", "source": "start time of meeting whose date is at least jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string start_time)))", "qid": "calendarplus_train_72", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "jan 2 or later meeting end time", "source": "end time of meeting whose date is larger than jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >) (call ensureNumericEntity (date 2015 1 2))) (string end_time)))", "qid": "calendarplus_train_246", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "who went to the meetings on or after jan 2", "source": "attendee of meeting whose date is at least jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string attendee)))", "qid": "calendarplus_train_528", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "what are the lengths of meetings on or after january 2nd", "source": "length of meeting whose date is at least jan 2", "target": "(call listValue (call getProperty (call filter (call getProperty (call singleton en.meeting) (string !type)) (call ensureNumericProperty (string date)) (string >=) (call ensureNumericEntity (date 2015 1 2))) (string length)))", "qid": "calendarplus_train_197", "anonymized_target": "(call listValue (call getProperty (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))) (ANON_STRING)))"}
{"paraphrased": "what time did the three hour meeting that alice went to start", "source": "start time of meeting whose length is three hours and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_train_19", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
{"paraphrased": "what time does my three hour meeting start with alice", "source": "start time of meeting whose length is three hours and whose attendee is alice", "target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice) (string start_time)))", "qid": "calendarplus_train_425", "anonymized_target": "(call listValue (call getProperty (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING)))"}
