{"paraphrased": "neighborhood with apartments", "source": "neighborhood that is neighborhood of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_train_664", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what housing unit is found in the midtown east neighborhood", "source": "neighborhood that is neighborhood of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_407", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the neighborhood area of that apartment", "source": "neighborhood that is neighborhood of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_test_160", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what neighborhoods have apartments", "source": "neighborhood that is neighborhood of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_test_79", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is in midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_457", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "neighborhoods with apartments", "source": "neighborhood that is neighborhood of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_test_56", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "where is midtown west", "source": "neighborhood that is neighborhood of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_677", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "housing types in the midtown west", "source": "housing type that is housing type of housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "qid": "housing_train_143", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "looking for apartments", "source": "housing type that is housing type of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_train_131", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "what is the neighborhood of housing unit of the apartments", "source": "neighborhood that is neighborhood of housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))", "qid": "housing_train_344", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY)))"}
{"paraphrased": "apartments in the midtown west neighborhood", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_738", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit that is an aprtment", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_307", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing apartments in a midtown west neighborhood", "source": "housing unit whose neighborhood is midtown west and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_172", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing that is an apartment", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_207", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartment in the midtown west neighborhood", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_test_113", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "apartments in the midtown west neighborhood", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_474", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit is available in the area around mid town west", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_361", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units in the neighborhoods of midtown west", "source": "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_589", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit has houses of apartment kind", "source": "housing unit whose housing type is apartment and whose housing type is apartment", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_30", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all apartments in midtown west", "source": "housing unit whose housing type is apartment and whose neighborhood is midtown west", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_734", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit does not have apartment type of house", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_test_116", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "list all housing units that are apartments", "source": "housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_619", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find all units available midtown east", "source": "housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_539", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing not in midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_335", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that isnt in midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_616", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find housing units that is not an apartment", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_58", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit near midtown west", "source": "housing unit whose neighborhood is midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "qid": "housing_train_231", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me housing units that arent apartments", "source": "housing unit whose housing type is not apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))", "qid": "housing_train_496", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "exclude apartments from midtown west", "source": "housing unit whose neighborhood is not midtown west", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "qid": "housing_train_741", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing units that are apartments", "source": "housing unit whose housing type is apartment", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment))", "qid": "housing_train_505", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing in the neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing unit that is the same as the ones on 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_23", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_130", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit resembles 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_398", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is 900 mission ave and 123 sesame street", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_681", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "housing types like 123 sesame street or 900 mission avenue", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_55", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what are the neighborhoods of 123 sesame street and 900 mission avenue", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_624", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhood of 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_90", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "neighborhoods in 123 sesame street or 900 mission ave", "source": "neighborhood that is neighborhood of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_test_153", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "what kind of housing is 123 sesame street or 900 mission ave", "source": "housing type that is housing type of 123 sesame street or 900 mission ave", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))", "qid": "housing_train_365", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "unit with private bath", "source": "housing type that is housing type of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_699", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the type of housing that has a private room", "source": "housing type that is housing type of housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room))))", "qid": "housing_train_74", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what is the neighborhood of the apartment that is pet friendly", "source": "neighborhood that is neighborhood of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_630", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which neighborhoods have housing where dogs are allowed", "source": "neighborhood that is neighborhood of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_train_252", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which housing type allows pets", "source": "housing type that is housing type of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_train_112", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "what kinds of housing allow dogs", "source": "housing type that is housing type of housing unit that allows dogs", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs))))", "qid": "housing_test_123", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods of housing units that allows cats", "source": "neighborhood that is neighborhood of housing unit that allows cats", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats))))", "qid": "housing_train_554", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "name the neighborhood of the housing unit with private bath", "source": "neighborhood that is neighborhood of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_train_83", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "apartments with a private room", "source": "housing type that is housing type of housing unit that has a private room", "target": "(call listValue (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room))))", "qid": "housing_train_19", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with housing that have a private bathroom", "source": "neighborhood that is neighborhood of housing unit that has a private bath", "target": "(call listValue (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath))))", "qid": "housing_test_94", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING))))"}
{"paraphrased": "which housing posted after jan 2nd", "source": "housing unit whose posting date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_583", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which housing unit is posted on or before jan 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_368", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "units posted before january 2nd", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_288", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "find housing units posted before january 2nd", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_62", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing that was posted january 2 or later", "source": "housing unit whose posting date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_229", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "which housing unit was posted before jan 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_653", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing unit with a post date earlier than january 2", "source": "housing unit whose posting date is smaller than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_550", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing units posted after january 2", "source": "housing unit whose posting date is larger than jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_89", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing unit with a posting date at the latest january 2", "source": "housing unit whose posting date is at most jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string <=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_442", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose posting date is at least jan 2", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (call ensureNumericProperty (string posting_date)) (string >=) (call ensureNumericEntity (date 2015 1 2))))", "qid": "housing_train_527", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call ensureNumericProperty (ANON_STRING)) (ANON_STRING) (call ensureNumericEntity (date 2015 1 2))))"}
{"paraphrased": "show me places with a private room where cats are welcome", "source": "housing unit that allows cats and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string has_private_room)))", "qid": "housing_train_370", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "dog and cat friendly housing", "source": "housing unit that allows cats and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string allows_dogs)))", "qid": "housing_train_588", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find housing units with a private room", "source": "housing unit that has a private room and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string has_private_room)))", "qid": "housing_train_222", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing that allows cats and includes a private bath", "source": "housing unit that allows cats and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string has_private_bath)))", "qid": "housing_train_662", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing unit with a private room and allows cats", "source": "housing unit that has a private room and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string allows_cats)))", "qid": "housing_train_160", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "what housing unit contains a private room and allows cats", "source": "housing unit that allows cats and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string has_private_room)))", "qid": "housing_train_61", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "which is the housing unit that permits dogs inside it", "source": "housing unit that allows dogs and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string allows_dogs)))", "qid": "housing_train_445", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing unit with a private bath", "source": "housing unit that has a private bath and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string has_private_bath)))", "qid": "housing_test_50", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "housing unit with private bath as well as private room", "source": "housing unit that has a private bath and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string has_private_room)))", "qid": "housing_test_183", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "find housing units with a private room and is dog friendly", "source": "housing unit that allows dogs and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string has_private_room)))", "qid": "housing_train_629", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING)))"}
{"paraphrased": "show me housing with 800 square feet of space where cats are acceptable", "source": "housing unit that allows cats and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_201", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "housing that is 800 square feet with a private room", "source": "housing unit that has a private room and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_20", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units with a private room and has 1500 dollars as monthly rent", "source": "housing unit that has a private room and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_309", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "dogfriendly hosing that is 800 square feet", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_test_72", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "what 800 square housing allows dogs", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_516", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "private bath with 800 square feet", "source": "housing unit that has a private bath and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_698", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find cat friendly housing units that charge 1500 dollars as rent", "source": "housing unit that allows cats and whose monthly rent is 1500 dollars", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_cats)) (string rent) (string =) (number 1500 en.dollar)))", "qid": "housing_train_746", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "which housing unit with an area of 800 square feet has a private room", "source": "housing unit that has a private room and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_room)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_133", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "800 square feet housing unit which allows dogs", "source": "housing unit that allows dogs and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_test_111", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find all 800 square foot units with private baths", "source": "housing unit that has a private bath and whose size is 800 square feet", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string has_private_bath)) (string size) (string =) (number 800 en.square_feet)))", "qid": "housing_train_152", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (ANON_NUMBER)))"}
{"paraphrased": "find housing units of the type apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_test_142", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit is in the area of midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_485", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartments in the midtown west or chelsea neighborhoods", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_54", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "looking for housing that is either an apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_98", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "aparartment or condo units", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_181", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "apartment or condo", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_634", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me housing in midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_train_364", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "show me apartments and condos", "source": "housing unit whose housing type is apartment or condo", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call concat en.housing.apartment en.housing.condo)))", "qid": "housing_train_409", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "find housing units in the neighborhoods of midtown west or chelsea", "source": "housing unit whose neighborhood is midtown west or chelsea", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "qid": "housing_test_68", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat ANON_ENTITY ANON_ENTITY)))"}
{"paraphrased": "which housing unit has a jan 2nd posting", "source": "housing unit whose posting date is jan 2 and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_508", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "what housing unit was posted on jan 2", "source": "housing unit whose posting date is jan 2 and whose posting date is jan 2", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string posting_date) (string =) (date 2015 1 2)))", "qid": "housing_train_145", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)))"}
{"paraphrased": "want a housing type like 123 sesame street", "source": "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_413", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "show me housing that is the same type as 123 sesame street", "source": "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_1", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the neighborhood of 123 sesame street called as", "source": "neighborhood that is neighborhood of 123 sesame street and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_655", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what is the housing type of 123 sesame street", "source": "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing) (string !type)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_341", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "neighborhood of 123 sesame street", "source": "neighborhood that is neighborhood of 123 sesame street and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.neighborhood) (string !type)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_591", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that was posted on january 2", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_724", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "what housing unit was posted on jan 2 or feb 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_656", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "what housing is posted either jan 2nd or feb 3rd", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_test_159", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "a housing unit posted on january 2 or february 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_211", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "housing posted on january 2 or february 3", "source": "housing unit whose posting date is jan 2 or feb 3", "target": "(call listValue (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call concat (date 2015 1 2) (date 2015 2 3))))", "qid": "housing_train_402", "anonymized_target": "(call listValue (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (call concat (date 2015 1 2) (date 2015 2 3))))"}
{"paraphrased": "housing unit posted january 2 and the same rent as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string rent)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_374", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit in the same neighborhood as 123 sesame street was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_602", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit posted on jan 2 is the same size as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is size of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string size)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_246", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "find a housing unit posted on january 2 with the same rent price as 123 sesame st", "source": "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string rent)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_25", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing that is the same type as 123 sesame street that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_169", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit posted on jan 2 has the same rent as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string rent)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_565", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit is in the same neighborhood as 123 sesame st and was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_209", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what housing unit posted on jan 2 is the same kind as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_180", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "which housing unit was posted january 2 that is the same housing type as 123 sesame st", "source": "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_train_469", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "housing unit posted january 2 with the same rent as 123 sesame street", "source": "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call reverse (string rent)) (string =) en.housing_unit.123_sesame_street))", "qid": "housing_test_132", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (call reverse (ANON_STRING)) (ANON_STRING) ANON_ENTITY))"}
{"paraphrased": "what neighborhood has the most apartment complexes", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_357", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what neighborhood has the least amount of housing", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_107", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "where are the most number of housing units found", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_355", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the most housing units", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_38", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what housing units have a small amount of housing units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_58", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "housing types of the most units", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_225", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "apartments with the least amount of units", "source": "housing type that is housing type of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string min) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_test_158", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhood with the most available housing", "source": "neighborhood that is neighborhood of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string max) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_646", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "what is the mostused housing type", "source": "housing type that is housing type of the most number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.housing) (string !type)) (string max) (call reverse (string housing_type)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_338", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "neighborhoods with the least housing units", "source": "neighborhood that is neighborhood of the least number of housing unit", "target": "(call listValue (call countSuperlative (call getProperty (call singleton en.neighborhood) (string !type)) (string min) (call reverse (string neighborhood)) (call getProperty (call singleton en.housing_unit) (string !type))))", "qid": "housing_train_736", "anonymized_target": "(call listValue (call countSuperlative (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (call reverse (ANON_STRING)) (call getProperty (call singleton ANON_ENTITY) (ANON_STRING))))"}
{"paraphrased": "a unit with a private bath that posted on january 2", "source": "housing unit whose posting date is jan 2 and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))", "qid": "housing_train_635", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "find a housing unit posted on january 2 and that has a private room", "source": "housing unit whose posting date is jan 2 and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))", "qid": "housing_train_332", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what housing unit with a private room was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that has a private room", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))", "qid": "housing_train_405", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what housing unit with a private bath was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))", "qid": "housing_train_91", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what housing unit allowing cats was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_cats)))", "qid": "housing_train_283", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing with private bath that was posted on january 2", "source": "housing unit whose posting date is jan 2 and that has a private bath", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))", "qid": "housing_train_17", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "what housing unit allowing dogs was posted on jan 2", "source": "housing unit whose posting date is jan 2 and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_dogs)))", "qid": "housing_train_340", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing that allows dogs and was posted on january 2", "source": "housing unit whose posting date is jan 2 and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_dogs)))", "qid": "housing_train_265", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "find a housing unit posted on january 2 and that allows cats", "source": "housing unit whose posting date is jan 2 and that allows cats", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_cats)))", "qid": "housing_train_13", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
{"paraphrased": "housing that allows dogs that posted on january 2", "source": "housing unit whose posting date is jan 2 and that allows dogs", "target": "(call listValue (call filter (call filter (call getProperty (call singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_dogs)))", "qid": "housing_train_721", "anonymized_target": "(call listValue (call filter (call filter (call getProperty (call singleton ANON_ENTITY) (ANON_STRING)) (ANON_STRING) (ANON_STRING) (date 2015 1 2)) (ANON_STRING)))"}
